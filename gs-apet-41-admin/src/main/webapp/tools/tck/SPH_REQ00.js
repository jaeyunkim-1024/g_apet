//*-----------------------------------------------------------------------------
//* 화면 ID  : SPH_REQ00.JS
//* 화면명   : 소프트폰(AVAYA) 리퀘스트 일반 함수
//* 작성자   : EIT-박준연(jypark@enovationit.com)
//*----------------------------------------------------------------------------
//* 이력사항
//*----------------------------------------------------------------------------
// 2009, 04, 30 EIT-박준연 최초 구성
//*----------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------
// 1. 전역변수 설정
//--------------------------------------------------------------------------------------------------
var g_PriCti = "10.101.51.21";	//TSERVER PRIMARY 
var g_PriCtiPort = "5000";  //TSERVER PRIMARY PORT
var g_BackCti = "10.101.51.22"; //TSERVER PRIMARY
var g_BackCtiPort = "5000"; //TSERVER PRIMARY PORT
var g_Prefix = ""; //외부발신번호
var g_Area = ""; //지역번호
var g_isHolding = false; //보류 상태인지 여부

var g_addpHost = "0";
var g_addpRemote = "70";

//var g_AgtId = "69999";
//var g_AgtExt = "22232";
//--------------------------------------------------------------------------------------------------
// 2. CTI에 접속한다 업무시작
//--------------------------------------------------------------------------------------------------
//==================================================================================================
//함수 : f_JobStart
//인자 : agtid - AGENTID, extid - 내선번호
//반환 : 
//==================================================================================================
function f_JobStart()
{
	try
	{
		var g_AgtId = $("#agtId").val();
		var g_AgtExt = $("#agtExt").val();

		if(g_AgtId == null || g_AgtId == ""){
			alert("CTI ID가 설정되어 있지 않습니다.");
			return;
		}
		if(g_AgtExt == null || g_AgtExt == ""){
			alert("CTI 내선번호가 설정되어 있지 않습니다.");
			return;
		}
		document.o_CTI.setConfig(g_PriCti, g_PriCtiPort, g_BackCti, g_BackCtiPort, g_AgtId, g_AgtExt, "", g_Prefix, g_Area); //정보 설정
		document.o_CTI.setAddp(g_addpHost, g_addpRemote); // 2017.01.04 신규
		document.o_CTI.TConnection();
		document.o_CTI.TLogin();
	}
	catch(err)
	{
		alert("f_JobStart() :" + err.description);
	}
}

//--------------------------------------------------------------------------------------------------
// 3. CTI에 접속종료한다 업무끝
//--------------------------------------------------------------------------------------------------
//==================================================================================================
//함수 : f_JobStop
//인자 : 
//반환 : 
//==================================================================================================
function f_JobStop() 
{
	try
	{
		document.o_CTI.TLogout();
		document.o_CTI.TDisconnect();
	}
	catch(err)
	{
		alert("f_JobStop() :" + err.description);
	}
}

//--------------------------------------------------------------------------------------------------
// 4. 상담대기를 한다.
//--------------------------------------------------------------------------------------------------
//==================================================================================================
//함수 : f_Ready
//인자 : 
//반환 : 
//==================================================================================================
function f_Ready() 
{
	try
	{
		document.o_CTI.TReady(); 
	}
	catch(err)
	{
		alert("f_Ready() :" + err.description);
	}
}

//--------------------------------------------------------------------------------------------------
// 5. 상담 휴식을 한다.
//--------------------------------------------------------------------------------------------------
//==================================================================================================
//함수 : f_NotReady
//인자 : rescode - 이석사유
//반환 : 
//==================================================================================================
function f_NotReady(rescode) 
{
	try
	{
		document.o_CTI.TNotReady(rescode);
	}
	catch(err)
	{
		alert("f_NotReady() :" + err.description);
	}
}

//--------------------------------------------------------------------------------------------------
// 6. 통화후 작업상태로 간다.
//--------------------------------------------------------------------------------------------------
//==================================================================================================
//함수 : f_AfterCallWork
//인자 : 
//반환 : 
//==================================================================================================
function f_AfterCallWork() 
{
	try  
	{
		document.o_CTI.TAfterCallWork();
	}
	catch(err)
	{
		alert("f_AfterCallWork() :" + err.description);
	}
}

//--------------------------------------------------------------------------------------------------
// 7. 상대방에게 전화를 건다.
//--------------------------------------------------------------------------------------------------
//==================================================================================================
//함수 : f_Dial
//인자 : telno - 발신전화번호
//반환 : 
//==================================================================================================
function f_Dial(telno) 
{
	try
	{
		
		document.o_CTI.TDial(telno);
	}
	catch(err)
	{
		alert("f_Dial() :" + err.description);
	}
}

//--------------------------------------------------------------------------------------------------
// 8. 현재 통화중인 전화를 끊는다.
//--------------------------------------------------------------------------------------------------
//==================================================================================================
//함수 : f_Release
//인자 : 
//반환 : 
//==================================================================================================
function f_Release() 
{
	try 
	{
		document.o_CTI.THangup(); 
	}
	catch(err)
	{
		alert("f_Release() :" + err.description);
	}
}

//--------------------------------------------------------------------------------------------------
// 9. 현재 벨중인 전화를 받는다.
//--------------------------------------------------------------------------------------------------
//==================================================================================================
//함수 : f_Answer
//인자 : 
//반환 : 
//==================================================================================================
function f_Answer() 
{
	try 
	{
		document.o_CTI.TAnswer(); 
	}
	catch(err)
	{
		alert("f_Answer() :" + err.description);
	}
}

//--------------------------------------------------------------------------------------------------
// 9.1 현재 통화중인 전화를 보류시킨다.
//--------------------------------------------------------------------------------------------------
//==================================================================================================
//함수 : f_Hold
//인자 : 
//반환 : 
//==================================================================================================
function fncHold_Click() {
	try{
		if(!g_isHolding){
			g_isHolding = true;
			f_Hold();
			document.all.btnHold.src = "images/bt_11.jpg";
		}else{
			g_isHolding = false;
			f_UnHold();
			document.all.btnHold.src = "images/bt_04.gif";
		}
	}catch(err){
		alert("fncHold_Cick() :" + err.description);
	}
} 

//--------------------------------------------------------------------------------------------------
// 10. 현재 통화중인 전화를 보류시킨다.
//--------------------------------------------------------------------------------------------------
//==================================================================================================
//함수 : f_Hold
//인자 : 
//반환 : 
//==================================================================================================
function f_Hold()
{
	try
	{
		document.o_CTI.THold();
	}
	catch(err)
	{
		alert("f_Hold() :" + err.description);
	}
}

//--------------------------------------------------------------------------------------------------
// 11. 보류중인 전화를 해제한다.
//--------------------------------------------------------------------------------------------------
//==================================================================================================
//함수 : f_UnHold
//인자 : 
//반환 : 
//==================================================================================================
function f_UnHold()
{
	try
	{
		document.o_CTI.TUnHold();
	}
	catch(err)
	{
		alert("f_UnHold() :" + err.description);
	}
}

//--------------------------------------------------------------------------------------------------
// 12. 2스텝으로 호전환 한다.
//--------------------------------------------------------------------------------------------------
//==================================================================================================
//함수 : f_TransferInit
//인자 : telno - 발신 전화번호
//반환 : 
//==================================================================================================
function f_TransferInit(telno) 
{ 
	try
	{
		if(telno == "")
		{
			return;
		}
		//document.o_CTI.TAttachUserData("transfer", "1");
		document.o_CTI.TTransferInit(telno); 
	}
	catch(err)
	{
		alert("f_TransferInit() :" + err.description);
	}
}

//--------------------------------------------------------------------------------------------------
// 13. 1스텝으로 호전환 한다.
//--------------------------------------------------------------------------------------------------
//==================================================================================================
//함수 : f_TransferMute
//인자 : telno - 발신 전화번호
//반환 : 
//==================================================================================================
function f_TransferMute(telno) 
{
	try
	{
		if(telno == "")
		{
			return;
		}
		//document.o_CTI.TAttachUserData("transfer", "1");
		document.o_CTI.TTransferMute(telno); 
	}
	catch(err)
	{
		alert("f_TransferMute() :" + err.description);
	}
}

//--------------------------------------------------------------------------------------------------
// 14. 3자통화를 시도한다.
//--------------------------------------------------------------------------------------------------
//==================================================================================================
//함수 : f_ConferenceInit
//인자 : telno - 발신 전화번호
//반환 : 
//==================================================================================================
function f_ConferenceInit(telno) 
{
	try
	{
		if(telno == "")
		{
			alert("입력하신 전화번호가 없습니다.");
			return;
		}
		document.o_CTI.TConferenceInit(telno);
	}
	catch(err)
	{
		alert("f_ConferenceInit() :" + err.description);
	}
}

//--------------------------------------------------------------------------------------------------
// 15. 호전환 요청 및 3자통화 요청에 관련하여 완료시킨다.
//--------------------------------------------------------------------------------------------------
//==================================================================================================
//함수 : f_Complete
//인자 : 
//반환 : 
//==================================================================================================
function f_Complete() 
{
	try
	{
		document.o_CTI.TCompleate();
	}
	catch(err)
	{
		alert("f_Complete() :" + err.description);
	}
}

//--------------------------------------------------------------------------------------------------
// 16. 호전환 요청 및 3자통화 요청에 관련하여 취소시킨다.
//--------------------------------------------------------------------------------------------------
//==================================================================================================
//함수 : f_Reconnect
//인자 : 
//반환 : 
//==================================================================================================
function f_Reconnect()
{ 
	try
	{
		document.o_CTI.TReconnect();
	}
	catch(err)
	{
		alert("f_Reconnect() :" + err.description);
	}
}

//--------------------------------------------------------------------------------------------------
// 20. 상담원 상태
//--------------------------------------------------------------------------------------------------
//==================================================================================================
//함수 : f_AgentStatus()
//인자 : 
//반환 : 
//==================================================================================================

function f_AgentStatus()
{


	try
	{

		var dn = $("#usrNo").val();
		
		if(dn == "")
		{
			alert("입력하신 DN번호가 없습니다.");
			return;
		}
		document.o_CTI.TAgentStatus(dn);

	}
	catch(err)
	{
		alert("f_AgentStatus() : dnnum : " + dn + err.description);
	}


}


//--------------------------------------------------------------------------------------------------
// 22. 대기콜수
//--------------------------------------------------------------------------------------------------
//==================================================================================================
//함수 : f_WaitStatus()
//인자 : 
//반환 : 
//==================================================================================================

function f_WaitcallStatus(dn)
{


	try
	{


		if(dn == "")
		{
			alert("입력하신 DN번호가 없습니다.");
			return;
		}
		document.o_CTI.TWaitStatus(dn);

	}
	catch(err)
	{
		alert("f_TWaitStatus() : dnnum : " + dn + err.description);
	}


}



//--------------------------------------------------------------------------------------------------
// 17. 버튼제어
//--------------------------------------------------------------------------------------------------
//==================================================================================================
//함수 : f_ButtonStatus
//인자 : btnStatus - 버튼 상태
//반환 : 
//==================================================================================================
function f_ButtonStatus(args)
{
	var arr = new Array(document.all.btnReady, 
						 document.all.btnDial, 	
						 document.all.btnNotReady,
						 document.all.btnTransfer,
						 document.all.btnHold,
						 document.all.btnConfer,
						 document.all.btnAnswer,
						 document.all.btnComplete,
						 document.all.btnRelease,
						 document.all.btnReConnect
						);
	var enarr; //사용가능한 버튼 배열
	
	try{
		//전체 버튼 모두 비활성화
		for(i=0; i<arr.length;i++) {
			f_StatusDisable(arr[i]);
		}
		//사용가능 버튼 ARRAY설정
		switch(args) {
			case "READY": //대기상태일때 -  휴식, 걸기
				enarr = new Array(document.all.btnDial, 	
						 							document.all.btnNotReady
						 							);
				break;
			case "WORK":  //후처리일때 - 대기, 걸기
				enarr = new Array(document.all.btnDial, 	
						 							document.all.btnReady
						 							);			
			case "NOTREADY": //휴식일때 - 대기, 걸기
				enarr = new Array(document.all.btnDial, 	
						 							document.all.btnReady
						 							);
				break;
			case "RING": //전화벨 울릴때 - 받기
				enarr = new Array(document.all.btnAnswer);
				break;
			case "ESTABLISH": //통화중일때 - 끊기,호전환, 3자, 보류 통화, 취소
				enarr = new Array(
							 document.all.btnTransfer,
							 document.all.btnHold,
							 document.all.btnConfer,
							 document.all.btnComplete,
							 document.all.btnRelease,
							 document.all.btnReConnect
							);
				break;
			case "HOLD": // 보류일때 - 보류해제
				enarr = new Array(document.all.btnHold);
				break;
			case "DIAL": //전화 걸때 - 끊기
				enarr = new Array(document.all.btnRelease);	
				break;
			case "CONSULT": //전화 걸때 - 끊기
				enarr = new Array(document.all.btnComplete,
							 						document.all.btnReConnect);	
				break;
			default:
				enarr = new Array(document.all.btnDial, 	
						 							document.all.btnReady
						 							);
				break;
		} 
		
		//전체 ARRAY에서 가능한 불가능 변경하기
		for(i=0;i<enarr.length;i++){
			f_StatusEnable(enarr[i]);
		}
		
	}catch(err){
		alert("fncButtonStatus() :" + err.description);
	}finally{
		arr = null;
		enarr = null;
	}
}

//--------------------------------------------------------------------------------------------------
// 18. 해당 오브젝트를 사용가능 한 상태로 변경
//--------------------------------------------------------------------------------------------------
//==================================================================================================
//함수 : f_StatusEnable
//인자 : args - 오브젝트명
//반환 : 
//==================================================================================================
function f_StatusEnable(args){
	try{
		if(args != undefined || args != "") {
			args.disabled = false;
			args.style.filter = "";
		}
	}catch(err){
		alert("f_StatusEnable() :" + err.description);
	}
}

//--------------------------------------------------------------------------------------------------
// 19. 해당 오브젝트를 사용 불가능 한 상태로 변경
//--------------------------------------------------------------------------------------------------
//==================================================================================================
//함수 : f_StatusDisable
//인자 : args - 오브젝트명
//반환 : 
//==================================================================================================
function f_StatusDisable(args){
	try{
		if(args != undefined || args != "") {
			args.disabled = true;
			args.style.filter = "gray()";
		}
	}catch(err){
		alert("f_StatusDisable() :" + err.description);
	}
} 

//--------------------------------------------------------------------------------------------------
// 20. prefix 변경을 위한 함수 - 2017.01.14 신규
//--------------------------------------------------------------------------------------------------
//==================================================================================================
//함수 : f_setPrefix
//인자 : args - 원하는 prefix
//반환 : 
//==================================================================================================
function f_setPrefix(args) {
	try {
		document.o_CTI.setPrefix(args);
	} catch(err) {
		alert("f_setPrefix() : " + err.description);
	}
}

