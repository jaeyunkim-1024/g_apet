<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc		http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
						http://www.springframework.org/schema/beans		http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
						http://www.springframework.org/schema/aop		http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
						http://www.springframework.org/schema/context	http://www.springframework.org/schema/context/spring-context-4.2.xsd
						http://www.springframework.org/schema/task		http://www.springframework.org/schema/task/spring-task-4.2.xsd ">

	<!--
		@Component, @Controller, @Service, @Repository
		BeanPostProcessor를 함께 등록
		자동 설정
	-->
	<context:component-scan base-package="admin" />

	<!--
		RequiredAnnotationBeanPostProcessor : @Required
		AutowiredAnnotationBeandPostProcessor : @Autowird
		CommonAnnotationBeanPostProcessor : @Resource, @PostConstruct @PreDestroy
		ConfigurationClassPostProcessor : @Configuration
		자동설정
	-->
	<!--
		<context:annotation-config />
	-->

	<!--
		@Aspect Bean객체를 Aspect로 등록
		실제 Class에는 @Component를 설정하여 Bean으로 등록 또는 XML파일에 Bean으로 등록한다
		proxy-target-class="true" 이 설정을 추가하면 CGLib를 사용하고, 삭제하면 JDK 프록시를 사용하는 것을 의미한다.
		CGLib사용 시 해당 라이브러리 추가 필수
		예) <aop:aspectj-autoproxy proxy-target-class="true" />
	-->
	<aop:aspectj-autoproxy />

	<!-- MVC 3.1 DispatcherServlet 전략 자동 등록 -->
	<mvc:annotation-driven>

		<mvc:message-converters>
			<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="supportedMediaTypes" value="application/json;charset=UTF-8" />
			</bean>
		</mvc:message-converters>

	</mvc:annotation-driven>

	<!-- Interceptor -->
	<mvc:interceptors>

		<!-- Locale Change Interceptor -->
		<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" />

		<!-- BOS Interceptor -->
		<bean class="admin.web.config.interceptor.AdminWebInterceptor" />

	</mvc:interceptors>

	<!-- View Resolver -->
	<bean id="downloadViewResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<property name="order" value="0" />
	</bean>

	<bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView"/>
		<property name="order" value="1" />
	</bean>

	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/view" />
		<property name="suffix" value=".jsp" />
		<property name="order" value="2" />
	</bean>

	<bean class="admin.web.config.exception.AdminWebExceptionResolver" />

	<!-- BeanNameView -->
	<bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView" />
	<bean id="fileView" class="framework.common.view.FileView" />
	<bean id="fileUrlView" class="framework.common.view.FileUrlView" />
	<bean id="fileNcpView" class="framework.common.view.FileNcpView" />
	<bean id="imageView" class="framework.common.view.ImageView" />
	<bean id="excelView" class="admin.web.config.view.ExcelView" />
	<bean id="fileAllView" class="framework.common.view.FileAllView" />

	<!-- file upload 관련 설정 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="100000000"/>
	</bean>

	<!-- mybatis 인터셉터 등록 - 보안요건(개인정보 조회 시, 실행 쿼리 로그 저장 ) -->
	<bean id="queryInterceptor" class="admin.web.config.interceptor.QueryInterceptor"/>
	<bean id="updateInterceptor" class="admin.web.config.interceptor.UpdateInterceptor"/>
</beans>

