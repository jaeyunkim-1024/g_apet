<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="claim">

	<select id="pageClaim" resultType="biz.app.claim.model.ClaimListVO">
		<!--
			Query Name : claim.pageClaim
			Description : 클레임 목록 페이징 조회
		-->
		SELECT Z.* FROM (
		SELECT 	/* QUERYID(claim.pageClaim) */
						 CB.CLM_NO			/*클레임 번호             */
						,CB.ST_ID			/*사이트 ID		  */
						,ST.ST_NM           /* 사이트 명             */
						,CB.ORD_NO			/*주문 번호		  */
						,CB.CLM_TP_CD		/*클레임 유형 코드	  */
						,CB.CLM_STAT_CD		/*클레임 상태 코드	  */
						,CB.ACPT_DTM		/*접수 일시		  */
						,CB.CNC_DTM			/*취소 일시		  */
						,CB.CPLT_DTM		/*완료 일시		  */
						<!-- ,CD.CLM_DTL_SEQ		/*클레임 상세 순번	  */ -->
						<!-- ,CD.CLM_DTL_STAT_CD	/*클레임 상세 상태 코드   */ -->
						<!-- ,CD.CLM_QTY			/*클레임 수량		  */ -->
						,CD.CLM_DTL_SEQ		AS ORIGIN_CLM_DTL_SEQ /*클레임 상세 순번	  */
						,CD.CLM_DTL_TP_CD	/*클레임 상세 유형 코드   */
						,CD.CLM_RSN_CD		/*클레임 사유 코드	  */
						,CD.GOODS_ID		/*상품 아이디		  */
						,IF(OD.PAK_GOODS_ID IS NOT NULL, GB.GOODS_NM, CD.GOODS_NM) AS GOODS_NM	/*상품 명		      */
						,CD.ITEM_NO			/*단품 번호		  */
						,CD.ITEM_NM			/*단품 명		      */
						,CD.CLM_CPLT_DTM	/*클레임 완료 일시	  */
						,CD.ORD_DTL_SEQ
						,(SELECT COUNT(DISTINCT ORD_NO, ORD_DTL_SEQ) FROM CLAIM_DETAIL WHERE CLM_NO = CD.CLM_NO) AS CLM_DTL_CNT
						<!-- 클레임의 클레임으로 인해 추가함 , 2021.05.28 by kek01 -->
						,MIN(CD.CLM_DTL_SEQ) OVER(PARTITION BY CD.CLM_NO, CD.ORD_NO, CD.ORD_DTL_SEQ, CD.CLM_DTL_TP_CD )     AS CLM_DTL_SEQ
						,MIN(CD.CLM_DTL_STAT_CD) OVER(PARTITION BY CD.CLM_NO, CD.ORD_NO, CD.ORD_DTL_SEQ, CD.CLM_DTL_TP_CD ) AS CLM_DTL_STAT_CD
						,SUM(CD.CLM_QTY) OVER(PARTITION BY CD.CLM_NO, CD.ORD_NO, CD.ORD_DTL_SEQ, CD.CLM_DTL_TP_CD )         AS CLM_QTY
						,IF(CD.CLM_QTY = SUM(CD.CLM_QTY) OVER(PARTITION BY CD.CLM_NO, CD.ORD_NO, CD.ORD_DTL_SEQ, CD.CLM_DTL_TP_CD ), 'N','Y') AS CLM_CHAIN_YN
						,CD.ORG_CLM_NO 
						,CD.ORG_CLM_DTL_SEQ 
			FROM  	CLAIM_BASE CB
						INNER JOIN ST_STD_INFO ST ON ( ST.ST_ID = CB.ST_ID )
						INNER JOIN  CLAIM_DETAIL CD ON (CB.CLM_NO = CD.CLM_NO )
						INNER JOIN ORDER_DETAIL OD ON (OD.ORD_NO = CD.ORD_NO AND OD.ORD_DTL_SEQ = CD.ORD_DTL_SEQ)
						INNER JOIN GOODS_BASE GB ON (GB.GOODS_ID = OD.GOODS_ID)
						JOIN COMPANY_BASE CP ON (CD.COMP_NO = CP.COMP_NO)
						JOIN ORDER_BASE OB ON (OB.ORD_NO = CB.ORD_NO)
			WHERE 	1=1
			  <include refid="pageClaimWhere" />
			  ORDER BY CB.ACPT_DTM DESC
			) Z  WHERE Z.ORIGIN_CLM_DTL_SEQ = CLM_DTL_SEQ  
			  <include refid="bizCommon.pageSql" />
	</select>

	<select id="pageClaimCount" resultType="java.lang.Integer">
		<!--
			Query Name : claim.pageClaimCount
			Description : 클레임 목록 페이징 카운트 조회
		-->
		SELECT COUNT(Z.CLM_NO) FROM (
			SELECT 	/* QUERYID(claim.pageClaimCount) */
			 		CB.CLM_NO			/*클레임 번호             */
			 		,CD.CLM_DTL_SEQ		AS ORIGIN_CLM_DTL_SEQ /*클레임 상세 순번	  */
			 		,MIN(CD.CLM_DTL_SEQ) OVER(PARTITION BY CD.CLM_NO, CD.ORD_NO, CD.ORD_DTL_SEQ, CD.CLM_DTL_TP_CD )     AS CLM_DTL_SEQ
			FROM  	CLAIM_BASE CB
						INNER JOIN ST_STD_INFO ST ON ( ST.ST_ID = CB.ST_ID )
						INNER JOIN  CLAIM_DETAIL CD ON (CB.CLM_NO = CD.CLM_NO )
						JOIN COMPANY_BASE CP ON (CD.COMP_NO = CP.COMP_NO)
						JOIN ORDER_BASE OB ON (OB.ORD_NO = CB.ORD_NO)
			WHERE 1=1
			<include refid="pageClaimWhere" />
		) Z  WHERE Z.ORIGIN_CLM_DTL_SEQ = CLM_DTL_SEQ			
	</select>

	<sql id="pageClaimWhere">
	     <if test="clmTpCd != null and clmTpCd != ''">
		 AND CB.CLM_TP_CD = #{clmTpCd}
		 </if>
	     <if test="clmStatCd != null and clmStatCd != ''">
		 AND CB.CLM_STAT_CD = #{clmStatCd}
		 </if>
		 <if test="mbrNo != null">
         AND 		CB.MBR_NO = #{mbrNo}
         </if>
		<if test="clmAcptDtmStart != null">
		AND 		CB.ACPT_DTM <![CDATA[>=]]> #{clmAcptDtmStart}
		</if>
		<if test="clmAcptDtmEnd != null">
		AND 		CB.ACPT_DTM <![CDATA[<=]]> DATE_ADD(#{clmAcptDtmEnd},INTERVAL 1 DAY)
		</if>
		 <if test='ordNo != null and ordNo != ""'>
		 AND 		CB.ORD_NO = #{ordNo}
		 </if>
		<if test="ordNm != null and ordNm != ''">
		AND 		CB.ORD_NO IN ( SELECT ORD_NO FROM ORDER_BASE WHERE ORD_NM IN (#{ordNm, jdbcType=VARCHAR, typeHandler=biz.common.typehandler.CryptoTypeHandler}, #{ordNm}) )
		</if>
		<if test="ordrTel != null and ordrTel != ''">
		AND 		CB.ORD_NO IN ( SELECT ORD_NO FROM ORDER_BASE WHERE ORDR_TEL IN (#{ordrTel, jdbcType=VARCHAR, typeHandler=biz.common.typehandler.CryptoTypeHandler}, #{ordrTel}) )
		</if>
		<if test="ordrMobile != null and ordrMobile != ''">
		AND 		CB.ORD_NO IN ( SELECT ORD_NO FROM ORDER_BASE WHERE ORDR_MOBILE IN (#{ordrMobile, jdbcType=VARCHAR, typeHandler=biz.common.typehandler.CryptoTypeHandler}, #{ordrMobile}) )
		</if>
		<if test="goodsNm != null and goodsNm != ''">
		AND		CD.GOODS_NM LIKE CONCAT( '%', #{goodsNm}, '%' )
		</if>

		<if test='stId != null'>
	     AND CB.ST_ID = #{stId}
		</if>
		<if test='searchValueGoods != null and searchValueGoods != ""'>
				<choose>
					<when test='searchKeyGoods == "type01"'>
						/* 상품명 : GOODS_NM */
						AND		CD.GOODS_NM LIKE CONCAT( '%', #{searchValueGoods}, '%' )
					</when>
					<when test='searchKeyGoods == "type02"'>
						/* 상품아이디 : GOODS_ID */
						AND		CD.GOODS_ID = #{searchValueGoods}
					</when>
					<when test='searchKeyGoods == "type03"'>
						/* 단품명 : ITEM_NM */
						AND		CD.ITEM_NM LIKE CONCAT( '%', #{searchValueGoods}, '%' )
					</when>
					<when test='searchKeyGoods == "type04"'>
						/* 단품번호 : ITEM_NO */
						AND		CD.ITEM_NO = #{searchValueGoods}
					</when>
					<when test='searchKeyGoods == "type00"'>
						AND		(CD.GOODS_NM LIKE CONCAT( '%', #{searchValueGoods}, '%' ) 
									OR CD.GOODS_ID = #{searchValueGoods})
					</when>
				</choose>
			</if>
			<if test="searchValueOrder != null and searchValueOrder != ''">
			    <choose>
			        <when test="searchKeyOrder == 'type01'">
			AND		OB.ORD_NO = #{searchValueOrder}
			        </when>
			        <when test="searchKeyOrder == 'type02'">
			AND 		OB.ORD_NM IN (#{searchValueOrder, jdbcType=VARCHAR, typeHandler=biz.common.typehandler.CryptoTypeHandler}, #{searchValueOrder})
			        </when>
			        <when test="searchKeyOrder == 'type03'">
			AND 		OB.ORDR_ID IN (#{searchValueOrder, jdbcType=VARCHAR, typeHandler=biz.common.typehandler.CryptoTypeHandler}, #{searchValueOrder})
			        </when>
			    </choose>
			</if>
			<if test="lowCompNo != null and lowCompNo != ''">
            AND CD.COMP_NO = #{lowCompNo} AND CP.UP_COMP_NO = #{compNo}
            </if>
            <if test="lowCompNo == null or lowCompNo == ''">
                <if test="compNo != null and compNo != ''">
            AND CD.COMP_NO = #{compNo}
                </if>
            </if>
			<if test="clmNo != null and clmNo != ''">
				AND	 CB.CLM_NO = #{clmNo}
			</if>
			<if test="clmDtlTpCd != null and clmDtlTpCd != ''">
			AND	 CD.CLM_DTL_TP_CD = #{clmDtlTpCd}
			</if>
			<if test='clmDtlStatCd != null and clmDtlStatCd != ""'>
			/* 클레임 상세 상태 코드 */
			AND		CD.CLM_DTL_STAT_CD = #{clmDtlStatCd}
			</if>
	</sql>

	<select id="pageClaimInterface" resultType="biz.app.claim.model.interfaces.ClaimListVO">
		<!--
			Query Name : claim.pageClaimInterface
			Description : 클레임 목록 페이징 조회 (API용)
		-->
		SELECT /* QUERYID(claim.pageClaimInterface) */
			 CB.CLM_NO			/*클레임 번호             */
			,CB.ST_ID			/*사이트 ID		  */
			,ST.ST_NM           /* 사이트 명             */
			,CB.ORD_NO			/*주문 번호		  */
			,CB.CLM_TP_CD		/*클레임 유형 코드	  */
			,CB.CLM_STAT_CD		/*클레임 상태 코드	  */
			,CB.ACPT_DTM		/*접수 일시		  */
			,CB.CNC_DTM			/*취소 일시		  */
			,CB.CPLT_DTM		/*완료 일시		  */
			,CB.SWAP_YN		/* 맞교환여부 */
			,CB.ORD_MDA_CD	/* 주문매체코드 */
			,CB.CHNL_ID	/* 채널ID */
			,CD.CLM_DTL_SEQ		/*클레임 상세 순번	  */
			,CD.CLM_DTL_TP_CD	/*클레임 상세 유형 코드   */
			,CD.CLM_DTL_STAT_CD	/*클레임 상세 상태 코드   */
			,CD.CLM_RSN_CD		/*클레임 사유 코드	  */
			,CD.CLM_RSN_CONTENT 	/* 클레임 사유 내용 */
			,CD.CLM_DENY_RSN_CONTENT		/* 클레임 거부 내용 */
			,CD.ORD_DTL_SEQ 	/* 주문 상세 순번 */
			,CD.COMP_NO			/* 업체번호 */
			,CD.COMP_GOODS_ID 	/* 업체상품아이디 */
			,CD.GOODS_ID		/*상품 아이디		  */
			,CD.GOODS_NM		/*상품 명		      */
			,CD.DISP_CLSF_NO	/* 전시분류번호 */
			,CD.ITEM_NO			/*단품 번호		  */
			,CD.ITEM_NM			/*단품 명		      */
			,CD.COMP_ITEM_ID	/* 업체단품번호 */
			,CD.DLVR_NO			/* 배송번호 */
			,CD.DLVRC_NO		/* 배송비번호 */
			,CD.DLVRA_NO		/* 배송지번호 */
			,CD.RTRNA_NO		/* 회수지번호 */
			,CD.SALE_AMT		/* 판매금액 */
			,CD.PAY_AMT			/* 결제금액 */
			,CD.CLM_QTY			/*클레임 수량		  */
			,CD.CLM_CPLT_DTM	/*클레임 완료 일시	  */
			, PB.PAY_NO
            , PB.PAY_MEANS_CD
            , PB.PAY_CPLT_DTM
            , PB.PAY_AMT AS PAY_AMT2
			FROM  CLAIM_BASE CB
			INNER JOIN ST_STD_INFO ST ON ( ST.ST_ID = CB.ST_ID )
			INNER JOIN  CLAIM_DETAIL CD ON (CB.CLM_NO = CD.CLM_NO )
			JOIN COMPANY_BASE CP ON (CD.COMP_NO = CP.COMP_NO)
			LEFT OUTER JOIN DELIVERY DD ON ( CD.DLVR_NO = DD.DLVR_NO )
			LEFT OUTER JOIN PAY_BASE PB ON (
             			CD.ORD_NO = PB.ORD_NO
             			AND PB.PAY_GB_CD = '${@framework.common.constants.CommonConstants@PAY_GB_20}'
             			AND PB.ORD_CLM_GB_CD = '${@framework.common.constants.CommonConstants@ORD_CLM_GB_20}'
             			AND PB.CNC_YN = '${@framework.common.constants.CommonConstants@COMM_YN_N}'
            )
			WHERE 1=1
			  <include refid="pageClaimInterfaceWhere" />
			  ORDER BY CB.ACPT_DTM DESC
			  <include refid="bizCommon.pageSql" />
	</select>

	<select id="pageClaimInterfaceCount" resultType="java.lang.Integer">
		<!--
			Query Name : claim.pageClaimInterfaceCount
			Description : 클레임 목록 페이징 카운트 조회 (API용)
		-->
			SELECT /* QUERYID(claim.pageClaimInterfaceCount) */
			 COUNT(*)
			FROM  CLAIM_BASE CB
			INNER JOIN ST_STD_INFO ST ON ( ST.ST_ID = CB.ST_ID )
			INNER JOIN  CLAIM_DETAIL CD ON (CB.CLM_NO = CD.CLM_NO )
			JOIN COMPANY_BASE CP ON (CD.COMP_NO = CP.COMP_NO)
			LEFT OUTER JOIN DELIVERY DD ON ( CD.DLVR_NO = DD.DLVR_NO )
			LEFT OUTER JOIN PAY_BASE PB ON (
             			CD.ORD_NO = PB.ORD_NO
             			AND PB.PAY_GB_CD = '${@framework.common.constants.CommonConstants@PAY_GB_20}'
             			AND PB.ORD_CLM_GB_CD = '${@framework.common.constants.CommonConstants@ORD_CLM_GB_20}'
             			AND PB.CNC_YN = '${@framework.common.constants.CommonConstants@COMM_YN_N}'
            )
			WHERE 1=1
			<include refid="pageClaimInterfaceWhere" />
	</select>

	<sql id="pageClaimInterfaceWhere">
	     <if test="clmTpCd != null and clmTpCd != ''">
		 AND CB.CLM_TP_CD = #{clmTpCd}
		 </if>
		 <if test="clmTpCds != null and clmTpCds.length > 0">
		 AND CB.CLM_TP_CD IN
		 	<foreach item="item" index="index" collection="clmTpCds" open="(" separator="," close=")">
		 		#{item}
		 	</foreach>
		 </if>
		 <if test="clmDtlStatCds != null and clmDtlStatCds.length > 0">
		 	AND CD.CLM_DTL_STAT_CD IN
		 	<foreach item="item" index="index" collection="clmDtlStatCds" open="(" separator="," close=")">
		 		#{item}
		 	</foreach>
		 </if>
		 <if test='stId != null and stId != "" '>
	     	AND CB.ST_ID = #{stId}
		</if>
		<if test="lowCompNo != null and  ! lowCompNo.equals('')">
        	AND CD.COMP_NO = #{lowCompNo} AND CP.UP_COMP_NO = #{compNo}
        </if>
        <if test="lowCompNo == null or lowCompNo == ''">
            <if test="compNo != null and ! compNo.equals('')">
        	AND CD.COMP_NO = #{compNo}
            </if>
        </if>
        <if test="compNoWithLowComp != null and ! compNoWithLowComp.equals('')">
			AND ( CD.COMP_NO = #{compNoWithLowComp} OR CD.UP_COMP_NO = #{compNoWithLowComp} )
		</if>
        <if test="dlvrCmdDtmStart != null">
			AND 		DD.DLVR_CMD_DTM <![CDATA[>=]]> #{dlvrCmdDtmStart}
		</if>
		<if test="dlvrCmdDtmEnd != null">
			AND 		DD.DLVR_CMD_DTM <![CDATA[<=]]> #{dlvrCmdDtmEnd}
		</if>
		<if test="clmNo != null and ! clmNo.equals('')">
			AND 	CB.CLM_NO= #{clmNo}
		</if>
	</sql>

	<resultMap id="myClaimStatus" type="biz.app.claim.model.ClaimSummaryVO">
	   <result javaType="java.lang.Integer"    property="rtnAcpt"     column="RETURN_ACPT"/>
	   <result javaType="java.lang.Integer"    property="rtnIng"     column="RETURN_ING"/>
	   <result javaType="java.lang.Integer"    property="rtnCmplt"     column="RETURN_CMPLT"/>
	   <result javaType="java.lang.Integer"    property="exchgAcpt"     column="EXCHANGE_ACPT"/>
	   <result javaType="java.lang.Integer"    property="exchgIng"     column="EXCHANGE_ING"/>
	   <result javaType="java.lang.Integer"    property="exchgCmplt"     column="EXCHANGE_CMPLT"/>
	</resultMap>

    <select id="listClaimCdCountList" resultMap="myClaimStatus">
        <!--
            Query Name : order.listClaimCdCountList
            Description : Front 취소/교환/반품 현황
        -->
		SELECT
		    COUNT(1),
		    IFNULL(SUM(RETURN_ACPT), 0) RETURN_ACPT, IFNULL(SUM(RETURN_ING), 0) RETURN_ING, IFNULL(SUM(RETURN_CMPLT), 0) RETURN_CMPLT,
		    IFNULL(SUM(EXCHANGE_ACPT), 0) EXCHANGE_ACPT, IFNULL(SUM(EXCHANGE_ING), 0) EXCHANGE_ING, IFNULL(SUM(EXCHANGE_CMPLT), 0) EXCHANGE_CMPLT
		FROM (
		   SELECT
		        CD.CLM_NO,
			    IF(CD.CLM_DTL_TP_CD IN ('${@framework.common.constants.CommonConstants@CLM_DTL_TP_30}', '${@framework.common.constants.CommonConstants@CLM_DTL_TP_40}'), 0, @ROWNUM := @ROWNUM + 1) AS ROW_NUM,
                IF(MIN(CD.CLM_DTL_STAT_CD) = '${@framework.common.constants.CommonConstants@CLM_DTL_STAT_210}', 1, 0) AS RETURN_ACPT,
                IF(MIN(CD.CLM_DTL_STAT_CD) IN ('${@framework.common.constants.CommonConstants@CLM_DTL_STAT_220}', '${@framework.common.constants.CommonConstants@CLM_DTL_STAT_230}', '${@framework.common.constants.CommonConstants@CLM_DTL_STAT_240}'), 1, 0) AS RETURN_ING,
                IF(MIN(CD.CLM_DTL_STAT_CD) IN ('${@framework.common.constants.CommonConstants@CLM_DTL_STAT_260}'), 1, 0) AS RETURN_CMPLT,
                IF(MIN(CD.CLM_DTL_STAT_CD) IN ('${@framework.common.constants.CommonConstants@CLM_DTL_STAT_310}'), 1, 0) AS EXCHANGE_ACPT,
                IF(MIN(CD.CLM_DTL_STAT_CD) IN ('${@framework.common.constants.CommonConstants@CLM_DTL_STAT_320}', '${@framework.common.constants.CommonConstants@CLM_DTL_STAT_330}', '${@framework.common.constants.CommonConstants@CLM_DTL_STAT_340}', '${@framework.common.constants.CommonConstants@CLM_DTL_STAT_350}', '${@framework.common.constants.CommonConstants@CLM_DTL_STAT_360}') AND MAX(CD.CLM_DTL_STAT_CD) IN ('${@framework.common.constants.CommonConstants@CLM_DTL_STAT_410}', '${@framework.common.constants.CommonConstants@CLM_DTL_STAT_420}', '${@framework.common.constants.CommonConstants@CLM_DTL_STAT_430}', '${@framework.common.constants.CommonConstants@CLM_DTL_STAT_440}'), 1, 0) AS EXCHANGE_ING,
                IF(MAX(CD.CLM_DTL_STAT_CD) IN ('${@framework.common.constants.CommonConstants@CLM_DTL_STAT_450}'), 1, 0) AS EXCHANGE_CMPLT
			FROM
			    CLAIM_BASE CB
			    JOIN CLAIM_DETAIL CD ON (CB.CLM_NO = CD.CLM_NO)
			    JOIN (SELECT @ROWNUM := 0) T
			WHERE
			    CB.MBR_NO = #{mbrNo}     /* 회원번호 */
				AND CB.ACPT_DTM BETWEEN #{clmAcptDtmStart} AND #{clmAcptDtmEnd}
			    AND CB.CLM_TP_CD IN ('${@framework.common.constants.CommonConstants@CLM_DTL_TP_20}', '${@framework.common.constants.CommonConstants@CLM_DTL_TP_30}')
			    AND CB.CLM_STAT_CD IN ('${@framework.common.constants.CommonConstants@CLM_STAT_10}', '${@framework.common.constants.CommonConstants@CLM_STAT_20}', '${@framework.common.constants.CommonConstants@CLM_STAT_30}')
			GROUP BY
			    CD.CLM_NO, CD.ORD_DTL_SEQ, ROW_NUM
		) CLAIM
    </select>


	<resultMap type="biz.app.claim.model.ClaimBaseVO" id="claimListMap">
		<id		property="clmNo"		column="CLM_NO"/>		<!-- 클레임 번호 -->
		<result	property="ordNo"		column="ORD_NO"/>		<!-- 주문 번호 -->
		<result property="clmTpCd"		column="CLM_TP_CD"/>	<!-- 클레임 유형 코드 -->
		<result property="clmStatCd"	column="CLM_STAT_CD"/>	<!-- 클레임 상태 코드 -->
		<result property="acptDtm"		column="ACPT_DTM"/>		<!-- 접수 일시 -->
		<result property="cpltDtm"		column="CPLT_DTM"/>		<!-- 완료 일시 -->
		<result property="cncDtm"		column="CNC_DTM"/>		<!-- 취소 일시 -->
		<result property="ordMdaCd"		column="ORD_MDA_CD"/>	<!-- 주문 매체 코드 -->
		<result property="mbrNo"		column="MBR_NO"/>		<!-- 회원 번호 -->
		<result property="acptrNo"		column="ACPTR_NO"/>		<!-- 접수자 번호 -->
		<result property="acptrNm"		column="ACPTR_NM"/>		<!-- 접수자 명 -->
		<result property="cncrNo"		column="CNCR_NO"/>		<!-- 취소자 번호 -->
		<result property="cncrNm"		column="CNCR_NM"/>		<!-- 취소자 명 -->
		<result property="cpltrNo"		column="CPLTR_NO"/>		<!-- 완료자 번호 -->
		<result property="cpltrNm"		column="CPLTR_NM"/>		<!-- 완료자 명 -->
		<result property="payMeansCd"		column="PAY_MEANS_CD"/>		<!-- 결제수단 코드 -->
		<result property="payStatCd"		column="PAY_STAT_CD"/>		<!-- 결제상태 코드 '00' 대기 -->
		<result property="sysRegrNo"	column="SYS_REGR_NO"/>	<!-- 시스템 등록자 번호 -->
		<result property="sysRegDtm"	column="SYS_REG_DTM"/>	<!-- 시스템 등록 일시 -->
		<result property="sysUpdrNo"	column="SYS_UPDR_NO"/>	<!-- 시스템 수정자 번호 -->
		<result property="sysUpdDtm"	column="SYS_UPD_DTM"/>	<!-- 시스템 수정 일시 -->
		<result property="sysRegrNm"	column="SYS_REGR_NM"/>	<!-- 시스템 등록자 -->
		<result property="sysUpdrNm"	column="SYS_UPDR_NM"/>	<!-- 시스템 수정자 -->

		<result property="stId"			column="ST_ID"/>			<!-- 사이트 ID -->
		<result property="stNm"		column="ST_NM"/>		<!-- 사이트 명 -->

		<collection property="claimDetailListVO" ofType="biz.app.claim.model.ClaimDetailVO">
			<id		property="clmDtlSeq"		column="CLM_DTL_SEQ"/>			<!-- 클레임 상세 순번 -->
			<result property="clmNo"			column="CLM_NO"/>				<!-- 클레임 번호 -->
			<result property="clmDtlTpCd"			column="CLM_DTL_TP_CD"/>			<!-- 클레임 유형 코드 -->
			<result property="clmRsnCd"			column="CLM_RSN_CD"/>			<!-- 클레임 사유 코드 -->
			<result property="clmRsnContent"			column="CLM_RSN_CONTENT"/>			<!-- 클레임 사유 내용 -->
			<result property="clmDtlStatCd"		column="CLM_DTL_STAT_CD"/>			<!-- 클레임 상세 상태 코드 -->
			<result property="clmDtlGrpStatCd"      column="CLM_DTL_GRP_STAT_CD"/>          <!-- 클레임 상세 상태 코드, 사용자에게 보여줄 상태 코드 -->
			<result property="ordNo"			column="ORD_NO"/>				<!-- 주문 번호 -->
			<result	property="ordDtlSeq"		column="ORD_DTL_SEQ"/>			<!-- 주문 상세 순번 -->
			<result property="goodsId"			column="GOODS_ID"/>				<!-- 상품 아이디 -->
			<result property="goodsNm"			column="GOODS_NM"/>				<!-- 상품 명 -->
			<result property="itemNo"			column="ITEM_NO"/>				<!-- 단품 번호 -->
			<result property="itemNm"			column="ITEM_NM"/>				<!-- 단품 명 -->
			<result property="bndNmKo"          column="BND_NM_KO"/>            <!-- 단품 명 -->
			<result property="dealGoodsId"		column="DEAL_GOODS_ID"/>		<!-- 딜 상품 아이디 -->
			<result property="dispClsfNo"		column="DISP_CLSF_NO"/>			<!-- 전시 분류 번호 -->
			<result property="saleAmt"			column="SALE_AMT"/>				<!-- 판매 금액 -->
			<result property="prmtDcAmt"		column="PRMT_DC_AMT"/>	<!-- 프로모션 할인 금액-->
			<result property="payAmt"			column="PAY_AMT"/>				<!-- 결제 금액 -->
			<result property="clmQty"			column="CLM_QTY"/>				<!-- 클레임 수량 -->
			<result property="compNo"			column="COMP_NO"/>				<!-- 업체 번호 -->
			<result property="compNm"           column="COMP_NM"/>              <!-- 업체 이름 -->
			<result property="dlvrcNo"			column="DLVRC_NO"/>				<!-- 배송비 번호 -->
			<result property="dlvrNo"			column="DLVR_NO"/>				<!-- 배송 번호 -->
			<result property="mbrNo"			column="MBR_NO"/>				<!-- 회원 번호 -->
			<result property="clmCpltDtm"		column="CLM_CPLT_DTM"/>			<!-- 클레임 완료 일시 -->

			<result property="ordDtlStatCd"		column="ORD_DTL_STAT_CD"/>		<!-- 주문상세상태코드 -->

            <result property="imgSeq"           column="IMG_SEQ"/>              <!-- 상품 이미지 순번-->
            <result property="imgPath"          column="IMG_PATH"/>             <!-- 상품 이미지 경로-->
            <result property="rvsImgPath"       column="RVS_IMG_PATH"/>         <!-- 상품 반전 이미지 경로 -->
			<result property="swapYn"		column="SWAP_YN"/>		<!-- 맞교환여부 -->

			<result property="sysRegrNo"		column="SYS_REGR_NO"/>			<!-- 시스템 등록자 번호 -->
			<result property="sysRegDtm"		column="SYS_REG_DTM"/>			<!-- 시스템 등록 일시 -->
			<result property="sysUpdrNo"		column="SYS_UPDR_NO"/>			<!-- 시스템 수정자 번호 -->
			<result property="sysUpdDtm"		column="SYS_UPD_DTM"/>			<!-- 시스템 수정 일시 -->
			<result property="sysRegrNm"		column="SYS_REGR_NM"/>			<!-- 시스템 등록자 -->
			<result property="sysUpdrNm"		column="SYS_UPDR_NM"/>			<!-- 시스템 수정자 -->
			
			<result property="pakGoodsId"			column="PAK_GOODS_ID"/>				<!-- 상품 아이디 -->
		</collection>
	</resultMap>

    <select id="pageClaimCancelRefundList" resultMap="claimListMap">
        <!--
            Query Name : claim.pageClaimCancelRefundList
            Description : 클레임 목록 조회
        -->
		SELECT /* QUERYID(claim.pageClaimCancelRefundList) */
		    CD.CLM_NO,
		    CD.ITEM_NO,
		    CD.ORD_NO,
		    CD.ORD_DTL_SEQ,
		    CD.GOODS_ID,
		    CD.PAK_GOODS_ID,
		    CD.GOODS_NM,
		    CD.ITEM_NM,
		    CD.COMP_NO,
		    CP.COMP_NM,
		    (SELECT BND_NM_KO FROM BRAND_BASE WHERE BND_NO = (SELECT BND_NO FROM GOODS_BASE WHERE GOODS_ID = CD.GOODS_ID)) AS BND_NM_KO,
		    CD.SALE_AMT,
		    CD.PAY_AMT,
		    CD.CLM_QTY,
		    CB.CLM_TP_CD,
		    CB.CLM_STAT_CD,
		    CB.ACPT_DTM,
			CB.SWAP_YN,		/* 맞교환여부 */
		    CD.CLM_DTL_SEQ,
		    CD.CLM_DTL_TP_CD,
		    CD.CLM_DTL_STAT_CD,
		    CD.DLVR_NO,
		    CASE
		        WHEN CD.CLM_DTL_STAT_CD IN ('${@framework.common.constants.CommonConstants@CLM_DTL_STAT_110}', '${@framework.common.constants.CommonConstants@CLM_DTL_STAT_210}', '${@framework.common.constants.CommonConstants@CLM_DTL_STAT_310}')
		        THEN '${@framework.common.constants.CommonConstants@CLM_STAT_10}' -- 접수
		        WHEN CD.CLM_DTL_STAT_CD IN ('${@framework.common.constants.CommonConstants@CLM_DTL_STAT_220}', '${@framework.common.constants.CommonConstants@CLM_DTL_STAT_230}', '${@framework.common.constants.CommonConstants@CLM_DTL_STAT_240}', '${@framework.common.constants.CommonConstants@CLM_DTL_STAT_320}', '${@framework.common.constants.CommonConstants@CLM_DTL_STAT_330}', '${@framework.common.constants.CommonConstants@CLM_DTL_STAT_340}', '${@framework.common.constants.CommonConstants@CLM_DTL_STAT_350}', '${@framework.common.constants.CommonConstants@CLM_DTL_STAT_360}', '${@framework.common.constants.CommonConstants@CLM_DTL_STAT_420}', '${@framework.common.constants.CommonConstants@CLM_DTL_STAT_430}', '${@framework.common.constants.CommonConstants@CLM_DTL_STAT_440}')
		        THEN '${@framework.common.constants.CommonConstants@CLM_STAT_20}' -- 진행
		        WHEN CD.CLM_DTL_STAT_CD IN ('${@framework.common.constants.CommonConstants@CLM_DTL_STAT_120}', '${@framework.common.constants.CommonConstants@CLM_DTL_STAT_260}', '${@framework.common.constants.CommonConstants@CLM_DTL_STAT_450}')
		        THEN '${@framework.common.constants.CommonConstants@CLM_STAT_30}' -- 완료
		    END AS CLM_DTL_GRP_STAT_CD,
		    GI.IMG_SEQ,
		    GI.IMG_PATH,
		    GI.RVS_IMG_PATH,
		    FN_GET_ORDER_DTL_PRMT_DC_AMT(CD.ORD_NO, CD.ORD_DTL_SEQ) AS PRMT_DC_AMT,		/* 프로모션 할인 금액 */
		    PB.PAY_MEANS_CD,
		    PB.PAY_STAT_CD
		FROM CLAIM_BASE CB
        JOIN CLAIM_DETAIL CD ON (CB.CLM_NO  = CD.CLM_NO)
        JOIN ORDER_BASE OB ON (CB.ORD_NO = OB.ORD_NO)
	    JOIN COMPANY_BASE CP ON (CD.COMP_NO = CP.COMP_NO)
	    LEFT JOIN GOODS_IMG GI ON (CD.GOODS_ID = GI.GOODS_ID AND GI.DLGT_YN = 'Y')
	    LEFT JOIN PAY_BASE PB ON CD.CLM_NO = PB.CLM_NO  
       	WHERE 1 = 1
		<!-- if test="clmAcptDtmStart != null and clmAcptDtmStart != '' and clmAcptDtmEnd != null and clmAcptDtmEnd != ''" -->
		<if test="clmAcptDtmStart != null and clmAcptDtmEnd != null">
		AND CB.ACPT_DTM BETWEEN #{clmAcptDtmStart} AND DATE_ADD(#{clmAcptDtmEnd}, INTERVAL 1 DAY) 		
		</if>
		<if test='clmTpCd != null and clmTpCd != ""'>
		AND CB.CLM_TP_CD = #{clmTpCd}
		</if>
		<if test='mbrNo != null'>
		AND CB.MBR_NO = #{mbrNo}
		</if>
		<if test="ordrEmail != null and ordrEmail != ''">
		AND OB.ORDR_EMAIL = #{ordrEmail} /* 이메일주소 */
		</if>
		<if test="ordNo != null and ordNo != ''">
		AND CB.ORD_NO = #{ordNo} /* 주문번호 */
		</if>
		/* 1. 맞교환 이면 교환배송 상태만 조회
		   2. 교환승인완료 이면 교환배송 상태만 조회
		   3. 1,2 번이 아니면 취소,반품,교환수거 상태만 조회 */
		AND CASE
			      WHEN CB.SWAP_YN = '${@framework.common.constants.CommonConstants@COMM_YN_Y}' THEN CD.CLM_DTL_TP_CD = '${@framework.common.constants.CommonConstants@CLM_DTL_TP_40}'
			      WHEN '${@framework.common.constants.CommonConstants@CLM_DTL_STAT_360}' IN (SELECT CLM_DTL_STAT_CD FROM CLAIM_DETAIL WHERE CLM_NO = CB.CLM_NO)
		      			THEN CD.CLM_DTL_TP_CD = '${@framework.common.constants.CommonConstants@CLM_DTL_TP_40}'
			      ELSE CD.CLM_DTL_TP_CD IN ('${@framework.common.constants.CommonConstants@CLM_TP_10}'
			      								, '${@framework.common.constants.CommonConstants@CLM_TP_20}'
			      								, '${@framework.common.constants.CommonConstants@CLM_TP_30}')
				END
	    ORDER BY CB.ACPT_DTM DESC, CD.CLM_NO DESC, CD.CLM_DTL_SEQ ASC
	    <include refid="bizCommon.pageSql" />
	</select>
	<resultMap id="resultMapForClaim" type="biz.app.claim.model.ClaimDetailVO" autoMapping="true">
		<result property="clmNo"				column="CD_CLM_NO"              />
		<result property="clmDtlSeq"			column="CD_CLM_DTL_SEQ"         />
		<result property="clmDtlTpCd"			column="CD_CLM_DTL_TP_CD"       />
		<result property="clmDtlStatCd"			column="CD_CLM_DTL_STAT_CD"     />
		<result property="clmRsnCd"				column="CD_CLM_RSN_CD"          />
		<result property="clmRsnContent"		column="CD_CLM_RSN_CONTENT"     />
		<result property="clmDenyRsnContent"	column="CD_CLM_DENY_RSN_CONTENT"/>
		<result property="mbrNo"				column="CD_MBR_NO"              />
		<result property="ordNo"				column="CD_ORD_NO"              />
		<result property="ordDtlSeq"			column="CD_ORD_DTL_SEQ"         />
		<result property="orgClmNo"				column="CD_ORG_CLM_NO"          />
		<result property="orgClmDtlSeq"			column="CD_ORG_CLM_DTL_SEQ"     />
		<result property="goodsId"				column="CD_GOODS_ID"            />
		<result property="goodsNm"				column="CD_GOODS_NM"            />
		<result property="dealGoodsId"			column="CD_DEAL_GOODS_ID"       />
		<result property="pakGoodsId"			column="CD_PAK_GOODS_ID"        />
		<result property="dispClsfNo"			column="CD_DISP_CLSF_NO"        />
		<result property="compGoodsId"			column="CD_COMP_GOODS_ID"       />
		<result property="compItemId"			column="CD_COMP_ITEM_ID"        />
		<result property="goodsPrcNo"			column="CD_GOODS_PRC_NO"        />
		<result property="saleAmt"				column="CD_SALE_AMT"            />
		<result property="payAmt"				column="CD_PAY_AMT"             />
		<result property="rmnPayAmt"			column="CD_RMN_PAY_AMT"         />
		<result property="clmQty"				column="CD_CLM_QTY"             />
		<result property="cms"					column="CD_CMS"                 />
		<result property="goodsCmsnRt"			column="CD_GOODS_CMSN_RT"       />
		<result property="taxGbCd"				column="CD_TAX_GB_CD"           />
		<result property="dlvrcNo"				column="CD_DLVRC_NO"            />
		<result property="rtnDlvrcNo"			column="CD_RTN_DLVRC_NO"        />
		<result property="dlvraNo"				column="CD_DLVRA_NO"            />
		<result property="rtrnaNo"				column="CD_RTRNA_NO"            />
		<result property="dlvrNo"				column="CD_DLVR_NO"             />
		<result property="compNo"				column="CD_COMP_NO"             />
		<result property="upCompNo"				column="CD_UP_COMP_NO"          />
		<result property="clmCpltDtm"			column="CD_CLM_CPLT_DTM"        />
		<result property="rtnMtdCd"				column="CD_RTN_MTD_CD"          />
		<result property="outsideClmDtlNo"		column="CD_OUTSIDE_CLM_DTL_NO"  />
		<result property="stlNo"				column="CD_STL_NO"              />
		<result property="dlvrCpltPicUrl"		column="CD_DLVR_CPLT_PIC_URL"   />
		<result property="dlvrSms"				column="CD_DLVR_SMS"            />
		<result property="twcTckt"				column="CD_TWC_TCKT"            />
		<result property="dlvrCpltYn"			column="CD_DLVR_CPLT_YN"        />
		<result property="itemNm"				column="CD_ITEM_NM"				/>
		<result property="itemNo"				column="CD_ITEM_NO"				/>
		<result property="dispClsfNm"			column="CD_DISP_CLSF_NM"		/>
		<result property="cpDcAmt"				column="CD_CP_DC_AMT"			/>
		<result property="cartCpDcAmt"			column="CD_CART_CP_DC_AMT"		/>
		<result property="bndNmKo"				column="CD_BND_NM_KO"			/>
		<result property="subGoodsNm"			column="CD_SUB_GOODS_NM"		/>
		<result property="dlvrPrcsTpCd"			column="CD_DLVR_PRCS_TP_CD"		/>
		<association property="claimBaseVO" javaType="biz.app.claim.model.ClaimBaseVO" autoMapping="true">
		</association>
	</resultMap>
	<resultMap id="claimListMap2ndE" type="biz.app.order.model.OrderBaseVO" autoMapping="true"> 
		<id property="ordNo" column="ord_no" /> <!-- 주문번호별 -->
		<association property="payBaseVO" javaType="biz.app.pay.model.PayBaseVO" autoMapping="true"/>
		<collection property="orderCompanyListVO" ofType="biz.app.order.model.OrderCompanyVO" autoMapping="true"> 
			<id property="compNo" column="comp_no" /> <!-- 회사번호별 -->
			<collection property="orderInvoiceListVO" ofType="biz.app.order.model.OrderInvoiceVO" autoMapping="true">
				<id property="dlvrInvNo" column="DLVR_INV_NO" /> <!-- 송장번호별 -->
				<id property="cdClmNo" column="CD_CLM_NO" />
				<collection property="orderDlvrStatListVO" ofType="biz.app.order.model.OrderDlvrStatVO" autoMapping="true"> 
					<id property="forceDtlStat" column="FORCE_DTL_STAT" /> <!-- 프로세스단계(odrdtlstat, clmtpcd) -->
					<result property="ordDtlStatCd" column="ORD_DTL_STAT_CD" />
					<result property="clmTpCd" column="CB_CLM_TP_CD" />
					<result property="clmStatCd" column="CB_CLM_STAT_CD" /> <!-- 2021.05.28, ssmvf01, 클레임 상태 추가 -->
					<result property="dlvrPrcsTpCd" column="DLVR_PRCS_TP_CD" />
					<result property="clmDtlStatCd" column="CD_CLM_DTL_STAT_CD" />
					<result property="compGbCd" column="COMP_GB_CD"/>
					<result property="dlvrInvNo" column="DLVR_INV_NO" />
					<result property="viewClmDtlStatCd" column="VIEW_CD_CLM_DTL_STAT_CD" />
					<discriminator column="LIST_DELIMITER" javaType="String"> <!-- 쿼리로 LIST_DELIMITER 컬럼을 두어 리스트를 나눠담는다 -->
					<case value="CLAIM">
						<collection property="claimDetailListVO" ofType="biz.app.order.model.OrderDetailVO" autoMapping="true">
							<association property="claimDetailVO" resultMap="resultMapForClaim" autoMapping="true">
							</association>
						</collection>
					</case>
					</discriminator>
				</collection>
			</collection>
		</collection>
	</resultMap>
	<select id="pageClaimCancelRefundList2ndE" resultMap="claimListMap2ndE">
		SELECT /* QUERYID(claim.pageClaimCancelRefundList2ndE) */
			LIST.*
			, (SELECT PAY_MEANS_CD FROM PAY_BASE WHERE ORD_CLM_GB_CD ='10' AND CNC_YN ='N'  AND ORD_NO = LIST.ORD_NO ORDER BY PAY_MEANS_CD LIMIT 1) AS PAY_MEANS_CD
			, (SELECT PAY_STAT_CD FROM PAY_BASE WHERE ORD_CLM_GB_CD ='10' AND CNC_YN ='N'  AND ORD_NO = LIST.ORD_NO ORDER BY PAY_MEANS_CD LIMIT 1) AS PAY_STAT_CD
			, (SELECT CASE WHEN SUM(IF(FN_GET_ORDER_CLAIM_ING_YN(ORD_NO, ORD_DTL_SEQ)='Y', 1, 0)) = 0 
		                    AND SUM(IF(RMN_ORD_QTY - RTN_QTY - CLM_EXC_CPLT_QTY > 0, 1, 0)) = SUM(IF(RMN_ORD_QTY - RTN_QTY - CLM_EXC_CPLT_QTY > 0 AND ORD_DTL_STAT_CD = '170', 1, 0)) THEN 'Y'
		                   ELSE 'N'
		              END 		       
		         FROM ORDER_DETAIL
		        WHERE ORD_NO = LIST.ORD_NO
		      ) AS ORD_DELETE_FLG
		FROM (
			SELECT 
				OBB.*
				, (SELECT IFNULL(SUM(CLM_QTY), 0) AS CLM_EXC_QTY FROM CLAIM_BASE CB ,CLAIM_DETAIL CD 
					WHERE CB.CLM_NO = CD.CLM_NO AND CB.CLM_TP_CD = '30' AND CB.CLM_STAT_CD IN ('30') AND CD.CLM_DTL_TP_CD = '40' AND CB.ORD_NO = OBB.ORD_NO AND CD.ORD_DTL_SEQ = OBB.ORD_DTL_SEQ 
				) AS CLM_EXC_CPLT_QTY
			FROM (
				SELECT
					ORD_NO,
					ST_ID,
					ORD_STAT_CD,
					ORD_MDA_CD,
					MBR_NO,
					MBR_GRD_CD,
					ORD_NM,
					ORDR_ID,
					ORDR_EMAIL,
					ORDR_TEL,
					ORDR_MOBILE,
					ORDR_IP,
					ORD_ACPT_DTM,
					ORD_CPLT_DTM,
					OUTSIDE_ORD_NO,
					CHNL_ID,
					ORD_DTL_CNT,
					ORD_PRCS_RST_CD,
					ORD_PRCS_RST_MSG,
					DATA_STAT_CD,
					DLVR_PRCS_TP_CD, /* 일반택배일 경우 강제로 코드를 10으로 바꿔줌 */
					ORDR_SHOW_YN,
					PAY_AMT_TOTAL,		/* 결제 금액 */
					CNC_PSB_YN,			/* 취소 가능 여부 */
					ORD_DTL_SEQ,
					ORD_DTL_STAT_CD,
					GOODS_ID,
					ITEM_NO,
					ITEM_NM,
					DEAL_GOODS_ID,
					PAK_GOODS_ID,
					COMP_GOODS_ID,
					COMP_ITEM_ID,
					ORD_QTY,
					CNC_QTY,
					RTN_QTY,
					RMN_ORD_QTY,
					GOODS_PRC_NO,
					SALE_AMT,
					PAY_AMT,
					RMN_PAY_AMT,
					CMS,
					GOODS_CMSN_RT,
					TAX_GB_CD,
					ORD_SVMN,
					SVMN_VLD_PRD_CD,
					SVMN_VLD_PRD,
					FREE_DLVR_YN,
					HOT_DEAL_YN,
					DLVRC_NO,
					ORD_DLVRA_NO,
					COMP_NO,
					UP_COMP_NO,
					MD_USR_NO,
					GOODS_ESTM_NO,
					GOODS_ESTM_REG_YN,
					OUTSIDE_ORD_DTL_NO,
					STL_NO,
					DISP_CLSF_NO,
					DLVR_CPLT_PIC_URL,
					DLVR_SMS,
					DLVR_CPLT_YN,
					MKI_GOODS_YN,
					MKI_GOODS_OPT_CONTENT,
					RSV_GOODS_YN,
					ISU_SCHD_PNT,
					RTN_PSB_YN,				/* 반품 가능 여부 */
					RTN_ING_YN,				/* 반품 진행 여무 */
					RTN_CPLT_QTY,			/* 반품 완료 수량 */
					CLM_EXC_ING_QTY,		/* 교환 진행 수량 */
					CLM_ING_YN,				/* 클레임 진행 여부 */
					PRMT_DC_AMT,			/* 프로모션 할인 금액 */
					CP_DC_AMT,				/* 쿠폰 할인 금액 */
					DLVR_NO,				/* 배송 번호 */
					STK_QTY,
					VLD_ORD_QTY,
					IMG_SEQ,
					IMG_PATH,
					RVS_IMG_PATH,
					COMP_NM,
					COMP_GB_CD, /* 업체 구분 코드 10:자사 */
					ITEM_MNG_YN,
					BND_NM, 			/* 노출 브랜드명 */
					BND_NM_KO,		/* 브랜드명 국문 */
					GOODS_CSTRT_TP_CD,
					PAK_ITEM_NM,
					CASE WHEN DLVR_NO &lt; 0 AND ADDDATE((SELECT DLVR_CPLT_DTM FROM DELIVERY WHERE DLVR_NO = OBB.DLVR_NO),7) &lt; SYSDATE() THEN 'N' ELSE 'Y' END AS COMPARE_DTM_YN,
					(
						SELECT
							GROUP_CONCAT( GB.GOODS_NM )
						FROM GOODS_BASE GB
						WHERE GB.GOODS_ID IN (
							SELECT ODC.CSTRT_GOODS_ID
							FROM ORD_DTL_CSTRT ODC
							INNER JOIN ORDER_DETAIL OD ON ODC.ORD_NO = OBB.ORD_NO AND ODC.ORD_DTL_SEQ = OBB.ORD_DTL_SEQ
							WHERE ODC.ORD_NO  = OBB.ORD_NO AND ODC.CSTRT_GOODS_GB_CD = '30'
							ORDER BY OBB.ORD_DTL_SEQ ASC
						)
					)AS SUB_GOODS_NM,		/*사은품명*/
					( SELECT ODAM.ORD_DT FROM ORD_DLVR_AREA_MAP ODAM WHERE ODAM.ORD_NO = OBB.ORD_NO AND ODAM.DEL_YN ='N') AS ORD_DT,
					( SELECT WEEKDAY(DATE_FORMAT(ODAM.ORD_DT, '%Y%m%d')) FROM ORD_DLVR_AREA_MAP ODAM WHERE ODAM.ORD_NO = OBB.ORD_NO AND ODAM.DEL_YN ='N') AS ORD_DT_WEEK,
					( SELECT DLVR_CPLT_DTM FROM DELIVERY DV WHERE DV.DLVR_NO = OBB.DLVR_NO AND DV.ORD_CLM_GB_CD ='10') as DLVR_CPLT_DTM,		/*배송 완료 일시*/
					( SELECT WEEKDAY(DATE_FORMAT(DLVR_CPLT_DTM, '%Y%m%d')) FROM DELIVERY DV WHERE DV.DLVR_NO = OBB.DLVR_NO AND DV.ORD_CLM_GB_CD ='10') as DLVR_CPLT_DTM_WEEK,	/*배송 완료 일시 요일*/
					IFNULL((SELECT INV_NO FROM DELIVERY DV WHERE DV.DLVR_NO = OBB.DLVR_NO), '') AS DLVR_INV_NO,
					(
						SELECT CONCAT_WS('|', if(BANK_CD='', null, BANK_CD) , if(ACCT_NO='', null, ACCT_NO), if(DPST_SCHD_DT='', null, DPST_SCHD_DT))
						FROM PAY_BASE PB
						WHERE PB.ORD_CLM_GB_CD ='10' AND PB.PAY_MEANS_CD IN('10', '20', '30') AND CNC_YN ='N'  AND PB.ORD_NO = OBB.ORD_NO
					) AS ORD_BANK_INFO,
					(CASE WHEN PAK_GOODS_ID IS null THEN GOODS_NM ELSE PAK_GOODS_NM END) AS GOODS_NM,     /* 상품 명 */
					(CASE WHEN GOODS_CSTRT_TP_CD = 'PAK' THEN GOODS_NM ELSE NULL END) AS OPT_GOODS_NM,
					CD_CLM_NO,
					CD_CLM_DTL_SEQ,
					CD_CLM_DTL_TP_CD,
					CD_CLM_DTL_STAT_CD,
					CD_CLM_RSN_CD,
					CD_CLM_RSN_CONTENT,
					CD_CLM_DENY_RSN_CONTENT,
					CD_MBR_NO,
					CD_ORD_NO,
					CD_ORD_DTL_SEQ,
					CD_ORG_CLM_NO,
					CD_ORG_CLM_DTL_SEQ,
					CD_GOODS_ID,
					CD_GOODS_NM,
					CD_DEAL_GOODS_ID,
					CD_PAK_GOODS_ID,
					CD_DISP_CLSF_NO,
					CD_COMP_GOODS_ID,
					CD_COMP_ITEM_ID,
					CD_GOODS_PRC_NO,
					CD_SALE_AMT,
					CD_PAY_AMT,
					CD_RMN_PAY_AMT,
					CD_CLM_QTY,
					CD_CMS,
					CD_GOODS_CMSN_RT,
					CD_TAX_GB_CD,
					CD_DLVRC_NO,
					CD_RTN_DLVRC_NO,
					CD_DLVRA_NO,
					CD_RTRNA_NO,
					CD_DLVR_NO,
					CD_COMP_NO,
					CD_UP_COMP_NO,
					CD_CLM_CPLT_DTM,
					CD_RTN_MTD_CD,
					CD_OUTSIDE_CLM_DTL_NO,
					CD_STL_NO,
					CD_DLVR_CPLT_PIC_URL,
					CD_DLVR_SMS,
					CD_TWC_TCKT,
					CD_DLVR_CPLT_YN,
					CD_STK_QTY,
					CD_RFD_PAY_TOT_AMT,
					CB_ST_ID,
					CB_CLM_TP_CD,
					CB_CLM_STAT_CD,
					CB_ORD_MDA_CD,
					CB_CHNL_ID,
					CB_SWAP_YN,
					CB_ACPT_DTM,
					CB_CNC_DTM,
					CB_CPLT_DTM,
					CB_ACPTR_NO,
					CB_CNCR_NO,
					CB_CPLTR_NO,
					CB_OUTSIDE_CLM_NO,
					CB_ORDR_SHOW_YN,
					CD_ITEM_NM,
					CD_ITEM_NO,
					CD_DISP_CLSF_NM,
					CD_CP_DC_AMT,		/* 상품 쿠폰 할인 금액 */
					CD_CART_CP_DC_AMT,	/** 장바구니 쿠폰 할인 금액 */
					CD_BND_NM_KO,		/* 브랜드명 국문 */
					CD_SUB_GOODS_NM,	/*사은품명*/
					CD_DLVR_PRCS_TP_CD,
					CASE WHEN CLM_DTL_STAT_ASC IS NULL THEN CONCAT('1ORD', ORD_DTL_STAT_CD)
					WHEN (CLM_DTL_STAT_ASC IS NOT NULL AND ((ORD_QTY - CNC_QTY - RTN_QTY) > 0)) THEN CONCAT('2CLM', CLM_DTL_STAT_ASC)
					ELSE CONCAT('2CLM', CLM_DTL_STAT_ASC)
					END AS FORCE_DTL_STAT, /* 주문과 클레임을 구분하여 리스트에 담기위한 구분자 */
					CASE WHEN CLM_DTL_STAT_ASC IS NULL THEN 'DELIVERY'
					WHEN (CLM_DTL_STAT_ASC IS NOT NULL AND ((ORD_QTY - CNC_QTY - RTN_QTY) > 0)) THEN 'CLAIM'
					ELSE 'CLAIM'
					END AS LIST_DELIMITER, /* 주문과 클레임을 구분하여 리스트에 담기위한 구분자 */
					CLM_DTL_SEQ_ORDER,
					CASE WHEN CB_CLM_TP_CD != '30' 
						 THEN CD_CLM_DTL_STAT_CD
						 WHEN CLM_DTL_STAT_ASC = '31'
				         THEN '410'
					     WHEN CLM_DTL_STAT_ASC = '32'
					     THEN '330'
					     <!-- 교환 거부 순서 변경 -->
					     WHEN CLM_DTL_STAT_ASC = '50'
					     THEN '350'
					     WHEN CLM_DTL_STAT_ASC = '45'
					     THEN '450'
					     ELSE CD_CLM_DTL_STAT_CD
			     	  END AS VIEW_CD_CLM_DTL_STAT_CD
				FROM (
					SELECT
						OB.ORD_NO,
						OB.ST_ID,
						OB.ORD_STAT_CD,
						OB.ORD_MDA_CD,
						OB.MBR_NO,
						OB.MBR_GRD_CD,
						OB.ORD_NM,
						OB.ORDR_ID,
						OB.ORDR_EMAIL,
						OB.ORDR_TEL,
						OB.ORDR_MOBILE,
						OB.ORDR_IP,
						OB.ORD_ACPT_DTM,
						OB.ORD_CPLT_DTM,
						OB.OUTSIDE_ORD_NO,
						OB.CHNL_ID,
						OB.ORD_DTL_CNT,
						OB.ORD_PRCS_RST_CD,
						OB.ORD_PRCS_RST_MSG,
						OB.DATA_STAT_CD,
						(
							CASE WHEN COMP_GB_CD='10' THEN OB.DLVR_PRCS_TP_CD
							ELSE '10' END
						) AS DLVR_PRCS_TP_CD,
						OB.ORDR_SHOW_YN,
						FN_GET_ORDER_PAY_AMT(OB.ORD_NO) AS PAY_AMT_TOTAL,		/* 결제 금액 */
						FN_GET_ORDER_CANCEL_PSB_YN(OB.ORD_NO) AS CNC_PSB_YN,	/* 취소 가능 여부 */
						OD.ORD_DTL_SEQ,
						OD.ORD_DTL_STAT_CD,
						OD.GOODS_ID,
						OD.ITEM_NO,
						OD.ITEM_NM,
						OD.DEAL_GOODS_ID,
						OD.PAK_GOODS_ID,
						OD.COMP_GOODS_ID,
						OD.COMP_ITEM_ID,
						OD.ORD_QTY,
						OD.CNC_QTY,
						OD.RTN_QTY,
						OD.RMN_ORD_QTY,
						OD.GOODS_PRC_NO,
						OD.SALE_AMT,
						OD.PAY_AMT,
						OD.RMN_PAY_AMT,
						OD.CMS,
						OD.GOODS_CMSN_RT,
						OD.TAX_GB_CD,
						OD.ORD_SVMN,
						OD.SVMN_VLD_PRD_CD,
						OD.SVMN_VLD_PRD,
						OD.FREE_DLVR_YN,
						OD.HOT_DEAL_YN,
						OD.DLVRC_NO,
						OD.ORD_DLVRA_NO,
						OD.COMP_NO,
						OD.UP_COMP_NO,
						OD.MD_USR_NO,
						OD.GOODS_ESTM_NO,
						OD.GOODS_ESTM_REG_YN,
						OD.OUTSIDE_ORD_DTL_NO,
						OD.STL_NO,
						OD.DISP_CLSF_NO,
						OD.DLVR_CPLT_PIC_URL,
						OD.DLVR_SMS,
						OD.DLVR_CPLT_YN,
						OD.MKI_GOODS_YN,
						OD.MKI_GOODS_OPT_CONTENT,
						OD.RSV_GOODS_YN,
						OD.ISU_SCHD_PNT,
						(SELECT RTN_PSB_YN FROM GOODS_BASE WHERE GOODS_ID = OD.GOODS_ID) AS RTN_PSB_YN,	/* 반품 가능 여부 */
						FN_GET_ORDER_CLAIM_ING_RTN_YN(OD.ORD_NO, OD.ORD_DTL_SEQ) AS RTN_ING_YN,			/* 반품 진행 여무 */
						FN_GET_ORD_CLM_RTN_CPLT_QTY(OD.ORD_NO, OD.ORD_DTL_SEQ)  AS RTN_CPLT_QTY,		/* 반품 완료 수량 */
						FN_GET_ORDER_CLAIM_EXC_QTY(OD.ORD_NO, OD.ORD_DTL_SEQ)  AS CLM_EXC_ING_QTY,		/* 교환 진행 수량 */
						FN_GET_ORDER_CLAIM_ING_YN(OD.ORD_NO, OD.ORD_DTL_SEQ) AS CLM_ING_YN,				/* 클레임 진행 여부 */
						FN_GET_ORDER_DTL_PRMT_DC_AMT(OB.ORD_NO, OD.ORD_DTL_SEQ) AS PRMT_DC_AMT,			/* 프로모션 할인 금액 */
						FN_GET_ORDER_DTL_CP_DC_AMT(OB.ORD_NO, OD.ORD_DTL_SEQ) AS CP_DC_AMT,				/* 쿠폰 할인 금액 */
						<!-- FN_GET_ORDER_DLVR_NO(OD.ORD_NO, OD.ORD_DTL_SEQ, 'Y') AS DLVR_NO,				/* 배송 번호 */ -->
						FN_GET_CLM_DLVR_NO(CD.CLM_NO, MAX(CD.CLM_DTL_SEQ) OVER(PARTITION BY CD.CLM_NO, CD.ORD_NO, CD.ORD_DTL_SEQ), 'Y') AS DLVR_NO,	/*배송번호 - 교환배송쪽 배송번호를 가져오도록 수정 - 2021.05.17 by kek01*/
						FN_GET_GOODS_STOCK(OD.GOODS_ID, OD.ITEM_NO) AS STK_QTY,
						OD.RMN_ORD_QTY -  FN_GET_ORD_CLM_RTN_CPLT_QTY(OD.ORD_NO, OD.ORD_DTL_SEQ) AS VLD_ORD_QTY, /* 유효 주문 수량 */
						GI.IMG_SEQ,
						GI.IMG_PATH,
						GI.RVS_IMG_PATH,
						CP.COMP_NM,
						CP.COMP_GB_CD, /* 업체 구분 코드 10:자사 */
						GB.ITEM_MNG_YN,
						GB.GOODS_NM,
						FN_GET_BRAND_NAME(GB.BND_NO) AS BND_NM, 			/* 노출 브랜드명 */
						FN_GET_BRAND_NAME_KO(GB.BND_NO) AS BND_NM_KO,		/* 브랜드명 국문 */
						(SELECT GOODS_NM FROM GOODS_BASE WHERE GOODS_ID = OD.PAK_GOODS_ID) AS PAK_GOODS_NM,
						CASE WHEN OD.PAK_GOODS_ID IS NULL THEN GB.GOODS_CSTRT_TP_CD
						ELSE (SELECT GOODS_CSTRT_TP_CD FROM GOODS_BASE WHERE GOODS_ID = OD.PAK_GOODS_ID)
						END AS GOODS_CSTRT_TP_CD,
						CASE WHEN OD.PAK_GOODS_ID IS NOT NULL THEN
						(
							SELECT GROUP_CONCAT(CONCAT_WS(' : ', GOG.SHOW_NM , AV.ATTR_VAL) ORDER BY GOG.DISP_PRIOR_RANK SEPARATOR '|')
							FROM GOODS_BASE GB,ITEM IT, GOODS_OPT_GRP GOG, GOODS_ATTRIBUTE GA, ITEM_ATTRIBUTE_VALUE IAV, ATTRIBUTE_VALUE AV
							WHERE GB.GOODS_ID = IT.GOODS_ID AND GA.GOODS_ID = GB.GOODS_ID
								AND GA.ATTR_NO = AV.ATTR_NO AND GOG.ATTR_NO = GA.ATTR_NO
								AND GOG.ATTR_NO = AV.ATTR_NO AND IAV.ITEM_NO = IT.ITEM_NO
								AND IAV.ATTR_NO = AV.ATTR_NO AND AV.ATTR_VAL_NO = IAV.ATTR_VAL_NO
								AND GB.GOODS_ID = OD.GOODS_ID AND GOG.GOODS_ID = OD.PAK_GOODS_ID
						)
						END AS PAK_ITEM_NM,
						CD.CLM_NO					AS	CD_CLM_NO,
						<!-- CD.CLM_DTL_SEQ				AS	CD_CLM_DTL_SEQ, -->
						<!-- CD.CLM_DTL_STAT_CD			AS	CD_CLM_DTL_STAT_CD, -->
						<!-- CD.CLM_QTY					AS	CD_CLM_QTY, -->
						CD.CLM_DTL_SEQ				AS	ORG_CD_CLM_DTL_SEQ,
						MIN(CD.CLM_DTL_SEQ) OVER(PARTITION BY CD.CLM_NO, CD.ORD_NO, CD.ORD_DTL_SEQ, CD.CLM_DTL_TP_CD) AS	CD_CLM_DTL_SEQ,
						MIN(CD.CLM_DTL_STAT_CD) OVER(PARTITION BY CD.CLM_NO, CD.ORD_NO, CD.ORD_DTL_SEQ, CD.CLM_DTL_TP_CD) AS	CD_CLM_DTL_STAT_CD,
						<!-- 2021-06-09 교환일 경우 배송쪽 남은수량 합 -->
						CASE
							WHEN CB.CLM_TP_CD = '30'
							THEN (SELECT SUM(RMN_CLM_QTY) FROM CLAIM_DETAIL 
								   WHERE CLM_NO = CD.CLM_NO AND ORD_NO = OD.ORD_NO AND ORD_DTL_SEQ = CD.ORD_DTL_SEQ AND CLM_DTL_TP_CD = '40')
							ELSE SUM(CD.RMN_CLM_QTY) OVER(PARTITION BY CD.CLM_NO, CD.ORD_NO, CD.ORD_DTL_SEQ, CD.CLM_DTL_TP_CD )
						END AS CD_CLM_QTY,
						CD.CLM_DTL_TP_CD			AS	CD_CLM_DTL_TP_CD,
						(SELECT USR_DFN3_VAL FROM CODE_DETAIL WHERE GRP_CD = 'CLM_DTL_STAT' AND DTL_CD = CD.CLM_DTL_STAT_CD) AS CLM_DTL_STAT_ASC,
						CD.CLM_RSN_CD				AS	CD_CLM_RSN_CD,
						CD.CLM_RSN_CONTENT			AS	CD_CLM_RSN_CONTENT,
						CD.CLM_DENY_RSN_CONTENT		AS	CD_CLM_DENY_RSN_CONTENT,
						CD.MBR_NO					AS	CD_MBR_NO,
						CD.ORD_NO					AS	CD_ORD_NO,
						CD.ORD_DTL_SEQ				AS	CD_ORD_DTL_SEQ,
						CD.ORG_CLM_NO				AS	CD_ORG_CLM_NO,
						CD.ORG_CLM_DTL_SEQ			AS	CD_ORG_CLM_DTL_SEQ,
						CD.GOODS_ID					AS	CD_GOODS_ID,
						CD.GOODS_NM					AS	CD_GOODS_NM,
						CD.DEAL_GOODS_ID			AS	CD_DEAL_GOODS_ID,
						CD.PAK_GOODS_ID				AS	CD_PAK_GOODS_ID,
						CD.DISP_CLSF_NO				AS	CD_DISP_CLSF_NO,
						CD.COMP_GOODS_ID			AS	CD_COMP_GOODS_ID,
						CD.COMP_ITEM_ID				AS	CD_COMP_ITEM_ID,
						CD.GOODS_PRC_NO				AS	CD_GOODS_PRC_NO,
						CD.SALE_AMT					AS	CD_SALE_AMT,
						CD.PAY_AMT					AS	CD_PAY_AMT,
						CD.RMN_PAY_AMT				AS	CD_RMN_PAY_AMT,
						CD.CMS						AS	CD_CMS,
						CD.GOODS_CMSN_RT			AS	CD_GOODS_CMSN_RT,
						CD.TAX_GB_CD				AS	CD_TAX_GB_CD,
						CD.DLVRC_NO					AS	CD_DLVRC_NO,
						CD.RTN_DLVRC_NO				AS	CD_RTN_DLVRC_NO,
						CD.DLVRA_NO					AS	CD_DLVRA_NO,
						CD.RTRNA_NO					AS	CD_RTRNA_NO,
						CD.DLVR_NO						CD_DLVR_NO,
						CD.COMP_NO					AS	CD_COMP_NO,
						CD.UP_COMP_NO				AS	CD_UP_COMP_NO,
						CD.CLM_CPLT_DTM				AS	CD_CLM_CPLT_DTM,
						CD.RTN_MTD_CD				AS	CD_RTN_MTD_CD,
						CD.OUTSIDE_CLM_DTL_NO		AS	CD_OUTSIDE_CLM_DTL_NO,
						CD.STL_NO					AS	CD_STL_NO,
						CD.DLVR_CPLT_PIC_URL		AS	CD_DLVR_CPLT_PIC_URL,
						CD.DLVR_SMS					AS	CD_DLVR_SMS,
						CD.TWC_TCKT					AS	CD_TWC_TCKT,
						CD.DLVR_CPLT_YN				AS	CD_DLVR_CPLT_YN,
						FN_GET_GOODS_STOCK(OD.GOODS_ID, OD.ITEM_NO) AS CD_STK_QTY,
						(CD.PAY_AMT * CD.CLM_QTY) + CD.RMN_PAY_AMT AS CD_RFD_PAY_TOT_AMT,
						CB.ST_ID					AS	CB_ST_ID,
						CB.CLM_TP_CD				AS	CB_CLM_TP_CD,
						CB.CLM_STAT_CD				AS	CB_CLM_STAT_CD,
						CB.ORD_MDA_CD				AS	CB_ORD_MDA_CD,
						CB.CHNL_ID					AS	CB_CHNL_ID,
						CB.SWAP_YN					AS	CB_SWAP_YN,
						CB.ACPT_DTM					AS	CB_ACPT_DTM,
						CB.CNC_DTM					AS	CB_CNC_DTM,
						CB.CPLT_DTM					AS	CB_CPLT_DTM,
						CB.ACPTR_NO					AS	CB_ACPTR_NO,
						CB.CNCR_NO					AS	CB_CNCR_NO,
						CB.CPLTR_NO					AS	CB_CPLTR_NO,
						CB.OUTSIDE_CLM_NO			AS	CB_OUTSIDE_CLM_NO,
						CB.ORDR_SHOW_YN				AS	CB_ORDR_SHOW_YN,
						CASE
							WHEN CB.CLM_TP_CD = '30'
							THEN ( SELECT CDT.ITEM_NM FROM CLAIM_DETAIL CDT WHERE CDT.CLM_NO = CD.CLM_NO ORDER BY CDT.CLM_DTL_SEQ DESC LIMIT 1)
							ELSE CD.ITEM_NM
						END AS CD_ITEM_NM,
						CASE
							WHEN CB.CLM_TP_CD = '30'
							THEN ( SELECT CDT.ITEM_NO FROM CLAIM_DETAIL CDT WHERE CDT.CLM_NO = CD.CLM_NO ORDER BY CDT.CLM_DTL_SEQ DESC LIMIT 1)
							ELSE CD.ITEM_NO
						END AS CD_ITEM_NO,
						(SELECT DISP_CLSF_NM FROM DISPLAY_CATEGORY WHERE DISP_CLSF_NO = CD.DISP_CLSF_NO) AS CD_DISP_CLSF_NM,
						(
							SELECT IFNULL(SUM(APL_AMT), 0)
							FROM APL_BNFT AB
							WHERE AB.ORD_NO = OD.ORD_NO AND AB.ORD_DTL_SEQ = OD.ORD_DTL_SEQ AND AB.APL_BNFT_GB_CD = '20' AND AB.APL_BNFT_TP_CD  = '210'
						) AS CD_CP_DC_AMT,		/* 상품 쿠폰 할인 금액 */
						(
							SELECT	IFNULL(SUM(APL_AMT), 0)
							FROM APL_BNFT AB
							WHERE	AB.ORD_NO = OD.ORD_NO AND AB.ORD_DTL_SEQ = OD.ORD_DTL_SEQ AND AB.APL_BNFT_GB_CD = '20' AND AB.APL_BNFT_TP_CD  = '220'
						) AS CD_CART_CP_DC_AMT,	/** 장바구니 쿠폰 할인 금액 */
						(SELECT BND_NM_KO FROM BRAND_BASE WHERE BND_NO = (SELECT BND_NO FROM GOODS_BASE WHERE GOODS_ID = CD.GOODS_ID)) AS CD_BND_NM_KO,	/* 브랜드명 국문 */
						(
							 SELECT GROUP_CONCAT( GB.GOODS_NM, ',')
							 FROM GOODS_BASE GB
							 WHERE GB.GOODS_ID IN (
								SELECT ODC.CSTRT_GOODS_ID
								FROM ORD_DTL_CSTRT ODC
								INNER JOIN ORDER_DETAIL ODD ON ODC.ORD_NO = ODD.ORD_NO AND ODC.ORD_DTL_SEQ = ODD.ORD_DTL_SEQ
								WHERE ODC.ORD_NO  = OD.ORD_NO AND ODC.CSTRT_GOODS_GB_CD = '30'
								ORDER BY ODD.ORD_DTL_SEQ ASC
							)
						) AS CD_SUB_GOODS_NM, /*사은품명*/
						CASE WHEN (SELECT COMP_GB_CD FROM COMPANY_BASE CB WHERE CB.COMP_NO = CD.COMP_NO) = '20' THEN '10'
						ELSE (SELECT DLVR_PRCS_TP_CD FROM ORDER_BASE X1 WHERE X1.ORD_NO = CD.ORD_NO)
						END CD_DLVR_PRCS_TP_CD,
						ROW_NUMBER() OVER(PARTITION BY OD.ORD_NO, OD.ORD_DTL_SEQ, CD.CLM_NO ORDER BY CD.CLM_DTL_SEQ DESC) AS CLM_DTL_SEQ_ORDER,
						CASE WHEN CD.CLM_DTL_TP_CD IN ('10', '20') THEN 'Y'
						     WHEN CD.CLM_DTL_TP_CD = '30' 
						     THEN CASE WHEN MIN(CD.CLM_DTL_STAT_CD) OVER(PARTITION BY CD.CLM_NO, CD.ORD_NO, CD.ORD_DTL_SEQ) = '310'
						     		   THEN CASE WHEN MAX(CD.CLM_DTL_STAT_CD) OVER(PARTITION BY CD.CLM_NO, CD.ORD_NO, CD.ORD_DTL_SEQ) = 410
						     		   			 THEN 'N'
						     		   			 ELSE 'Y'
						     		   		 END
						     		   WHEN MIN(CD.CLM_DTL_STAT_CD) OVER(PARTITION BY CD.CLM_NO, CD.ORD_NO, CD.ORD_DTL_SEQ) = '360'
						     		   THEN CASE WHEN MAX(CD.CLM_DTL_STAT_CD) OVER(PARTITION BY CD.CLM_NO, CD.ORD_NO, CD.ORD_DTL_SEQ) = 410
						     		   			 THEN 'Y'
						     		   			 ELSE 'N'
						     		   		 END
						     		   WHEN MIN(CD.CLM_DTL_STAT_CD) OVER(PARTITION BY CD.CLM_NO, CD.ORD_NO, CD.ORD_DTL_SEQ) = '350'
						     		   THEN 'Y'
						     		   ELSE 'Y'
						     	   END
						     WHEN CD.CLM_DTL_TP_CD = '40' 
						     THEN CASE WHEN MIN(CD.CLM_DTL_STAT_CD) OVER(PARTITION BY CD.CLM_NO, CD.ORD_NO, CD.ORD_DTL_SEQ) = '310'
						     		   THEN CASE WHEN MAX(CD.CLM_DTL_STAT_CD) OVER(PARTITION BY CD.CLM_NO, CD.ORD_NO, CD.ORD_DTL_SEQ) = 410
						     		   			 THEN 'Y'
						     		   			 ELSE 'N'
						     		   		 END
				     		   		   WHEN MIN(CD.CLM_DTL_STAT_CD) OVER(PARTITION BY CD.CLM_NO, CD.ORD_NO, CD.ORD_DTL_SEQ) = '360'
						     		   THEN CASE WHEN MAX(CD.CLM_DTL_STAT_CD) OVER(PARTITION BY CD.CLM_NO, CD.ORD_NO, CD.ORD_DTL_SEQ) = 410
						     		   			 THEN 'N'
						     		   			 ELSE 'Y'
						     		   		 END
						     		   WHEN MIN(CD.CLM_DTL_STAT_CD) OVER(PARTITION BY CD.CLM_NO, CD.ORD_NO, CD.ORD_DTL_SEQ) = '350'
						     		   THEN 'N'
						     		   ELSE 'N'
						     	   END
						     ELSE 'N'
						END AS VIEW_CLM_YN
					FROM (
						SELECT
							ORD_NO,
							ST_ID,
							ORD_STAT_CD,
							ORD_MDA_CD,
							MBR_NO,
							MBR_GRD_CD,
							ORD_NM,
							ORDR_ID,
							ORDR_EMAIL,
							ORDR_TEL,
							ORDR_MOBILE,
							ORDR_IP,
							ORD_ACPT_DTM,
							ORD_CPLT_DTM,
							OUTSIDE_ORD_NO,
							CHNL_ID,
							ORD_DTL_CNT,
							ORD_PRCS_RST_CD,
							ORD_PRCS_RST_MSG,
							DATA_STAT_CD,
							DLVR_PRCS_TP_CD,
							ORDR_SHOW_YN
						FROM
							ORDER_BASE OB
						WHERE 
							ORD_NO IN (
								SELECT
									CB.ORD_NO
								FROM CLAIM_BASE CB
								JOIN CLAIM_DETAIL CD ON (CB.CLM_NO  = CD.CLM_NO)
								<trim prefix="WHERE" prefixOverrides="AND |OR ">
								<if test="clmAcptDtmStart != null and clmAcptDtmEnd != null">
									AND CB.ACPT_DTM BETWEEN #{clmAcptDtmStart} AND #{clmAcptDtmEnd} 		
								</if>
								<if test='mbrNo != null'>
									AND CB.MBR_NO = #{mbrNo}
								</if>
								</trim>
							)
							<if test="ordrShowYn != null and ordrShowYn != ''">
							AND ORDR_SHOW_YN = #{ordrShowYn}    /* showYn */
							</if>

						ORDER BY ORD_ACPT_DTM DESC
						<include refid="bizCommon.pageSql" />
					) OB
					INNER JOIN ORDER_DETAIL OD ON (OB.ORD_NO = OD.ORD_NO)
					INNER JOIN GOODS_BASE GB ON (OD.GOODS_ID = GB.GOODS_ID)
					INNER JOIN GOODS_IMG GI ON (OD.GOODS_ID = GI.GOODS_ID AND GI.DLGT_YN = 'Y')
					INNER JOIN COMPANY_BASE CP ON (OD.COMP_NO = CP.COMP_NO )
					LEFT JOIN CLAIM_DETAIL CD ON (OD.ORD_NO = CD.ORD_NO AND OD.ORD_DTL_SEQ = CD.ORD_DTL_SEQ)
					LEFT JOIN CLAIM_BASE CB ON CB.CLM_NO = CD.CLM_NO AND CB.CLM_STAT_CD &lt;> '40'
				) OBB
				WHERE OBB.VIEW_CLM_YN = 'Y'
				  AND OBB.CD_CLM_QTY <![CDATA[>]]> 0
				  AND OBB.ORG_CD_CLM_DTL_SEQ = CD_CLM_DTL_SEQ  
			)OBB
			WHERE 
				LIST_DELIMITER = 'CLAIM'
		) LIST
		ORDER BY ORD_ACPT_DTM DESC, COMP_GB_CD, COMP_NO, IF(CD_CLM_NO = ORD_NO, 'Z00000000000000000', CD_CLM_NO) DESC, FORCE_DTL_STAT, ORD_DTL_SEQ
	</select>
	
	<select id="pageClaimCancelRefundList2ndECount" resultType="java.lang.Integer">
		SELECT
			COUNT(1)
		FROM
			ORDER_BASE OB
		WHERE 
			ORD_NO IN (
				SELECT
					CB.ORD_NO
				FROM CLAIM_BASE CB
				JOIN CLAIM_DETAIL CD ON (CB.CLM_NO  = CD.CLM_NO)
				<trim prefix="WHERE" prefixOverrides="AND |OR ">
				<if test="clmAcptDtmStart != null and clmAcptDtmEnd != null">
				AND CB.ACPT_DTM BETWEEN #{clmAcptDtmStart} AND DATE_ADD(#{clmAcptDtmEnd}, INTERVAL 1 DAY) 		
				</if>
				<if test='mbrNo != null'>
				AND CB.MBR_NO = #{mbrNo}
				</if>
				</trim>
			)
			<if test="ordrShowYn != null and ordrShowYn != ''">
			AND ORDR_SHOW_YN = #{ordrShowYn}    /* showYn */
			</if>
    </select>
	
    <select id="pageClaimCancelRefundListCount" resultType="java.lang.Integer">
        <!--
            Query Name : claim.pageClaimCancelRefundListCount
            Description : 취소 교환 반품 조회 카운트
        -->
        SELECT /* QUERYID(claim.pageClaimCancelRefundListCount) */
        		COUNT(*)
       FROM CLAIM_BASE CB
        JOIN CLAIM_DETAIL CD ON (CB.CLM_NO  = CD.CLM_NO)
        JOIN ORDER_BASE OB ON (CB.ORD_NO = OB.ORD_NO)
	    JOIN COMPANY_BASE CP ON (CD.COMP_NO = CP.COMP_NO)
	    LEFT JOIN GOODS_IMG GI ON (CD.GOODS_ID = GI.GOODS_ID AND GI.DLGT_YN = 'Y')
       	WHERE 1 = 1
		<!--if test="clmAcptDtmStart != null and clmAcptDtmStart != '' and clmAcptDtmEnd != null and clmAcptDtmEnd != ''" -->
		<if test="clmAcptDtmStart != null and clmAcptDtmEnd != null">
		AND CB.ACPT_DTM BETWEEN #{clmAcptDtmStart} AND DATE_ADD(#{clmAcptDtmEnd}, INTERVAL 1 DAY)
		</if>
		<if test='clmTpCd != null and clmTpCd != ""'>
		AND CB.CLM_TP_CD = #{clmTpCd}
		</if>
		<if test='mbrNo != null'>
		AND CB.MBR_NO = #{mbrNo}
		</if>
		<if test="ordrEmail != null and ordrEmail != ''">
		AND OB.ORDR_EMAIL = #{ordrEmail} /* 이메일주소 */
		</if>
		<if test="ordNo != null and ordNo != ''">
		AND CB.ORD_NO = #{ordNo} /* 주문번호 */
		</if>
		/* 1. 맞교환 이면 교환배송 상태만 조회
		   2. 교환승인완료 이면 교환배송 상태만 조회
		   3. 1,2 번이 아니면 취소,반품,교환수거 상태만 조회 */
		AND CASE
			      WHEN CB.SWAP_YN = '${@framework.common.constants.CommonConstants@COMM_YN_Y}' THEN CD.CLM_DTL_TP_CD = '${@framework.common.constants.CommonConstants@CLM_DTL_TP_40}'
			      WHEN '${@framework.common.constants.CommonConstants@CLM_DTL_STAT_360}' IN (SELECT CLM_DTL_STAT_CD FROM CLAIM_DETAIL WHERE CLM_NO = CB.CLM_NO)
			      		THEN CD.CLM_DTL_TP_CD = '${@framework.common.constants.CommonConstants@CLM_DTL_TP_40}'
			      ELSE CD.CLM_DTL_TP_CD IN ('${@framework.common.constants.CommonConstants@CLM_TP_10}'
			      								, '${@framework.common.constants.CommonConstants@CLM_TP_20}'
			      								, '${@framework.common.constants.CommonConstants@CLM_TP_30}')
				END
    </select>

	<resultMap type="biz.app.claim.model.ClaimBaseVO" id="claimRefundMap">
		<id		property="clmNo"		column="CLM_NO"/>		<!-- 클레임 번호 -->
		<result	property="ordNo"		column="ORD_NO"/>		<!-- 주문 번호 -->
		<result property="clmTpCd"		column="CLM_TP_CD"/>	<!-- 클레임 유형 코드 -->
		<result property="clmStatCd"	column="CLM_STAT_CD"/>	<!-- 클레임 상태 코드 -->
		<result property="acptDtm"		column="ACPT_DTM"/>		<!-- 접수 일시 -->
		<result property="cpltDtm"		column="CPLT_DTM"/>		<!-- 완료 일시 -->
		<result property="cncDtm"		column="CNC_DTM"/>		<!-- 취소 일시 -->
		<result property="ordMdaCd"		column="ORD_MDA_CD"/>	<!-- 주문 매체 코드 -->
		<result property="mbrNo"		column="MBR_NO"/>		<!-- 회원 번호 -->
		<result property="ordStatCd"      column="ORD_STAT_CD"/>       <!-- 주문 상태 코드 -->
		<result property="ordNm"      column="ORD_NM"/>       <!-- 회원 번호 -->
		<result property="ordrId"      column="ORDR_ID"/>       <!-- 회원 번호 -->
		<result property="ordrEmail"      column="ORDR_EMAIL"/>       <!-- 회원 번호 -->
		<result property="ordrTel"      column="ORDR_TEL"/>       <!-- 회원 번호 -->
		<result property="ordrMobile"      column="ORDR_MOBILE"/>       <!-- 회원 번호 -->
		<result property="acptrNo"		column="ACPTR_NO"/>		<!-- 접수자 번호 -->
		<result property="acptrNm"		column="ACPTR_NM"/>		<!-- 접수자 명-->
		<result property="cncrNo"		column="CNCR_NO"/>		<!-- 취소자 번호 -->
		<result property="cncrNm"		column="CNCR_NM"/>		<!-- 취소자명 -->
		<result property="cpltrNo"		column="CPLTR_NO"/>		<!-- 완료자 번호 -->
		<result property="cpltrNm"		column="CPLTR_NM"/>		<!-- 완료자명 -->
		<result property="sysRegrNo"	column="SYS_REGR_NO"/>	<!-- 시스템 등록자 번호 -->
		<result property="sysRegDtm"	column="SYS_REG_DTM"/>	<!-- 시스템 등록 일시 -->
		<result property="sysUpdrNo"	column="SYS_UPDR_NO"/>	<!-- 시스템 수정자 번호 -->
		<result property="sysUpdDtm"	column="SYS_UPD_DTM"/>	<!-- 시스템 수정 일시 -->
		<result property="sysRegrNm"	column="SYS_REGR_NM"/>	<!-- 시스템 등록자 -->
		<result property="sysUpdrNm"	column="SYS_UPDR_NM"/>	<!-- 시스템 수정자 -->
		<result property="swapYn"		column="SWAP_YN"/>		<!-- 맞교환여부 -->

		<result property="dlvraNo"			column="DLVRA_NO"/>				<!-- 배송지 번호 -->
		<result property="rtrnaNo"			column="RTRNA_NO"/>				<!-- 회수지 번호 -->
		
		<result property="refundBankCd"				column="REFUND_BANK_CD"/>			<!-- 은행 코드 -->
		<result property="refundAcctNo"				column="REFUND_ACCT_NO"/>			<!-- 계좌 번호 -->
		<result property="refundOoaNm"				column="REFUND_OOA_NM"/>			<!-- 예금주 명 -->

		<collection property="claimDetailRefundListVO" ofType="biz.app.claim.model.ClaimDetailRefundVO">
			<id		property="clmDtlSeq"		column="CLM_DTL_SEQ"/>			<!-- 클레임 상세 순번 -->
			<result property="clmNo"			column="CLM_NO"/>				<!-- 클레임 번호 -->
			<result property="clmDtlTpCd"			column="CLM_DTL_TP_CD"/>				<!-- 클레임 상세 유형 코드 -->
			<result property="clmDtlStatCd"			column="CLM_DTL_STAT_CD"/>				<!-- 클레임 상세 상태 코드 -->
			<result property="clmDtlGrpStatCd"      column="CLM_DTL_GRP_STAT_CD"/>          <!-- 클레임 상세 상태 코드, 사용자에게 보여줄 상태 코드 -->
			<result property="clmTpCd"			column="CLM_TP_CD"/>			<!-- 클레임 유형 코드 -->
			<result property="clmRsnCd"			column="CLM_RSN_CD"/>			<!-- 클레임 사유 코드 -->
			<result property="clmRsnContent"			column="CLM_RSN_CONTENT"/>			<!-- 클레임 사유 내용 -->
			<result property="clmDenyRsnContent"			column="CLM_DENY_RSN_CONTENT"/>			<!-- 클레임 거부 이유 내용 -->
			<result property="clmSysUpdDtm"			column="CLM_SYS_UPD_DTM"/>			<!-- 클레임 수정 일자 -->
			<result property="clmStatCd"		column="CLM_STAT_CD"/>			<!-- 클레임 상태 코드 -->
			<result property="ordNo"			column="ORD_NO"/>				<!-- 주문 번호 -->
			<result property="ordDtlSeq"		column="ORD_DTL_SEQ"/>			<!-- 주문 상세 순번 -->
			<result property="goodsId"			column="GOODS_ID"/>				<!-- 상품 아이디 -->
			<result property="goodsNm"			column="GOODS_NM"/>				<!-- 상품 명 -->
			<result property="itemNo"			column="ITEM_NO"/>				<!-- 단품 번호 -->
			<result property="itemNm"			column="ITEM_NM"/>				<!-- 단품 명 -->
			<result property="bndNmKo"          column="BND_NM_KO"/>            <!-- 브랜드명 국문 -->
			<result property="dealGoodsId"		column="DEAL_GOODS_ID"/>		<!-- 딜 상품 아이디 -->
			<result property="dispClsfNo"		column="DISP_CLSF_NO"/>			<!-- 전시 분류 번호 -->
			<result property="saleAmt"			column="SALE_AMT"/>				<!-- 판매 금액 -->
			<result property="ordQty"			column="ORD_QTY"/>				<!-- 주문 수량 -->
			<result property="payAmt"			column="PAY_AMT"/>				<!-- 결제 금액 -->
			<result property="clmQty"			column="CLM_QTY"/>				<!-- 클레임 수량 -->
			<result property="splAmt"			column="SPL_AMT"/>				<!-- 공급 금액 -->
			<result property="goodsCmsnRt"		column="GOODS_CMSN_RT"/>		<!-- 상품수수료율 -->
			<result property="compNo"			column="COMP_NO"/>				<!-- 업체 번호 -->
			<result property="dlvrcNo"			column="DLVRC_NO"/>				<!-- 배송비 번호 -->
			<result property="dlvraNo"			column="DLVRA_NO"/>				<!-- 배송지 번호 -->
			<result property="dlvrNo"			column="DLVR_NO"/>				<!-- 배송 번호 -->
			<result property="mbrNo"			column="MBR_NO"/>				<!-- 회원 번호 -->
			<result property="clmCpltDtm"		column="CLM_CPLT_DTM"/>			<!-- 클레임 완료 일시 -->
			<result property="dlvraNo"			column="DLVRA_NO"/>				<!-- 배송지 번호 -->
			<result property="rtrnaNo"			column="RTRNA_NO"/>				<!-- 회수지 번호 -->

			<result property="outsideClmDtlNo"	    	column="OUTSIDE_CLM_DTL_NO"/>    	<!-- 외부 클레임 상세 번호 -->
			<result property="imgSeq"		    		column="IMG_SEQ"/>			    	<!-- 상품 이미지 순번-->
			<result property="imgPath"		    		column="IMG_PATH"/>			    	<!-- 상품 이미지 경로-->
			<result property="rvsImgPath"				column="RVS_IMG_PATH"/>				<!-- 상품 반전 이미지 경로 -->
			<result property="bndNmKo"					column="BND_NM_KO"/>				<!-- 브랜드명 국문 -->
			<result property="ordAcptDtm"				column="ORD_ACPT_DTM"/>				<!-- 주문 접수 일시 -->
			<result property="compNm"					column="COMP_NM"/>					<!-- 업체 명 -->
			<result property="ordDtlStatCd"				column="ORD_DTL_STAT_CD"/>			<!-- 주문 상태 상세 코드 -->

			<result property="payNo"		column="PAY_NO"/>			<!-- 결제 번호 -->
			<result property="payMeansCd"	column="PAY_MEANS_CD"/>			<!-- 결제 수단 코드 -->
			<result property="payMeanAmt"			column="PAY_MEAN_AMT"/>		<!-- 결제 금액 -->
			
			<result property="orgCardcCd"			column="ORG_CARDC_CD"/>		<!-- 카드사 코드 -->
			<result property="orgCardNo"				column="ORG_CARD_NO"/>				<!-- 카드 번호 -->
			<result property="orgBankCd"				column="ORG_BANK_CD"/>			<!-- 은행 코드 -->
			<result property="orgAcctNo"				column="ORG_ACCT_NO"/>			<!-- 계좌 번호 -->
			<result property="orgOoaNm"				column="ORG_OOA_NM"/>			<!-- 예금주 명 -->
			
			<result property="pakGoodsId"			column="PAK_GOODS_ID"/>				<!-- 묶음 상품 아이디 -->
		</collection>

	</resultMap>

	<select id="getClaimRefund" resultMap="claimRefundMap">
		<!--
			Query Name : claim.getClaimRefund
			Description : 클레임(환불)
		-->
		SELECT	/* QUERYID(claim.getClaimRefund) */
				CLM.CLM_NO				/* 클레임 번호 */
			, CLM.CLM_TP_CD        /* 클레임 유형 코드 */
			, CLM.CLM_STAT_CD	/* 클레임 상태코드 */
			, CLM.ACPT_DTM		/* 접수 일시 */
			, @rownum:= CASE WHEN @rownum = 0 THEN @rownum+1 ELSE 2 end AS CLM_DTL_SEQ		/* 클레임 상세 순번 */
			, CLM.CLM_DTL_STAT_CD	/* 클레임 상세 상태 코드 */
			, CASE
                WHEN CLM.CLM_DTL_STAT_CD IN ('110', '210', '310')
                THEN '10' -- 접수
                WHEN CLM.CLM_DTL_STAT_CD IN ('220', '230', '240', '320', '330', '340', '350', '360', '420', '430', '440')
                THEN '20' -- 진행
                WHEN CLM.CLM_DTL_STAT_CD IN ('120', '260', '450')
                THEN '30' -- 완료
              END AS CLM_DTL_GRP_STAT_CD
			, CLM.CLM_RSN_CD			/* 클레임 사유 코드 */
			, CLM.CLM_RSN_CONTENT			/* 클레임 사유 내용 */
			, CLM.CLM_DENY_RSN_CONTENT			/* 클레임 거부 이유 내용 */
			, CLM.ORD_NO				/* 주문 번호 */
			, CLM.ORD_DTL_SEQ		/* 주문 상세 순번 */
			, CLM.GOODS_ID			/* 상품 아이디 */
			, CLM.PAK_GOODS_ID			/* 묶음 상품 아이디 */
			, CLM.GOODS_NM			/* 상품 명 */
			, CLM.ITEM_NO			/* 단품 번호 */
			, CLM.ITEM_NM			/* 단품 명 */
			,(SELECT BND_NM_KO FROM BRAND_BASE WHERE BND_NO = (SELECT BND_NO FROM GOODS_BASE WHERE GOODS_ID = CLM.GOODS_ID)) AS BND_NM_KO
			, CLM.DEAL_GOODS_ID		/* 딜 상품 아이디 */
			, CLM.DISP_CLSF_NO		/* 전시 분류 번호 */
			, CLM.SALE_AMT			/* 판매 금액 */
			, OD.ORD_QTY			/* 주문 수량 */
			, CLM.PAY_AMT			/* 결제 금액 */
			, CLM.CLM_QTY			/* 클레임 수량 */
			, CLM.COMP_NO			/* 업체 번호 */
			, CLM.DLVRC_NO			/* 배송비 번호 */
			, CLM.DLVRA_NO			/* 배송지 번호 */
			, CLM.RTRNA_NO			/* 회수지 번호 */
			, CLM.DLVR_NO			/* 배송 번호 */
			, CLM.MBR_NO			/* 회원 번호 */
			, CLM.CLM_CPLT_DTM		/* 클레임 완료 일시 */
			, CLM.SWAP_YN			/* 맞교환여부 */
			, CLM.SYS_UPD_DTM AS CLM_SYS_UPD_DTM		/* 클레임 수정 일자 */
			, OB.ORD_STAT_CD			/* 주문 상태 코드 */
			, OB.ORD_NM
			, OB.ORDR_ID
			, OB.ORDR_EMAIL
			, OB.ORDR_TEL
			, OB.ORDR_MOBILE
			, PCR.BANK_CD			AS REFUND_BANK_CD			/* 은행 코드 */
			, PCR.ACCT_NO			AS REFUND_ACCT_NO			/* 계좌 번호 */
			, PCR.OOA_NM			AS REFUND_OOA_NM					/* 예금주 명 */
			, PB.CARDC_CD		AS ORG_CARDC_CD		/* 원 결제 카드사 코드 */
			, PB.CARD_NO			AS ORG_CARD_NO		/* 원 결제 카드 번호 */
			, PB.BANK_CD			AS ORG_BANK_CD			/* 원 결제 카드 번호 */
			, PB.ACCT_NO			AS ORG_ACCT_NO		/* 원 결제 카드 번호 */
			, PB.OOA_NM			AS ORG_OOA_NM			/* 원 결제 카드 번호 */
			, PB.PAY_MEANS_CD			AS PAY_MEANS_CD			/* 원 결제 수단 */
			, GI.IMG_SEQ				 /* 상품 이미지 SEQ  */
			, GI.IMG_PATH			 /* 상품 이미지 PATH  */
		FROM	(
			SELECT CB.CLM_NO
			     	, CB.CLM_TP_CD
				 	, CD.CLM_DTL_SEQ
				 	, CB.CLM_STAT_CD
				 	, CD.CLM_DTL_TP_CD
				 	, CD.CLM_DTL_STAT_CD
	             	, CD.CLM_RSN_CD	/* 클레임 사유 코드 */
	             	, CD.CLM_RSN_CONTENT	/* 클레임 사유 내용 */
	             	, CD.CLM_DENY_RSN_CONTENT	/* 클레임 거부 이유 내용 */
	             	, CD.ORD_NO	/* 주문 번호 */
	             	, CD.ORD_DTL_SEQ	/* 주문 상세 순번 */
	             	, CD.GOODS_ID	/* 상품 아이디 */
	             	, CD.PAK_GOODS_ID	/* 상품 아이디 */
	             	, CD.GOODS_NM	/* 상품 명 */
	             	, CD.ITEM_NO	/* 단품 번호 */
	             	, CD.ITEM_NM	/* 단품 명 */
	             	, CD.DEAL_GOODS_ID	/* 딜 상품 아이디 */
	             	, CD.DISP_CLSF_NO	/* 전시 분류 번호 */
	             	, CD.SALE_AMT	/* 판매 금액 */
	             	, CD.PAY_AMT	/* 결제 금액 */
	             	, CD.CLM_QTY	/* 클레임 수량 */
	             	, CD.COMP_NO	/* 업체 번호 */
	             	, CD.DLVRC_NO	/* 배송비 번호 */
	             	, CD.DLVRA_NO	/* 배송지 번호 */
	             	, CD.RTRNA_NO	/* 회수지 번호 */
	             	, CD.DLVR_NO	/* 배송 번호 */
	             	, CD.MBR_NO	/* 회원 번호 */
	             	, CD.CLM_CPLT_DTM	/* 클레임 완료 일시 */
				 	, CB.ACPT_DTM	/* 접수 일시 */
					, CB.SWAP_YN		/* 맞교환여부 */
					, CD.SYS_UPD_DTM		/* 수정 일자 */
	         FROM CLAIM_BASE CB
	         INNER JOIN CLAIM_DETAIL CD ON (CB.CLM_NO = CD.CLM_NO)
	        WHERE CB.CLM_NO = #{clmNo}
	        <if test='clmDtlSeq != null and clmDtlSeq != ""'>
	           AND CD.CLM_DTL_SEQ = #{clmDtlSeq}
	        </if>   
		) CLM
		INNER JOIN ORDER_BASE OB ON (OB.ORD_NO = CLM.ORD_NO)
		INNER JOIN ORDER_DETAIL OD ON (OB.ORD_NO = OD.ORD_NO AND OD.ORD_NO = CLM.ORD_NO AND OD.ORD_DTL_SEQ = CLM.ORD_DTL_SEQ)
		LEFT OUTER JOIN GOODS_IMG GI ON GI.GOODS_ID = clm.GOODS_ID AND GI.DLGT_YN = '${@framework.common.constants.CommonConstants@COMM_YN_Y}'
	    LEFT OUTER JOIN (SELECT PB.CLM_NO, IFNULL(PCR.BANK_CD, PB.BANK_CD) AS BANK_CD, IFNULL(PCR.ACCT_NO, PB.ACCT_NO) AS ACCT_NO, IFNULL(PCR.OOA_NM, PB.OOA_NM) AS OOA_NM
	    									, PB.CARDC_CD		
											, PB.CARD_NO		
			                     FROM PAY_BASE PB /* 결제 기본 */
		                		 LEFT OUTER JOIN PAY_CASH_REFUND PCR ON PCR.PAY_NO = PB.PAY_NO		/* 현금 환불 */
			                     WHERE PB.CLM_NO = #{clmNo}) PCR ON PCR.CLM_NO = CLM.CLM_NO
		LEFT OUTER JOIN PAY_BASE PB ON (
                			OD.ORD_NO = PB.ORD_NO
                			AND PB.PAY_GB_CD = '${@framework.common.constants.CommonConstants@PAY_GB_10}'
                			AND PB.ORD_CLM_GB_CD = '${@framework.common.constants.CommonConstants@ORD_CLM_GB_10}'
                			AND PB.PAY_STAT_CD = '${@framework.common.constants.CommonConstants@PAY_STAT_01}'
                			AND PB.CNC_YN = '${@framework.common.constants.CommonConstants@COMM_YN_N}' )
        , (SELECT @ROWNUM:=0) TMP
		WHERE	1 = 1
<!-- 		AND CLM.CLM_NO = #{clmNo} -->
		ORDER BY CLM.CLM_NO DESC, CLM.CLM_DTL_SEQ ASC, PB.PAY_MEANS_CD ASC 
	</select>

	<resultMap type="biz.app.claim.model.ClaimRefundPayVO" id="claimRefundPayMap">
		<id		property="clmNo"		column="CLM_NO"/>		<!-- 클레임 번호 -->
		<result property="goodsAmt"	column="GOODS_AMT"/>			<!-- 상품 합계 금액 -->
		<result property="orgDlvrcAmt"	column="ORG_DLVRC_AMT"/>			<!-- 원 취소된 배송 금액 -->
		<result property="cpDcAmt"	column="CP_DC_AMT"/>			<!-- 쿠폰 할인 금액 -->
		<result property="addCpDcAmt"	column="ADD_CP_DC_AMT"/>			<!-- 쿠폰 할인 금액 -->
		<result property="newRtnOrgDlvrcAmt"	column="NEW_RTN_ORG_DLVRC_AMT"/>			<!-- 신규 반품/교한 회수 배송비 금액 -->
		<result property="clmDlvrcAmt"	column="CLM_DLVRC_AMT"/>			<!-- 추가 배송비 -->
		<result property="bankCd"			column="BANK_CD"/>		
		<result property="acctNo"			column="ACCT_NO"/>		
		<result property="ooaNm"			column="OOA_NM"/>
		<result property="mpRefundUseAmt"			column="MP_REFUND_USE_AMT"/>				

		<collection property="claimRefundPayDetailListVO" ofType="biz.app.claim.model.ClaimRefundPayDetailVO">
			<id		property="payNo"			column="PAY_NO"/>		<!-- 결제 번호 -->
			<result property="payMeansCd"		column="PAY_MEANS_CD"/>	<!-- 결제 수단 코드 -->
			<result property="payGbCd"			column="PAY_GB_CD"/>	<!-- 결제 구분 코드 -->
			<result property="payAmt"			column="PAY_AMT"/>		<!-- 결제 금액 -->
			<result property="bankCd"			column="BANK_CD"/>		<!-- 결제 금액 -->
			<result property="acctNo"			column="ACCT_NO"/>		<!-- 결제 금액 -->
			<result property="ooaNm"			column="OOA_NM"/>		<!-- 결제 금액 -->
		</collection>

	</resultMap>

	<select id="getClaimRefundPay" resultMap="claimRefundPayMap">
		<!--
			Query Name : claim.getClaimRefundPay
			Description : 클레임(환불 가격)
		-->
		SELECT	/* QUERYID(claim.getClaimRefundPay) */
			CB.CLM_NO
			, (SELECT IFNULL(SUM((SALE_AMT - FN_GET_ORDER_DTL_PRMT_DC_AMT(ORD_NO, ORD_DTL_SEQ)) * CLM_QTY), 0) FROM CLAIM_DETAIL WHERE CLM_NO = CB.CLM_NO) AS GOODS_AMT  /* 상품 합계 금액 */
	   		, (SELECT IFNULL(SUM(REAL_DLVR_AMT), 0) FROM DELIVERY_CHARGE WHERE CNC_CLM_NO = CB.CLM_NO) AS ORG_DLVRC_AMT  /* 원 취소된 배송 금액 */
	   		, (SELECT IFNULL(SUM((FN_GET_ORDER_DTL_CP_DC_AMT(ORD_NO, ORD_DTL_SEQ) * CLM_QTY)+(RMN_PAY_AMT * -1)), 0) FROM CLAIM_DETAIL WHERE CLM_NO = CB.CLM_NO) AS CP_DC_AMT  /* 쿠폰 할인 금액 */
	        , (SELECT IFNULL(SUM(REAL_DLVR_AMT), 0) FROM DELIVERY_CHARGE
	           WHERE DLVRC_NO IN (SELECT RTN_DLVRC_NO FROM CLAIM_DETAIL WHERE CLM_NO = CB.CLM_NO)) AS NEW_RTN_ORG_DLVRC_AMT  /* 신규 반품/교한 회수 배송비 금액 */
	        , (SELECT IFNULL(SUM(REAL_DLVR_AMT), 0) FROM DELIVERY_CHARGE
	           WHERE DLVRC_NO IN (SELECT DLVRC_NO FROM CLAIM_DETAIL WHERE CLM_NO = CB.CLM_NO)
	          ) AS CLM_DLVRC_AMT  /* 추가 배송비 */
	        , (SELECT IFNULL(SUM(IFNULL(CP_DC_AMT, 0)), 0) FROM DELIVERY_CHARGE
	           WHERE DLVRC_NO IN (SELECT DLVRC_NO FROM CLAIM_DETAIL WHERE CLM_NO = CB.CLM_NO)
	          ) AS ADD_CP_DC_AMT  /* 추가 쿠폰비 */
	        , IFNULL((SELECT IFNULL(SUM(IF(MP_REAL_LNK_GB_CD = '${@framework.common.constants.CommonConstants@MP_REAL_LNK_GB_10}', USE_PNT * -1,  USE_PNT)), 0) FROM MP_LNK_HIST WHERE CLM_NO = CB.CLM_NO), 0) AS MP_REFUND_USE_AMT
			, PB.PAY_NO			/* 결제 번호 */
			, PB.PAY_MEANS_CD			/* 결제 수단 코드 */
			, (CASE WHEN ( PB.PAY_GB_CD = '10' OR PB.PAY_GB_CD = '30') THEN (PB.PAY_AMT * -1)
		                 ELSE PB.PAY_AMT
		            END
		     ) AS  PAY_AMT			/* 결제 금액 */
			, PB.BANK_CD			/* 은행 코드 */
			, PB.ACCT_NO			/* 계좌 번호 */
			, PB.OOA_NM			/* 예금주 */
			, PB.PAY_GB_CD		/* 결제 구분 코드 */
		FROM	CLAIM_BASE CB
LEFT OUTER JOIN PAY_BASE PB ON (CB.CLM_NO = PB.CLM_NO)
		WHERE CB.CLM_NO = #{clmNo}
	</select>
	
	<select id="getClaimExcelList" resultType="biz.app.claim.model.ClaimListVO">
		<!--
			Query Name : claim.getClaimExcelList
			Description : 클레임 엑셀 조회
		-->
		SELECT 	/* QUERYID(claim.getClaimExcelList) */
						 CB.CLM_NO			/*클레임 번호             */
						,CB.ST_ID			/*사이트 ID		  */
						,ST.ST_NM           /* 사이트 명             */
						,CB.ORD_NO			/*주문 번호		  */
						,CB.CLM_TP_CD		/*클레임 유형 코드	  */
						,CB.CLM_STAT_CD		/*클레임 상태 코드	  */
						,CB.ACPT_DTM AS CLM_ACPT_DTM			/*클레임 접수 일시		  */
						,CB.CNC_DTM AS CLM_CNC_DTM			/*클레임 취소 일시		  */
						,CB.CPLT_DTM	 AS CLM_CPLT_DTM	/*클레임 완료 일시		  */
						,CD.CLM_DTL_SEQ		/*클레임 상세 순번	  */
						,CD.CLM_DTL_TP_CD	/*클레임 상세 유형 코드   */
						,CD.CLM_DTL_STAT_CD	/*클레임 상세 상태 코드   */
						,CONCAT((SELECT DTL_NM FROM CODE_DETAIL WHERE GRP_CD = 'CLM_RSN' AND DTL_CD =  CD.CLM_RSN_CD AND SYS_DEL_YN = 'N'), '( 귀책 : ' , CASE WHEN (SELECT USR_DFN2_VAL FROM CODE_DETAIL WHERE GRP_CD = 'CLM_RSN' AND DTL_CD = CD.CLM_RSN_CD)='20' THEN '업체' ELSE '고객' END , ')' ) AS CLM_RSN_NM
						,CD.CLM_RSN_CONTENT 	/* 클레임 사유 내용 */
						,CD.GOODS_ID		/*상품 아이디		  */
						,CD.GOODS_NM		/*상품 명		      */
						,IF(OD.PAK_GOODS_ID IS NOT NULL, GB.GOODS_NM, CD.GOODS_NM) AS GOODS_NM	/*상품 명		      */
						,CD.ITEM_NO			/*단품 번호		  */
						,CD.ITEM_NM			/*단품 명		      */
						,CD.CLM_QTY			/*클레임 수량		  */
						,CD.CLM_CPLT_DTM	/*클레임 완료 일시	  */
						,CD.ORD_DTL_SEQ
						,OB.ORD_ACPT_DTM AS ACPT_DTM /*주문 접수 일시	  */
						,OB.ORD_CPLT_DTM AS CPLT_DTM /*결제 완료 일시	  */
						,CB.MBR_NO			/*회원 번호	  */
						,OB.ORD_NM			/*주문자 이름	  */
						,OB.ORDR_ID			/*주문자 ID	  */
						,CONCAT(FN_GET_COMPANY_NAME(CD.COMP_NO) , '(', FN_GET_CODE_NAME('COMP_TP',  (SELECT COMP_TP_CD FROM COMPANY_BASE CP WHERE CP.COMP_NO= CD.COMP_NO), ''), ')')  AS COMP_TP_NM
						,FN_GET_COMPANY_NAME(IFNULL(S.PHS_COMP_NO, CD.COMP_NO)) AS PHS_COMP_NM /* 매입 업체 이름 */ 
						,FN_GET_CODE_NAME('GOODS_CSTRT_TP',  GB.GOODS_CSTRT_TP_CD, '') AS GOODS_CSTRT_TP_NM		/* 상품 구성 유형 - ITEM:단품 ATTR:옵션 SET:세트 PAK:묶음 */
						,OD.ORD_QTY			/*주문 수량	  */
						,(
		        			 SELECT 
							  	group_concat( G.GOODS_ID SEPARATOR ',') 
							  FROM GOODS_BASE G    	
							  	WHERE G.GOODS_ID IN  
							  	(					                   
									SELECT ODC.CSTRT_GOODS_ID 
									  FROM ORD_DTL_CSTRT ODC	       
									 WHERE ODC.ORD_NO  = CB.ORD_NO 
									 AND ODC.ORD_DTL_SEQ = CD.ORD_DTL_SEQ
									 AND ODC.CSTRT_GOODS_GB_CD = '30'								
								)	
		        		) AS SUB_GOODS_NM		/*사은품 명*/   
		        		, PB2.PAY_MEANS_CD		/*결제 수단*/
		        		, PB2.PAY_AMT					/*결제 금액*/
		        		, PB.REFUND_RFD_AMT_CASH				/*현금 환불 금액*/
		        		, PB.REFUND_RFD_AMT_CARD		/*카드 환불 금액*/
		        		, PB.REFUND_RFD_AMT_PAY		/* 간편결제 환불 금액*/
		        		, PB.OOA_NM AS REFUND_OOA_NM		/*환불 계좌 예금주명*/
		        		, PB.BANK_CD AS REFUND_BANK_CD		/*환불 계좌 은행명*/
		        		, PB.ACCT_NO AS REFUND_ACCT_NO 		/*환불 계좌 */
		        		, CONCAT(IFNULL(FN_GET_CODE_NAME('PAY_MEANS', PB3.PAY_MEANS_CD,'Y'), '가상계좌'), ' ',IFNULL(FN_GET_CODE_NAME('PAY_MEANS', GS_PNT.PAY_MEANS_CD,'Y'),''), ' ', IFNULL(FN_GET_CODE_NAME('PAY_MEANS', MP_PNT.PAY_MEANS_CD,'Y'),'')) AS PAY_MEANS_NM
			FROM  	CLAIM_BASE CB
						INNER JOIN ST_STD_INFO ST ON ( ST.ST_ID = CB.ST_ID )
						INNER JOIN  CLAIM_DETAIL CD ON (CB.CLM_NO = CD.CLM_NO )
						JOIN COMPANY_BASE CP ON (CD.COMP_NO = CP.COMP_NO)
						JOIN ORDER_BASE OB ON (OB.ORD_NO = CB.ORD_NO)
						INNER JOIN ORDER_DETAIL OD ON (OB.ORD_NO = OD.ORD_NO AND OD.ORD_NO = CD.ORD_NO AND OD.ORD_DTL_SEQ = CD.ORD_DTL_SEQ)
						INNER JOIN GOODS_BASE GB ON GB.GOODS_ID = CD.GOODS_ID
						LEFT OUTER JOIN ITEM I ON (CD.GOODS_ID = I.GOODS_ID)
        				LEFT OUTER JOIN SKU_BASE S ON (I.SKU_CD = S.SKU_CD)
        				LEFT JOIN (SELECT 
        										IFNULL(SUM(CASE WHEN PB.PAY_MEANS_CD IN ('20','30','40') THEN PB.PAY_AMT ELSE 0 END),0) AS REFUND_RFD_AMT_CASH
        										, IFNULL(SUM(CASE WHEN PB.PAY_MEANS_CD = '10' THEN PB.PAY_AMT ELSE 0 END),0) AS REFUND_RFD_AMT_CARD
        										, IFNULL(SUM(CASE WHEN PB.PAY_MEANS_CD IN ('70','71','72') THEN PB.PAY_AMT ELSE 0 END),0) AS REFUND_RFD_AMT_PAY
        										, CLM_NO
        										, OOA_NM
        										, BANK_CD
        										, ACCT_NO
        								FROM 
        										PAY_BASE PB
        								WHERE 
        										CLM_NO IS NOT NULL
					             		GROUP BY 
					             				CLM_NO ) PB ON CD.CLM_NO = PB.CLM_NO   /*클레임 환불 금액 용 */
        				LEFT JOIN (SELECT 
        										IFNULL(SUM(PAY_AMT),0) AS PAY_AMT
        										, ORD_NO
        										, group_concat(distinct PAY_MEANS_CD separator ',') AS PAY_MEANS_CD
        								FROM 
        										PAY_BASE PB2
        								WHERE 
        										PB2.PAY_GB_CD = '${@framework.common.constants.CommonConstants@PAY_GB_20}'
						             			AND PB2.ORD_CLM_GB_CD = '${@framework.common.constants.CommonConstants@ORD_CLM_GB_20}'
						             			AND PB2.CNC_YN = '${@framework.common.constants.CommonConstants@COMM_YN_N}'
					             		GROUP BY 
					             				ORD_NO ) PB2 ON CD.ORD_NO = PB2.ORD_NO /*결제 금액 용 */
						LEFT OUTER JOIN PAY_BASE PB3 ON (
									CB.ORD_NO = PB3.ORD_NO
									AND PB3.PAY_GB_CD = '${@framework.common.constants.CommonConstants@PAY_GB_10}'
									AND PB3.ORD_CLM_GB_CD = '${@framework.common.constants.CommonConstants@ORD_CLM_GB_10}'
									AND PB3.PAY_STAT_CD = '${@framework.common.constants.CommonConstants@PAY_STAT_01}'
									AND PB3.CNC_YN = '${@framework.common.constants.CommonConstants@COMM_YN_N}'
									AND PB3.PAY_MEANS_CD != '${@framework.common.constants.CommonConstants@PAY_MEANS_80}'
									AND PB3.PAY_MEANS_CD != '${@framework.common.constants.CommonConstants@PAY_MEANS_81}'
								)
						LEFT OUTER JOIN PAY_BASE GS_PNT ON (
									CB.ORD_NO = GS_PNT.ORD_NO
									AND GS_PNT.PAY_GB_CD = '${@framework.common.constants.CommonConstants@PAY_GB_10}'
									AND GS_PNT.ORD_CLM_GB_CD = '${@framework.common.constants.CommonConstants@ORD_CLM_GB_10}'
									AND GS_PNT.PAY_STAT_CD = '${@framework.common.constants.CommonConstants@PAY_STAT_01}'
									AND GS_PNT.CNC_YN = '${@framework.common.constants.CommonConstants@COMM_YN_N}'
									AND GS_PNT.PAY_MEANS_CD = '${@framework.common.constants.CommonConstants@PAY_MEANS_80}'
								)
						LEFT OUTER JOIN PAY_BASE MP_PNT ON (
									CB.ORD_NO = MP_PNT.ORD_NO
									AND MP_PNT.PAY_GB_CD = '${@framework.common.constants.CommonConstants@PAY_GB_10}'
									AND MP_PNT.ORD_CLM_GB_CD = '${@framework.common.constants.CommonConstants@ORD_CLM_GB_10}'
									AND MP_PNT.PAY_STAT_CD = '${@framework.common.constants.CommonConstants@PAY_STAT_01}'
									AND MP_PNT.CNC_YN = '${@framework.common.constants.CommonConstants@COMM_YN_N}'
									AND MP_PNT.PAY_MEANS_CD = '${@framework.common.constants.CommonConstants@PAY_MEANS_81}'
								)
        				
			WHERE 	1=1
			  <include refid="pageClaimWhere" />
			  ORDER BY CB.ACPT_DTM DESC
	</select>
	<select id="getClaimExcelListCount" resultType="java.lang.Integer">
		<!--
			Query Name : claim.getClaimExcelList
			Description : 클레임 목록 페이징 카운트 조회
		-->
			SELECT 	/* QUERYID(claim.getClaimExcelList) */
			 			COUNT(*)
			FROM  	CLAIM_BASE CB
						INNER JOIN ST_STD_INFO ST ON ( ST.ST_ID = CB.ST_ID )
						INNER JOIN  CLAIM_DETAIL CD ON (CB.CLM_NO = CD.CLM_NO )
						JOIN COMPANY_BASE CP ON (CD.COMP_NO = CP.COMP_NO)
						JOIN ORDER_BASE OB ON (OB.ORD_NO = CB.ORD_NO)
			WHERE 1=1
			<include refid="pageClaimWhere" />
	</select>
	
	<select id="pageClaimIntegrateList" resultType="biz.app.claim.model.ClaimListVO">
		<!-- 
			Query Name : claim.pageClaimIntegrateList
			Description : 클레임 통합 조회 페이징
		-->
		SELECT Z.* FROM (
			SELECT 	/* QUERYID(claim.pageClaimIntegrateList) */
				 CB.CLM_NO																/* 클레임 번호 */
				, CB.ST_ID																/* 사이트 ID */
				, ST.ST_NM																/* 사이트 명 */
				, CB.ORD_NO																/* 주문 번호 */
				, CB.CLM_TP_CD															/* 클레임 유형 코드 */
				, CB.CLM_STAT_CD														/* 클레임 상태 코드 */
				, CB.ACPT_DTM															/* 접수 일시 */
				, CB.CNC_DTM															/* 취소 일시 */
				, CB.CPLT_DTM															/* 완료 일시 */
				, CD.CLM_DTL_SEQ		AS ORIGIN_CLM_DTL_SEQ							/* 클레임 상세 순번 */
				, CD.CLM_DTL_TP_CD														/* 클레임 상세 유형 코드 */
				, CD.CLM_RSN_CD															/* 클레임 사유 코드 */
				, CD.GOODS_ID															/* 상품 아이디 */
				, IF(OD.PAK_GOODS_ID IS NOT NULL, GB.GOODS_NM, CD.GOODS_NM) AS GOODS_NM	/* 상품 명 */
				, CD.ITEM_NO															/* 단품 번호 */
				, CD.ITEM_NM															/* 단품 명 */
				, CD.CLM_CPLT_DTM														/* 클레임 완료 일시 */
				, CD.ORD_DTL_SEQ
				, (SELECT COUNT(DISTINCT ORD_NO, ORD_DTL_SEQ) FROM CLAIM_DETAIL WHERE CLM_NO = CD.CLM_NO) AS CLM_DTL_CNT
				, MIN(CD.CLM_DTL_SEQ) OVER(PARTITION BY CD.CLM_NO, CD.ORD_NO, CD.ORD_DTL_SEQ, CD.CLM_DTL_TP_CD ) AS CLM_DTL_SEQ
				, MIN(CD.CLM_DTL_STAT_CD) OVER(PARTITION BY CD.CLM_NO, CD.ORD_NO, CD.ORD_DTL_SEQ, CD.CLM_DTL_TP_CD ) AS CLM_DTL_STAT_CD
				, SUM(CD.CLM_QTY) OVER(PARTITION BY CD.CLM_NO, CD.ORD_NO, CD.ORD_DTL_SEQ, CD.CLM_DTL_TP_CD ) AS CLM_QTY
				, IF(CD.CLM_QTY = SUM(CD.CLM_QTY) OVER(PARTITION BY CD.CLM_NO, CD.ORD_NO, CD.ORD_DTL_SEQ, CD.CLM_DTL_TP_CD ), 'N','Y') AS CLM_CHAIN_YN
				, CD.ORG_CLM_NO 
				, CD.ORG_CLM_DTL_SEQ
				, OB.DLVR_PRCS_TP_CD
				, CP.COMP_TP_CD
				, CP.COMP_GB_CD
				, PB.PAY_GB_CD
				, PB.PAY_STAT_CD
				, PB.PAY_MEANS_CD
				, CASE WHEN PB.PAY_MEANS_CD = '30' AND PB.PAY_GB_CD IN('20', '30', '40') AND PB.PAY_STAT_CD = '00' THEN CONCAT(CB.CLM_NO, '(환불대기)')
					WHEN PB.PAY_MEANS_CD != '30' AND PB.PAY_GB_CD IN('20', '30', '40') AND PB.PAY_STAT_CD = '00' THEN CONCAT(CB.CLM_NO, '(환불대기)')
					WHEN PB.PAY_MEANS_CD != '30' AND PB.PAY_GB_CD IN('20', '30', '40') AND PB.PAY_STAT_CD = '01' THEN CONCAT(CB.CLM_NO, '(환불완료)')
					ELSE CONCAT(CB.CLM_NO, '(환불완료)')
					END AS CLAIM_GROUP_NM 
			FROM CLAIM_BASE CB
			INNER JOIN ST_STD_INFO ST ON ( ST.ST_ID = CB.ST_ID )
			INNER JOIN  CLAIM_DETAIL CD ON (CB.CLM_NO = CD.CLM_NO )
			INNER JOIN ORDER_DETAIL OD ON (OD.ORD_NO = CD.ORD_NO AND OD.ORD_DTL_SEQ = CD.ORD_DTL_SEQ)
			INNER JOIN GOODS_BASE GB ON (GB.GOODS_ID = OD.GOODS_ID)
			JOIN COMPANY_BASE CP ON (CD.COMP_NO = CP.COMP_NO)
			JOIN ORDER_BASE OB ON (OB.ORD_NO = CB.ORD_NO)
			LEFT JOIN (SELECT
						CLM_NO
						, PAY_MEANS_CD
						, PAY_GB_CD
						, PAY_STAT_CD
					FROM PAY_BASE PB
					WHERE CLM_NO IS NOT NULL
					GROUP BY CLM_NO ) PB ON CD.CLM_NO = PB.CLM_NO 
			WHERE 1 = 1
			<if test="clmTpCd != null and clmTpCd != ''">
				/* 검색조건 클레임 유형 코드 */
				AND CB.CLM_TP_CD = #{clmTpCd}
			</if>
			<if test="clmAcptDtmStart != null">
				/* 검색조건 클레임 접수일자 시작일 */
				AND CB.ACPT_DTM <![CDATA[>=]]> #{clmAcptDtmStart}
			</if>
			<if test="clmAcptDtmEnd != null">
				/* 검색조건 클레임 접수일자 종료일 */
				AND CB.ACPT_DTM <![CDATA[<=]]> DATE_ADD(#{clmAcptDtmEnd},INTERVAL 1 DAY)
			</if>
			<if test='ordNo != null and ordNo != ""'>
				/* 검색조건 주문번호 */
				AND OB.ORD_NO = #{ordNo}
			</if>
			<if test="ordNm != null and ordNm != ''">
				AND CB.ORD_NO IN ( SELECT ORD_NO FROM ORDER_BASE WHERE ORD_NM IN (#{ordNm, jdbcType=VARCHAR, typeHandler=biz.common.typehandler.CryptoTypeHandler}, #{ordNm}) )
			</if>
			<if test="goodsNm != null and goodsNm != ''">
				AND CD.GOODS_NM LIKE CONCAT( '%', #{goodsNm}, '%' )
			</if>
			<if test='stId != null'>
				AND CB.ST_ID = #{stId}
			</if>
			<if test='searchValueGoods != null and searchValueGoods != ""'>
				<choose>
					<when test='searchKeyGoods == "type01"'>
						/* 검색조선 상품명 */
						AND CD.GOODS_NM LIKE CONCAT( '%', #{searchValueGoods}, '%' )
					</when>
					<when test='searchKeyGoods == "type02"'>
						/* 검색 조건 상품아이디 */
						AND CD.GOODS_ID = #{searchValueGoods}
					</when>
				</choose>
			</if>
			<if test="searchValueOrder != null and searchValueOrder != ''">
				<choose>
					<when test="searchKeyOrder == 'type02'">
						/* 검색조건 주문자명 */
						AND OB.ORD_NM IN (#{searchValueOrder, jdbcType=VARCHAR, typeHandler=biz.common.typehandler.CryptoTypeHandler}, #{searchValueOrder})
					</when>
					<when test="searchKeyOrder == 'type03'">
						/* 검색조건 주문자ID */
						AND OB.ORDR_ID IN (#{searchValueOrder, jdbcType=VARCHAR, typeHandler=biz.common.typehandler.CryptoTypeHandler}, #{searchValueOrder})
					</when>
				</choose>
			</if>
			<if test="arrPayStatCd != null and arrPayStatCd.length > 0">
				<choose>
					<when test="arrPayStatCd.length == 1">
						<foreach collection="arrPayStatCd" item="payStatCd" separator="" open="" close="" >
							<if test="payStatCd == 00">
								/* 검색조건 환불상태 대기 */
								AND PB.PAY_STAT_CD = '${@framework.common.constants.CommonConstants@PAY_STAT_00}'
							</if>
							<if test="payStatCd == 01">
								/* 검색조건 환불상태 완료 */
								AND (PB.PAY_STAT_CD IS NULL OR PB.PAY_STAT_CD = '${@framework.common.constants.CommonConstants@PAY_STAT_01}') 
							</if>
						</foreach>
					</when>
<!-- 					<when test="arrPayStatCd.length == 2">
						<foreach collection="arrPayStatCd" item="payStatCd" separator="," open="AND PB.PAY_GB_CD IN('20','30','40') AND PB.PAY_STAT_CD IN(" close=")" >
							#{payStatCd}
						</foreach>
					</when> -->
				</choose>
			</if>
			<if test="lowCompNo != null and lowCompNo != ''">
				AND CD.COMP_NO = #{lowCompNo} AND CP.UP_COMP_NO = #{compNo}
			</if>
			<if test="lowCompNo == null or lowCompNo == ''">
				<if test="compNo != null and compNo != ''">
					/* 검색조건 업체명 */
					AND CD.COMP_NO = #{compNo}
				</if>
			</if>
			<if test="clmNo != null and clmNo != ''">
				/* 검색조건 클레임 번호 */
				AND CB.CLM_NO = #{clmNo}
			</if>
			<if test="clmDtlTpCd != null and clmDtlTpCd != ''">
				/* 검색 조건 클레임 상세 유형 코드 */
				AND CD.CLM_DTL_TP_CD = #{clmDtlTpCd}
			</if>
			<if test='clmDtlStatCd != null and clmDtlStatCd != ""'>
				/* 검색 조건 클레임 상세 상태 코드 */
				AND CD.CLM_DTL_STAT_CD = #{clmDtlStatCd}
			</if>
			<if test="arrCompTpCd != null and arrCompTpCd.length > 0">
				/* 검색 조건 업체유형 */
				<foreach collection="arrCompTpCd" item="compTpCd" separator="," open="AND	CP.COMP_TP_CD IN (" close=" ) " >
					#{compTpCd}
				</foreach>
			</if>
			<if test="arrDlvrPrcsTpCd != null and arrDlvrPrcsTpCd.length > 0">
				/* 검색조건 배송 처리 유형 */
				<foreach collection="arrDlvrPrcsTpCd" item="dlvrPrcsTpCd" separator="," open="AND (CASE WHEN CP.COMP_TP_CD = '20' THEN '10' ELSE OB.DLVR_PRCS_TP_CD END) IN (" close=" ) " >
				<!-- <foreach collection="arrDlvrPrcsTpCd" item="dlvrPrcsTpCd" separator="," open="AND OB.DLVR_PRCS_TP_CD IN (" close=" ) " > -->
					#{dlvrPrcsTpCd}
				</foreach>
			</if>
			ORDER BY CB.ACPT_DTM DESC
		) Z WHERE Z.ORIGIN_CLM_DTL_SEQ = CLM_DTL_SEQ  
		<include refid="bizCommon.pageSql" />
	</select>
	
	<select id="pageClaimIntegrateListCount" resultType="java.lang.Integer">
		<!-- 
			Query Name : claim.pageClaimIntegrateListCount
			Description : 클레임 통합 조회 페이징 카운트
		-->
		SELECT COUNT(Z.CLM_NO) FROM (
			SELECT /* QUERYID(claim.pageClaimIntegrateListCount) */
				CB.CLM_NO												/* 클레임 번호 */
				, CD.CLM_DTL_SEQ	AS ORIGIN_CLM_DTL_SEQ				/* 클레임 상세 순번 */
				, MIN(CD.CLM_DTL_SEQ) OVER(PARTITION BY CD.CLM_NO, CD.ORD_NO, CD.ORD_DTL_SEQ, CD.CLM_DTL_TP_CD ) AS CLM_DTL_SEQ
			FROM CLAIM_BASE CB
			INNER JOIN ST_STD_INFO ST ON ( ST.ST_ID = CB.ST_ID )
			INNER JOIN  CLAIM_DETAIL CD ON (CB.CLM_NO = CD.CLM_NO )
			INNER JOIN ORDER_DETAIL OD ON (OD.ORD_NO = CD.ORD_NO AND OD.ORD_DTL_SEQ = CD.ORD_DTL_SEQ)
			INNER JOIN GOODS_BASE GB ON (GB.GOODS_ID = OD.GOODS_ID)
			JOIN COMPANY_BASE CP ON (CD.COMP_NO = CP.COMP_NO)
			JOIN ORDER_BASE OB ON (OB.ORD_NO = CB.ORD_NO)
			LEFT JOIN (SELECT
						CLM_NO
						, PAY_MEANS_CD
						, PAY_GB_CD
						, PAY_STAT_CD
					FROM PAY_BASE PB
					WHERE CLM_NO IS NOT NULL
					GROUP BY CLM_NO ) PB ON CD.CLM_NO = PB.CLM_NO
			WHERE 1=1
			<if test="clmTpCd != null and clmTpCd != ''">
				/* 검색조건 클레임 유형 코드 */
				AND CB.CLM_TP_CD = #{clmTpCd}
			</if>
			<if test="clmAcptDtmStart != null">
				/* 검색조건 클레임 접수일자 시작일 */
				AND CB.ACPT_DTM <![CDATA[>=]]> #{clmAcptDtmStart}
			</if>
			<if test="clmAcptDtmEnd != null">
				/* 검색조건 클레임 접수일자 종료일 */
				AND CB.ACPT_DTM <![CDATA[<=]]> DATE_ADD(#{clmAcptDtmEnd},INTERVAL 1 DAY)
			</if>
			<if test='ordNo != null and ordNo != ""'>
				/* 검색조건 주문번호 */
				AND OB.ORD_NO = #{ordNo}
			</if>
			<if test="ordNm != null and ordNm != ''">
				AND CB.ORD_NO IN ( SELECT ORD_NO FROM ORDER_BASE WHERE ORD_NM IN (#{ordNm, jdbcType=VARCHAR, typeHandler=biz.common.typehandler.CryptoTypeHandler}, #{ordNm}) )
			</if>
			<if test="goodsNm != null and goodsNm != ''">
				AND CD.GOODS_NM LIKE CONCAT( '%', #{goodsNm}, '%' )
			</if>
			<if test='stId != null'>
				AND CB.ST_ID = #{stId}
			</if>
			<if test='searchValueGoods != null and searchValueGoods != ""'>
				<choose>
					<when test='searchKeyGoods == "type01"'>
						/* 검색조선 상품명 */
						AND CD.GOODS_NM LIKE CONCAT( '%', #{searchValueGoods}, '%' )
					</when>
					<when test='searchKeyGoods == "type02"'>
						/* 검색 조건 상품아이디 */
						AND CD.GOODS_ID = #{searchValueGoods}
					</when>
				</choose>
			</if>
			<if test="searchValueOrder != null and searchValueOrder != ''">
				<choose>
					<when test="searchKeyOrder == 'type02'">
						/* 검색조건 주문자명 */
						AND OB.ORD_NM IN (#{searchValueOrder, jdbcType=VARCHAR, typeHandler=biz.common.typehandler.CryptoTypeHandler}, #{searchValueOrder})
					</when>
					<when test="searchKeyOrder == 'type03'">
						/* 검색조건 주문자ID */
						AND OB.ORDR_ID IN (#{searchValueOrder, jdbcType=VARCHAR, typeHandler=biz.common.typehandler.CryptoTypeHandler}, #{searchValueOrder})
					</when>
				</choose>
			</if>
			<if test="arrPayStatCd != null and arrPayStatCd.length > 0">
				<choose>
					<when test="arrPayStatCd.length == 1">
						<foreach collection="arrPayStatCd" item="payStatCd" separator="" open="" close="" >
							<if test="payStatCd == 00">
								/* 검색조건 환불상태 대기 */
								AND PB.PAY_STAT_CD = '${@framework.common.constants.CommonConstants@PAY_STAT_00}'
							</if>
							<if test="payStatCd == 01">
								/* 검색조건 환불상태 완료 */
								AND (PB.PAY_STAT_CD IS NULL OR PB.PAY_STAT_CD = '${@framework.common.constants.CommonConstants@PAY_STAT_01}') 
							</if>
						</foreach>
					</when>
<!-- 					<when test="arrPayStatCd.length == 2">
						<foreach collection="arrPayStatCd" item="payStatCd" separator="," open="AND PB.PAY_GB_CD IN('20','30','40') AND PB.PAY_STAT_CD IN(" close=")" >
							#{payStatCd}
						</foreach>
					</when> -->
				</choose>
			</if>
			<if test="lowCompNo != null and lowCompNo != ''">
				AND CD.COMP_NO = #{lowCompNo} AND CP.UP_COMP_NO = #{compNo}
			</if>
			<if test="lowCompNo == null or lowCompNo == ''">
				<if test="compNo != null and compNo != ''">
					/* 검색조건 업체명 */
					AND CD.COMP_NO = #{compNo}
				</if>
			</if>
			<if test="clmNo != null and clmNo != ''">
				/* 검색조건 클레임 번호 */
				AND CB.CLM_NO = #{clmNo}
			</if>
			<if test="clmDtlTpCd != null and clmDtlTpCd != ''">
				/* 검색 조건 클레임 상세 유형 코드 */
				AND CD.CLM_DTL_TP_CD = #{clmDtlTpCd}
			</if>
			<if test='clmDtlStatCd != null and clmDtlStatCd != ""'>
				/* 검색 조건 클레임 상세 상태 코드 */
				AND CD.CLM_DTL_STAT_CD = #{clmDtlStatCd}
			</if>
			<if test="arrCompTpCd != null and arrCompTpCd.length > 0">
				/* 검색 조건 업체유형 */
				<foreach collection="arrCompTpCd" item="compTpCd" separator="," open="AND	CP.COMP_TP_CD IN (" close=" ) " >
					#{compTpCd}
				</foreach>
			</if>
			<if test="arrDlvrPrcsTpCd != null and arrDlvrPrcsTpCd.length > 0">
				/* 검색조건 배송 처리 유형 */
				<foreach collection="arrDlvrPrcsTpCd" item="dlvrPrcsTpCd" separator="," open="AND (CASE WHEN CP.COMP_TP_CD = '20' THEN '10' ELSE OB.DLVR_PRCS_TP_CD END) IN (" close=" ) " >
				<!-- <foreach collection="arrDlvrPrcsTpCd" item="dlvrPrcsTpCd" separator="," open="AND OB.DLVR_PRCS_TP_CD IN (" close=" ) " > -->
					#{dlvrPrcsTpCd}
				</foreach>
			</if>
			ORDER BY CB.ACPT_DTM DESC
		) Z WHERE Z.ORIGIN_CLM_DTL_SEQ = CLM_DTL_SEQ
	</select>
	
	<select id="getClaimIntegrateExcelList" resultType="biz.app.claim.model.ClaimListVO">
	
		<!--
			Query Name : claim.getClaimIntegrateExcelList
			Description : 클레임 통합 조회 엑셀 조회
		-->
		SELECT /* QUERYID(claim.getClaimIntegrateExcelList) */
			CB.CLM_NO											/* 클레임 번호 */
			, CB.ST_ID											/* 사이트 ID */
			, ST.ST_NM											/* 사이트 명 */
			, CB.ORD_NO											/* 주문 번호 */
			, CB.CLM_TP_CD										/* 클레임 유형 코드 */
			, CB.CLM_STAT_CD									/* 클레임 상태 코드 */
			, CB.ACPT_DTM AS CLM_ACPT_DTM						/* 클레임 접수 일시 */
			, CB.CNC_DTM AS CLM_CNC_DTM							/* 클레임 취소 일시 */
			, CB.CPLT_DTM	 AS CLM_CPLT_DTM					/* 클레임 완료 일시 */
			, CD.CLM_DTL_SEQ									/* 클레임 상세 순번 */
			, CD.CLM_DTL_TP_CD									/* 클레임 상세 유형 코드 */
			, CD.CLM_DTL_STAT_CD								/* 클레임 상세 상태 코드 */
			, CONCAT((SELECT DTL_NM FROM CODE_DETAIL WHERE GRP_CD = 'CLM_RSN' AND DTL_CD =  CD.CLM_RSN_CD AND SYS_DEL_YN = 'N'), '( 귀책 : ' , CASE WHEN (SELECT USR_DFN2_VAL FROM CODE_DETAIL WHERE GRP_CD = 'CLM_RSN' AND DTL_CD = CD.CLM_RSN_CD)='20' THEN '업체' ELSE '고객' END , ')' ) AS CLM_RSN_NM
			, CD.CLM_RSN_CONTENT								/* 클레임 사유 내용 */
			, CD.GOODS_ID										/* 상품 아이디 */
			, CD.GOODS_NM										/* 상품 명 */
			, IF(OD.PAK_GOODS_ID IS NOT NULL, GB.GOODS_NM, CD.GOODS_NM) AS GOODS_NM		/* 상품 명 */
			, CD.ITEM_NO																/* 단품 번호 */
			, CD.ITEM_NM																/* 단품 명 */
			, CD.CLM_QTY																/* 클레임 수량 */
			, CD.CLM_CPLT_DTM															/* 클레임 완료 일시 */
			, CD.ORD_DTL_SEQ
			, OB.ORD_ACPT_DTM AS ACPT_DTM												/* 주문 접수 일시 */
			, OB.ORD_CPLT_DTM AS CPLT_DTM												/* 결제 완료 일시 */
			, CB.MBR_NO																	/* 회원 번호 */
			, OB.ORD_NM																	/* 주문자 이름 */
			, OB.ORDR_ID																/* 주문자 ID */
			, CONCAT(FN_GET_COMPANY_NAME(CD.COMP_NO) , '(', FN_GET_CODE_NAME('COMP_TP',  (SELECT COMP_TP_CD FROM COMPANY_BASE CP WHERE CP.COMP_NO= CD.COMP_NO), ''), ')')  AS COMP_TP_NM
			, FN_GET_COMPANY_NAME(IFNULL(S.PHS_COMP_NO, CD.COMP_NO)) AS PHS_COMP_NM		/* 매입 업체 이름 */ 
			, FN_GET_CODE_NAME('GOODS_CSTRT_TP',  GB.GOODS_CSTRT_TP_CD, '') AS GOODS_CSTRT_TP_NM	/* 상품 구성 유형 - ITEM:단품 ATTR:옵션 SET:세트 PAK:묶음 */
			, OD.ORD_QTY																/* 주문 수량 */
			, (SELECT 
					group_concat( G.GOODS_ID SEPARATOR ',')
				FROM GOODS_BASE G
				WHERE G.GOODS_ID IN (SELECT ODC.CSTRT_GOODS_ID 
										FROM ORD_DTL_CSTRT ODC
										WHERE ODC.ORD_NO  = CB.ORD_NO 
										AND ODC.ORD_DTL_SEQ = CD.ORD_DTL_SEQ
										AND ODC.CSTRT_GOODS_GB_CD = '30')
			) AS SUB_GOODS_NM															/* 사은품 명 */
			, PB2.PAY_MEANS_CD															/* 결제 수단 */
			, PB2.PAY_AMT																/* 결제 금액 */
			, PB.REFUND_RFD_AMT_CASH													/* 현금 환불 금액 */
			, PB.REFUND_RFD_AMT_CARD													/* 카드 환불 금액 */
			, PB.REFUND_RFD_AMT_PAY														/* 간편결제 환불 금액 */
			, PB.OOA_NM AS REFUND_OOA_NM												/* 환불 계좌 예금주명 */
			, PB.BANK_CD AS REFUND_BANK_CD												/* 환불 계좌 은행명 */
			, PB.ACCT_NO AS REFUND_ACCT_NO												/* 환불 계좌 */
			, CONCAT(IFNULL(FN_GET_CODE_NAME('PAY_MEANS', PB3.PAY_MEANS_CD,'Y'), '가상계좌'), ' ',IFNULL(FN_GET_CODE_NAME('PAY_MEANS', GS_PNT.PAY_MEANS_CD,'Y'),''), ' ', IFNULL(FN_GET_CODE_NAME('PAY_MEANS', MP_PNT.PAY_MEANS_CD,'Y'),'')) AS PAY_MEANS_NM
			, PB.PAY_GB_CD
			, PB.PAY_STAT_CD
			, PB.PAY_MEANS_CD
		FROM CLAIM_BASE CB
		INNER JOIN ST_STD_INFO ST ON ( ST.ST_ID = CB.ST_ID )
		INNER JOIN CLAIM_DETAIL CD ON (CB.CLM_NO = CD.CLM_NO )
		JOIN COMPANY_BASE CP ON (CD.COMP_NO = CP.COMP_NO)
		JOIN ORDER_BASE OB ON (OB.ORD_NO = CB.ORD_NO)
		INNER JOIN ORDER_DETAIL OD ON (OB.ORD_NO = OD.ORD_NO AND OD.ORD_NO = CD.ORD_NO AND OD.ORD_DTL_SEQ = CD.ORD_DTL_SEQ)
		INNER JOIN GOODS_BASE GB ON GB.GOODS_ID = CD.GOODS_ID
		LEFT OUTER JOIN ITEM I ON (CD.GOODS_ID = I.GOODS_ID)
		LEFT OUTER JOIN SKU_BASE S ON (I.SKU_CD = S.SKU_CD)
		LEFT JOIN (SELECT IFNULL(SUM(CASE WHEN PB.PAY_MEANS_CD IN ('20','30','40') THEN PB.PAY_AMT ELSE 0 END),0) AS REFUND_RFD_AMT_CASH
						, IFNULL(SUM(CASE WHEN PB.PAY_MEANS_CD = '10' THEN PB.PAY_AMT ELSE 0 END),0) AS REFUND_RFD_AMT_CARD
						, IFNULL(SUM(CASE WHEN PB.PAY_MEANS_CD IN ('70','71','72') THEN PB.PAY_AMT ELSE 0 END),0) AS REFUND_RFD_AMT_PAY
						, CLM_NO
						, OOA_NM
						, BANK_CD
						, ACCT_NO
						, PAY_MEANS_CD
						, PAY_GB_CD
						, PAY_STAT_CD
					FROM PAY_BASE PB
					WHERE CLM_NO IS NOT NULL
					GROUP BY CLM_NO ) PB ON CD.CLM_NO = PB.CLM_NO						/*클레임 환불 금액 용 */
		LEFT JOIN (SELECT
						IFNULL(SUM(PAY_AMT),0) AS PAY_AMT
						, ORD_NO
						, group_concat(distinct PAY_MEANS_CD separator ',') AS PAY_MEANS_CD
					FROM PAY_BASE PB2
					WHERE PB2.PAY_GB_CD = '${@framework.common.constants.CommonConstants@PAY_GB_20}'
					AND PB2.ORD_CLM_GB_CD = '${@framework.common.constants.CommonConstants@ORD_CLM_GB_20}'
					AND PB2.CNC_YN = '${@framework.common.constants.CommonConstants@COMM_YN_N}'
					GROUP BY ORD_NO ) PB2 ON CD.ORD_NO = PB2.ORD_NO			/*결제 금액 용 */
		LEFT OUTER JOIN PAY_BASE PB3 ON (
					CB.ORD_NO = PB3.ORD_NO
					AND PB3.PAY_GB_CD = '${@framework.common.constants.CommonConstants@PAY_GB_10}'
					AND PB3.ORD_CLM_GB_CD = '${@framework.common.constants.CommonConstants@ORD_CLM_GB_10}'
					AND PB3.PAY_STAT_CD = '${@framework.common.constants.CommonConstants@PAY_STAT_01}'
					AND PB3.CNC_YN = '${@framework.common.constants.CommonConstants@COMM_YN_N}'
					AND PB3.PAY_MEANS_CD != '${@framework.common.constants.CommonConstants@PAY_MEANS_80}'
					AND PB3.PAY_MEANS_CD != '${@framework.common.constants.CommonConstants@PAY_MEANS_81}'
				)
		LEFT OUTER JOIN PAY_BASE GS_PNT ON (
					CB.ORD_NO = GS_PNT.ORD_NO
					AND GS_PNT.PAY_GB_CD = '${@framework.common.constants.CommonConstants@PAY_GB_10}'
					AND GS_PNT.ORD_CLM_GB_CD = '${@framework.common.constants.CommonConstants@ORD_CLM_GB_10}'
					AND GS_PNT.PAY_STAT_CD = '${@framework.common.constants.CommonConstants@PAY_STAT_01}'
					AND GS_PNT.CNC_YN = '${@framework.common.constants.CommonConstants@COMM_YN_N}'
					AND GS_PNT.PAY_MEANS_CD = '${@framework.common.constants.CommonConstants@PAY_MEANS_80}'
				)
		LEFT OUTER JOIN PAY_BASE MP_PNT ON (
					CB.ORD_NO = MP_PNT.ORD_NO
					AND MP_PNT.PAY_GB_CD = '${@framework.common.constants.CommonConstants@PAY_GB_10}'
					AND MP_PNT.ORD_CLM_GB_CD = '${@framework.common.constants.CommonConstants@ORD_CLM_GB_10}'
					AND MP_PNT.PAY_STAT_CD = '${@framework.common.constants.CommonConstants@PAY_STAT_01}'
					AND MP_PNT.CNC_YN = '${@framework.common.constants.CommonConstants@COMM_YN_N}'
					AND MP_PNT.PAY_MEANS_CD = '${@framework.common.constants.CommonConstants@PAY_MEANS_81}'
				)
		WHERE 1=1
		<if test="clmTpCd != null and clmTpCd != ''">
			/* 검색조건 클레임 유형 코드 */
			AND CB.CLM_TP_CD = #{clmTpCd}
		</if>
		<if test="clmAcptDtmStart != null">
			/* 검색조건 클레임 접수일자 시작일 */
			AND CB.ACPT_DTM <![CDATA[>=]]> #{clmAcptDtmStart}
		</if>
		<if test="clmAcptDtmEnd != null">
			/* 검색조건 클레임 접수일자 종료일 */
			AND CB.ACPT_DTM <![CDATA[<=]]> DATE_ADD(#{clmAcptDtmEnd},INTERVAL 1 DAY)
		</if>
		<if test='ordNo != null and ordNo != ""'>
			/* 검색조건 주문번호 */
			AND OB.ORD_NO = #{ordNo}
		</if>
		<if test="ordNm != null and ordNm != ''">
			AND CB.ORD_NO IN ( SELECT ORD_NO FROM ORDER_BASE WHERE ORD_NM IN (#{ordNm, jdbcType=VARCHAR, typeHandler=biz.common.typehandler.CryptoTypeHandler}, #{ordNm}) )
		</if>
		<if test="goodsNm != null and goodsNm != ''">
			AND CD.GOODS_NM LIKE CONCAT( '%', #{goodsNm}, '%' )
		</if>
		<if test='stId != null'>
			AND CB.ST_ID = #{stId}
		</if>
		<if test='searchValueGoods != null and searchValueGoods != ""'>
			<choose>
				<when test='searchKeyGoods == "type01"'>
					/* 검색조선 상품명 */
					AND CD.GOODS_NM LIKE CONCAT( '%', #{searchValueGoods}, '%' )
				</when>
				<when test='searchKeyGoods == "type02"'>
					/* 검색 조건 상품아이디 */
					AND CD.GOODS_ID = #{searchValueGoods}
				</when>
			</choose>
		</if>
		<if test="searchValueOrder != null and searchValueOrder != ''">
			<choose>
				<when test="searchKeyOrder == 'type02'">
					/* 검색조건 주문자명 */
					AND OB.ORD_NM IN (#{searchValueOrder, jdbcType=VARCHAR, typeHandler=biz.common.typehandler.CryptoTypeHandler}, #{searchValueOrder})
				</when>
				<when test="searchKeyOrder == 'type03'">
					/* 검색조건 주문자ID */
					AND OB.ORDR_ID IN (#{searchValueOrder, jdbcType=VARCHAR, typeHandler=biz.common.typehandler.CryptoTypeHandler}, #{searchValueOrder})
				</when>
			</choose>
		</if>
		<if test="arrPayStatCd != null and arrPayStatCd.length > 0">
			<choose>
				<when test="arrPayStatCd.length == 1">
					<foreach collection="arrPayStatCd" item="payStatCd" separator="" open="" close="" >
						<if test="payStatCd == 00">
							/* 검색조건 환불상태 대기 */
							AND PB.PAY_STAT_CD = '${@framework.common.constants.CommonConstants@PAY_STAT_00}'
						</if>
						<if test="payStatCd == 01">
							/* 검색조건 환불상태 완료 */
							AND (PB.PAY_STAT_CD IS NULL OR PB.PAY_STAT_CD = '${@framework.common.constants.CommonConstants@PAY_STAT_01}') 
						</if>
					</foreach>
				</when>
<!-- 				<when test="arrPayStatCd.length == 2">
					<foreach collection="arrPayStatCd" item="payStatCd" separator="," open="AND PB.PAY_GB_CD IN('20','30','40') AND PB.PAY_STAT_CD IN(" close=")" >
						#{payStatCd}
					</foreach>
				</when> -->
			</choose>
		</if>
		<if test="lowCompNo != null and lowCompNo != ''">
			AND CD.COMP_NO = #{lowCompNo} AND CP.UP_COMP_NO = #{compNo}
		</if>
		<if test="lowCompNo == null or lowCompNo == ''">
			<if test="compNo != null and compNo != ''">
				/* 검색조건 업체명 */
				AND CD.COMP_NO = #{compNo}
			</if>
		</if>
		<if test="clmNo != null and clmNo != ''">
			/* 검색조건 클레임 번호 */
			AND CB.CLM_NO = #{clmNo}
		</if>
		<if test="clmDtlTpCd != null and clmDtlTpCd != ''">
			/* 검색 조건 클레임 상세 유형 코드 */
			AND CD.CLM_DTL_TP_CD = #{clmDtlTpCd}
		</if>
		<if test='clmDtlStatCd != null and clmDtlStatCd != ""'>
			/* 검색 조건 클레임 상세 상태 코드 */
			AND CD.CLM_DTL_STAT_CD = #{clmDtlStatCd}
		</if>
		<if test="arrCompTpCd != null and arrCompTpCd.length > 0">
			/* 검색 조건 업체유형 */
			<foreach collection="arrCompTpCd" item="compTpCd" separator="," open="AND	CP.COMP_TP_CD IN (" close=" ) " >
				#{compTpCd}
			</foreach>
		</if>
		<if test="arrDlvrPrcsTpCd != null and arrDlvrPrcsTpCd.length > 0">
			/* 검색조건 배송 처리 유형 */
			<foreach collection="arrDlvrPrcsTpCd" item="dlvrPrcsTpCd" separator="," open="AND (CASE WHEN CP.COMP_TP_CD = '20' THEN '10' ELSE OB.DLVR_PRCS_TP_CD END) IN (" close=" ) " >
			<!-- <foreach collection="arrDlvrPrcsTpCd" item="dlvrPrcsTpCd" separator="," open="AND OB.DLVR_PRCS_TP_CD IN (" close=" ) " > -->
				#{dlvrPrcsTpCd}
			</foreach>
		</if>
		ORDER BY CB.ACPT_DTM DESC
	</select>
	
	
	<select id="getClaimIntegrateExcelListCount" resultType="java.lang.Integer">
		<!--
			Query Name : claim.getClaimIntegrateExcelListCount
			Description : 클레임 통합 조회 페이징 카운트 조회
		-->
			SELECT /* QUERYID(claim.getClaimIntegrateExcelListCount) */
				COUNT(*)
			FROM CLAIM_BASE CB
			INNER JOIN ST_STD_INFO ST ON (ST.ST_ID = CB.ST_ID)
			INNER JOIN CLAIM_DETAIL CD ON (CB.CLM_NO = CD.CLM_NO)
			JOIN COMPANY_BASE CP ON (CD.COMP_NO = CP.COMP_NO)
			JOIN ORDER_BASE OB ON (OB.ORD_NO = CB.ORD_NO)
			WHERE 1=1
			<include refid="pageClaimWhere" />
	</select>
	
</mapper>
