<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="claimDetail">

	<insert id="insertClaimDetail">
		<!--
			Query Name : claimDetail.insertClaimDetail
			Description : 클레임 상세 등록
		-->
		INSERT INTO CLAIM_DETAIL (
			CLM_NO						/* 클레임 번호 */
			, CLM_DTL_SEQ				/* 클레임 상세 순번 */
			, CLM_DTL_TP_CD			/* 클레임 유형 코드 */
			, CLM_DTL_STAT_CD		/* 클레임 상태 코드 */
			, CLM_RSN_CD				/* 클레임 사유 코드 */
			, CLM_RSN_CONTENT		/* 클레임 사유 내용 */
			, MBR_NO					/* 회원 번호 */
			, ORD_NO					/* 주문 번호 */
			, ORD_DTL_SEQ				/* 주문 상세 순번 */
			, GOODS_ID					/* 상품 아이디 */
			, GOODS_NM				/* 상품 명 */
			, ITEM_NO					/* 단품 번호 */
			, ITEM_NM					/* 단품 명 */
			, DEAL_GOODS_ID			/* 딜 상품 아이디 */
			, DISP_CLSF_NO				/* 전시 분류 번호 */
			, COMP_GOODS_ID			/* 업체 상품 아이디 */
			, COMP_ITEM_ID			/* 업체 단품 아이디 */
			, GOODS_PRC_NO			/* 상품 가격 번호 */
			, SALE_AMT					/* 판매 금액 */
			, PAY_AMT					/* 결제 금액 */
			, RMN_PAY_AMT			/* 잔여 결제 금액 */
			, CLM_QTY					/* 클레임 수량 */
			, CMS							/* 수수료 */
			, GOODS_CMSN_RT			/* 수수료율 */
			, TAX_GB_CD					/* 과세 구분 코드 */
			, DLVRC_NO					/* 배송비 번호 */
			, RTN_DLVRC_NO			/* 회수비 번호 */
			, DLVRA_NO					/* 배송지 번호 */
			, RTRNA_NO					/* 회수지 번호 */
			, COMP_NO					/* 업체 번호 */
			, UP_COMP_NO				/* 상위 업체 번호 */
			, RTN_MTD_CD				/* 회수 방법 코드 */
			, OUTSIDE_CLM_DTL_NO 	/* 외부 클레임 상세 번호 */
			, RMN_CLM_QTY				/* 잔여 클레임 수량 */
			, ORG_CLM_NO				/* 원 클레임 번호 */
			, ORG_CLM_DTL_SEQ			/* 원 클레임 상세 순번 */
			, SYS_REGR_NO				/* 시스템 등록자 번호 */
			, SYS_REG_DTM				/* 시스템 등록 일시 */
			, SYS_UPDR_NO				/* 시스템 수정자 번호 */
			, SYS_UPD_DTM				/* 시스템 수정 일시 */
		) SELECT
			#{clmNo}						/* 클레임 번호 */
			, #{clmDtlSeq}				/* 클레임 상세 순번 */
			, #{clmDtlTpCd}				/* 클레임 유형 코드 */
			, #{clmDtlStatCd}				/* 클레임 상태 코드 */
			, #{clmRsnCd}				/* 클레임 사유 코드 */
			, #{clmRsnContent}			/* 클레임 사유 내용 */
			, #{mbrNo}					/* 회원 번호 */
			, #{ordNo}					/* 주문 번호 */
			, #{ordDtlSeq}				/* 주문 상세 순번 */
			, #{goodsId}					/* 상품아이디 */
			, #{goodsNm}				/* 상품 명 */
			, #{itemNo}					/* 단품 번호 */
			, (SELECT ITEM_NM FROM ITEM WHERE ITEM_NO = #{itemNo})				/* 단품 명 */
			, #{dealGoodsId}			/* 딜 상품 아이디 */
			, #{dispClsfNo}				/* 전시 분류 번호 */
			, #{compGoodsId}			/* 업체 상품 아이디 */
			, #{compItemId}				/* 업체 단품 아이디 */
			, #{goodsPrcNo}				/* 상품 가격 번호 */
			, #{saleAmt}					/* 판매 금액 */
			, #{payAmt}					/* 결제 금액 */
			, #{rmnPayAmt}				/* 잔여 결제 금액 */
			, #{clmQty}					/* 클레임 수량 */
			, #{cms}						/* 수수료 */
			, #{goodsCmsnRt}			/* 수수료율 */
			, #{taxGbCd}					/* 과세 구분 코드 */
			, #{dlvrcNo}					/* 배송비 번호 */
			, #{rtnDlvrcNo}				/* 회수비 번호 */
			, #{dlvraNo}					/* 배송지 번호 */
			, #{rtrnaNo}					/* 회수지 번호 */
			, #{compNo}					/* 업체 번호 */
			, #{upCompNo}				/* 상위 업체 번호 */
			, #{rtnMtdCd}				/* 회수 방법 코드 */
			, #{outsideClmDtlNo}	 	/* 외부 클레임 상세 번호 */
			, #{rmnClmQty}				/* 잔여 클레임 수량 */
			, #{orgClmNo}				/* 원 클레임 번호 */
			, #{orgClmDtlSeq}			/* 원 클레임 상세 순번 */
			, #{sysRegrNo}				/* 시스템 등록자 번호 */
			, NOW()						/* 시스템 등록 일시 */
			, #{sysUpdrNo}				/* 시스템 수정자 번호 */
			, NOW()						/* 시스템 수정 일시 */
	</insert>
	
	<insert id="insertImgClaimDetail">
		<!--
			Query Name : claimDetail.insertImgClaimDetail
			Description : 클레임 상세 사진 등록
		-->
		INSERT INTO CLAIM_DTL_RSN_IMG (
			CLM_NO						/* 클레임 번호 */
			, CLM_DTL_SEQ				/* 클레임 상세 순번 */
			, CLM_DTL_RSN_SEQ			/* 클레임 상세 사진 순번 */
			, RSN_IMG_PATH				/* 사유 이미지 PATH */
			, DEL_YN					/* 삭제 여부 */
			, SYS_REGR_NO				/* 시스템 등록자 번호 */
			, SYS_REG_DTM				/* 시스템 등록 일시 */		
		) SELECT
			#{clmNo}					/* 클레임 번호 */
			, #{clmDtlSeq}				/* 클레임 상세 순번 */
			, #{clmDtlRsnSeq}			/* 클레임 상세 사진 순번 */
			, #{imgPath}				/* 클레임 상태 코드 */
			, #{delYn}					/* 삭제여부 */		
			, #{sysRegrNo}				/* 시스템 등록자 번호 */
			, NOW()						/* 시스템 등록 일시 */
			
	</insert>
	
	<insert id="saveImgClaimDetailFromClmNo">
		<!--
			Query Name : claimDetail.saveImgClaimDetailFromClmNo
			Description : 클레임 번호로 클레임 상세 사진 저장
		-->
		/* QUERYID(claimDetail.saveImgClaimDetailFromClmNo) */
		INSERT INTO CLAIM_DTL_RSN_IMG (
		       CLM_NO						/* 클레임 번호 */
		     , CLM_DTL_SEQ				/* 클레임 상세 순번 */
		     , CLM_DTL_RSN_SEQ			/* 클레임 상세 사진 순번 */
		     , RSN_IMG_PATH				/* 사유 이미지 PATH */
		     , DEL_YN					/* 삭제 여부 */
		     , SYS_REGR_NO				/* 시스템 등록자 번호 */
		     , SYS_REG_DTM				/* 시스템 등록 일시 */		
		       )
		SELECT CLM_NO
		     , CLM_DTL_SEQ
		     , #{clmDtlRsnSeq}
		     , #{imgPath}
		     , 'N'
		     , #{sysRegrNo}
		     , NOW()
		  FROM CLAIM_DETAIL 
		 WHERE CLM_NO = #{clmNo}
		   AND CLM_DTL_TP_CD IN ('20', '30')
		    ON DUPLICATE KEY UPDATE
		       RSN_IMG_PATH = #{imgPath}
		     , DEL_YN = 'N'
		     , SYS_REGR_NO = 0
	</insert>

	<select id="listClaimDetail" resultType="biz.app.claim.model.ClaimDetailVO" >
		<!--
			Query Name : claimDetail.listClaimDetail
			Description : 클레임 상세 목록 조회
		-->
		<if test='clmChainReprsntYn != null and clmChainReprsntYn eq "Y"'>
		SELECT Z.* FROM (
		</if>
		SELECT	/* QUERYID(claimDetail.listClaimDetail) */
                    CB.CLM_TP_CD
                    , CB.ACPT_DTM
                    , CB.CNC_DTM
                    , CB.CLM_STAT_CD
                    , CB.SWAP_YN				/* 맞교환 여부 */
					, CD.CLM_NO						/* 클레임 번호 */
					, CD.CLM_DTL_SEQ				/* 클레임 상세 순번 */
					, CD.CLM_DTL_TP_CD			/* 클레임 상세 유형 코드 */
					, CD.CLM_RSN_CD				/* 클레임 사유 코드 */
					, CD.CLM_RSN_CONTENT    /* 클레임 사유 내용 */
                    , CD.CLM_DENY_RSN_CONTENT   /* 클레임 거부사유 내용 */
					, CD.MBR_NO					/* 회원 번호 */
					, CD.ORD_NO					/* 주문 번호 */
					, CD.ORD_DTL_SEQ				/* 주문 상세 순번 */
					, CD.ORG_CLM_NO				/* 원 클레임 번호 */
					, CD.ORG_CLM_DTL_SEQ		/* 원 클레임 상세 순번 */
					, CD.GOODS_ID					/* 상품 아이디 */
					, IF(OD.PAK_GOODS_ID IS NOT NULL, (SELECT GOODS_NM FROM GOODS_BASE WHERE GOODS_ID = CD.GOODS_ID), CD.GOODS_NM) AS GOODS_NM /* 상품 명 */  
					,CASE
						WHEN CB.CLM_TP_CD = '${@framework.common.constants.CommonConstants@CLM_TP_30}'
							THEN ( SELECT CDT.ITEM_NM FROM CLAIM_DETAIL CDT WHERE CDT.CLM_NO = CD.CLM_NO ORDER BY CDT.CLM_DTL_SEQ DESC LIMIT 1)
							ELSE CD.ITEM_NM
						END AS ITEM_NM
					,CASE 
				        WHEN CB.CLM_TP_CD = '${@framework.common.constants.CommonConstants@CLM_TP_30}'
				            THEN ( SELECT CDT.ITEM_NO FROM CLAIM_DETAIL CDT WHERE CDT.CLM_NO = CD.CLM_NO ORDER BY CDT.CLM_DTL_SEQ DESC LIMIT 1)
							ELSE CD.ITEM_NO
				        END AS ITEM_NO
					, CD.DEAL_GOODS_ID			/* 딜 상품 아이디 */
					, CD.DISP_CLSF_NO				/* 전시 분류 번호 */
					, (SELECT DISP_CLSF_NM FROM DISPLAY_CATEGORY WHERE DISP_CLSF_NO = CD.DISP_CLSF_NO) AS DISP_CLSF_NM
					, CD.COMP_GOODS_ID			/* 업체 상품 아이디 */
					, CD.COMP_ITEM_ID			/* 업체 단품 아이디 */
					, CD.SALE_AMT					/* 판매 금액 */
					, IFNULL(CD.PAY_AMT,0) AS PAY_AMT	/* 결제 금액 */
					, CD.RMN_PAY_AMT			/* 잔여 결제 금액 */
					, CD.CMS							/* 수수료 */
					, CD.GOODS_CMSN_RT			/* 상품수수료율 */
					, CD.TAX_GB_CD					/* 과세 구분 코드 */
					, CD.DLVRC_NO					/* 배송비 번호 */
					, CD.RTN_DLVRC_NO			/* 회수비 번호 */
					, CD.DLVRA_NO					/* 배송지 번호 */
					, CD.RTRNA_NO					/* 회수지 번호 */
					<!-- , CD.DLVR_NO					/* 배송 번호 */ //KEK01 주석처리 2021.03.09 -->
					, FN_GET_CLM_DLVR_NO(CD.CLM_NO, CD.CLM_DTL_SEQ, 'Y') AS DLVR_NO /* 배송 번호 */ <!-- //KEK01 추가 2021.03.09 -->
					, CD.COMP_NO					/* 업체 번호 */
					, (SELECT COMP_GB_CD FROM COMPANY_BASE CB WHERE CB.COMP_NO = CD.COMP_NO )AS COMP_GB_CD					/* 업체 구분코드 */
					, (SELECT FN_GET_COMPANY_NAME(CD.COMP_NO) ) AS COMP_NM	/* 업체 명 */
					, CD.UP_COMP_NO				/* 상위 업체 번호 */
					, CD.CLM_CPLT_DTM			/* 클레임 완료 일시 */
					, CD.RTN_MTD_CD				/* 회수 방법 코드 */
					, CD.OUTSIDE_CLM_DTL_NO	/* 외부 클레임 상세 번호 */
					, CD.SYS_REGR_NO				/* 시스템 등록자 번호 */
					, CD.SYS_REG_DTM				/* 시스템 등록 일시 */
					, CD.SYS_UPDR_NO				/* 시스템 수정자 번호 */
					, CD.SYS_UPD_DTM				/* 시스템 수정 일시 */
					, FN_GET_USER_NAME(CD.SYS_REGR_NO) AS SYS_REGR_NM	/* 시스템 등록자 */
					, FN_GET_USER_NAME(CD.SYS_UPDR_NO) AS SYS_UPDR_NM	/* 시스템 수정자 */
					, OD.ORD_QTY                   /* 총 주문 수량 */
					, OD.RMN_ORD_QTY			/* 주문 잔여 수량 */
					, OD.RTN_QTY					/* 반품 수량 */
					, (SELECT IMG_SEQ FROM GOODS_IMG WHERE GOODS_ID = CD.GOODS_ID AND DLGT_YN = '${@framework.common.constants.CommonConstants@COMM_YN_Y}') AS IMG_SEQ /* 상품 대표이미지 순번 */
					, (SELECT IMG_PATH FROM GOODS_IMG WHERE GOODS_ID = CD.GOODS_ID AND DLGT_YN = '${@framework.common.constants.CommonConstants@COMM_YN_Y}') AS IMG_PATH /* 상품 대표이미지 경로 */
					,(SELECT	IFNULL(SUM(APL_AMT), 0) 
						FROM		APL_BNFT AB
						WHERE	AB.ORD_NO = OD.ORD_NO
						AND		AB.ORD_DTL_SEQ = OD.ORD_DTL_SEQ
						AND		AB.APL_BNFT_GB_CD = '20'
						AND     AB.APL_BNFT_TP_CD  = '210') AS CP_DC_AMT		/* 상품 쿠폰 할인 금액 */
					,(SELECT	IFNULL(SUM(APL_AMT), 0) 
						FROM		APL_BNFT AB
						WHERE	AB.ORD_NO = OD.ORD_NO
						AND		AB.ORD_DTL_SEQ = OD.ORD_DTL_SEQ
						AND		AB.APL_BNFT_GB_CD = '20'
						AND     AB.APL_BNFT_TP_CD  = '220') AS CART_CP_DC_AMT	/** 장바구니 쿠폰 할인 금액 */
					, (SELECT BND_NM_KO FROM BRAND_BASE WHERE BND_NO = (SELECT BND_NO FROM GOODS_BASE WHERE GOODS_ID = CD.GOODS_ID)) AS BND_NM_KO	/* 브랜드명 국문 */
					,(
	        			 SELECT 
						  	group_concat( GB.GOODS_NM, ',') 
						  FROM GOODS_BASE GB    	
						  	WHERE GB.GOODS_ID IN 
						  	(					                   
								SELECT ODC.CSTRT_GOODS_ID 
								  FROM ORD_DTL_CSTRT ODC
								       INNER JOIN ORDER_DETAIL ODD 
								       ON ODC.ORD_NO = ODD.ORD_NO
								       AND ODC.ORD_DTL_SEQ = ODD.ORD_DTL_SEQ	       
								 WHERE ODC.ORD_NO  = OD.ORD_NO 
								 AND ODC.CSTRT_GOODS_GB_CD = '30'
								 ORDER BY ODD.ORD_DTL_SEQ ASC
							)	
	        		)AS SUB_GOODS_NM		/*사은품명*/        
					<!-- , FN_GET_ORDER_DLVR_NO(OD.ORD_NO, OD.ORD_DTL_SEQ, 'Y') AS DLVR_NO //주석처리 - DLVR_NO 조회항목이 2개 존재하여 주석처리 2021.06.08 by kek01 -->
		            <!-- , ( SELECT DLVR_PRCS_TP_CD FROM DELIVERY DV where DV.DLVR_NO = FN_GET_ORDER_DLVR_NO(OD.ORD_NO, OD.ORD_DTL_SEQ, 'Y')) as DLVR_PRCS_TP_CD -->
		             , CASE WHEN (SELECT COMP_GB_CD FROM COMPANY_BASE CB WHERE CB.COMP_NO = CD.COMP_NO) = '20' THEN '10'
                     ELSE (SELECT DLVR_PRCS_TP_CD FROM ORDER_BASE X1 WHERE X1.ORD_NO = CD.ORD_NO)
                     END DLVR_PRCS_TP_CD
		            , FN_GET_GOODS_STOCK(OD.GOODS_ID, OD.ITEM_NO) AS STK_QTY
		            , OD.PAK_GOODS_ID
		            <if test='clmChainYn != null and clmChainYn eq "Y"'>
		            ,'Y' AS CLM_CHAIN_YN
		            ,(SELECT SUM(CLM_QTY) FROM CLAIM_DETAIL WHERE CLM_NO = CD.CLM_NO AND ORD_NO = CD.ORD_NO AND ORD_DTL_SEQ = CD.ORD_DTL_SEQ AND CLM_DTL_TP_CD = '30') AS CLM_QTY_SUM
		            </if>
					<if test='clmChainReprsntYn != null and clmChainReprsntYn eq "Y"'>
					, CD.CLM_DTL_SEQ	AS	ORG_CD_CLM_DTL_SEQ
					, MIN(CD.CLM_DTL_SEQ) OVER(PARTITION BY CD.CLM_NO, CD.ORD_NO, CD.ORD_DTL_SEQ, CD.CLM_DTL_TP_CD)     AS	CD_CLM_DTL_SEQ
					, MIN(CD.CLM_DTL_STAT_CD) OVER(PARTITION BY CD.CLM_NO, CD.ORD_NO, CD.ORD_DTL_SEQ, CD.CLM_DTL_TP_CD) AS	CLM_DTL_STAT_CD
					, IFNULL(SUM(CD.CLM_QTY) OVER(PARTITION BY CD.CLM_NO, CD.ORD_NO, CD.ORD_DTL_SEQ, CD.CLM_DTL_TP_CD ),0)									AS CLM_QTY /* 클레임수량 */
					, (CD.PAY_AMT * IFNULL(SUM(CD.CLM_QTY) OVER(PARTITION BY CD.CLM_NO, CD.ORD_NO, CD.ORD_DTL_SEQ, CD.CLM_DTL_TP_CD ),0)) + CD.RMN_PAY_AMT	AS RFD_PAY_TOT_AMT		/* 결제 환불 합계 금액 */
					</if>
					<if test='clmChainReprsntYn == null'>
					, CD.CLM_DTL_STAT_CD		/* 클레임 상세 상태 코드 */
					, CD.CLM_QTY				/* 클레임 수량 */
					, (CD.PAY_AMT * CD.CLM_QTY) + CD.RMN_PAY_AMT AS RFD_PAY_TOT_AMT		/* 결제 환불 합계 금액 */
					</if>
					, OD.RSV_GOODS_YN			/* 예약 상품 여부 */
		FROM		CLAIM_DETAIL CD
					, ORDER_DETAIL OD
					, CLAIM_BASE CB
					<if test="isCartReSet">
						, GOODS_BASE GB
					</if>
		WHERE	CD.ORD_NO = OD.ORD_NO
		AND		CD.ORD_DTL_SEQ = OD.ORD_DTL_SEQ
		AND 	CB.CLM_NO = CD.CLM_NO
		<if test="ordrShowYn != null and ordrShowYn != ''">
		AND 	CB.ORDR_SHOW_YN = 'Y'
		</if>
		<if test="clmNo != null and clmNo != ''">
		AND		CD.CLM_NO			= #{clmNo}
		</if>
		<if test="arrClmNo != null and arrClmNo.length > 0">
		AND 	CD.CLM_NO IN
			<foreach item="itemClmNo" index="indexClmNo" collection="arrClmNo" open="(" separator=","  close=")">
				#{itemClmNo}
			</foreach>
		</if>
        <if test="mbrNo != null and mbrNo != ''">
        AND     CD.MBR_NO           = #{mbrNo}
        </if>
		<if test="arrClmDtlSeq != null">
			<foreach collection="arrClmDtlSeq" item="clmDtlSeq" separator="," open="AND CD.CLM_DTL_SEQ IN (" close=")" >
				#{clmDtlSeq}
			</foreach>
		</if>
<!-- 	KEK01 주석처리 2021.03.09 		
        <if test="dlvrNo != null">
        AND     CD.DLVR_NO = #{dlvrNo}
        </if>
-->        
<!-- 	KEK01 추가 2021.03.09 -->
		<if test="dlvrNo != null">
		AND     (CD.CLM_NO, CD.CLM_DTL_SEQ) IN (
					SELECT CDC2.CLM_NO, CDC2.CLM_DTL_SEQ 
					  FROM CLM_DTL_CSTRT CDC2 
					 WHERE CDC2.CLM_DTL_CSTRT_NO IN (
						SELECT CLM_DTL_CSTRT_NO FROM CLM_DTL_CSTRT_DLVR_MAP CDCDM WHERE CDCDM.DLVR_NO = #{dlvrNo}
					 )
				) 					
		</if>
        <if test="compNo != null">
        AND     CD.COMP_NO = #{compNo}
        </if>
        <if test="upCompNo != null">
        AND     (CD.COMP_NO = #{upCompNo} OR CD.UP_COMP_NO = #{upCompNo})
        </if>
		<if test="ordNo != null and ordNo != ''">
		AND		CB.ORD_NO	= #{ordNo}
		</if>
		<if test="ordDtlSeq != null">
		AND		OD.ORD_DTL_SEQ	= #{ordDtlSeq}
		</if>
		<if test="clmStatNot40 == true ">
		AND  	CB.CLM_STAT_CD != '${@framework.common.constants.CommonConstants@CLM_STAT_40}'
		</if>
		
		<if test="clmDtlTpCdNot40 == true ">
		AND  	CD.CLM_DTL_TP_CD != '${@framework.common.constants.CommonConstants@CLM_DTL_TP_40}'		
		</if>
		<if test="clmDtlTpCd != null and clmDtlTpCd != ''">
		AND     CD.CLM_DTL_TP_CD = #{clmDtlTpCd}
		</if>
		<if test="isCartReSet">
			AND CD.GOODS_ID = GB.GOODS_ID
			AND FN_GET_GOODS_STOCK(OD.GOODS_ID, OD.ITEM_NO) > 0
        	AND GB.GOODS_STAT_CD = '${@framework.common.constants.CommonConstants@GOODS_STAT_40}'
        	AND CD.CLM_DTL_TP_CD != '${@framework.common.constants.CommonConstants@CLM_DTL_TP_40}'
		</if>
		
		ORDER BY CD.CLM_NO DESC, CD.CLM_DTL_SEQ ASC
		
		<if test='clmChainReprsntYn != null and clmChainReprsntYn eq "Y"'>
		) Z
		WHERE Z.ORG_CD_CLM_DTL_SEQ = Z.CD_CLM_DTL_SEQ
		ORDER BY Z.CLM_NO DESC, Z.CLM_DTL_SEQ ASC
		</if>		
	</select>
	
	<select id="listClaimExchangeDetail" resultType="biz.app.claim.model.ClaimDetailVO" >
		<!--
			Query Name : claimDetail.listClaimDetail
			Description : 클레임 상세 목록 조회
		-->
		SELECT	/* QUERYID(claimDetail.listClaimExchangeDetail) */
                    CB.CLM_TP_CD
                    , CB.ACPT_DTM
                    , CB.CNC_DTM
                    , CB.CLM_STAT_CD
                    , CB.SWAP_YN				/* 맞교환 여부 */
					, CD.CLM_NO						/* 클레임 번호 */
					, CD.CLM_DTL_SEQ				/* 클레임 상세 순번 */
					, CD.CLM_DTL_TP_CD			/* 클레임 상세 유형 코드 */
					, CD.CLM_DTL_STAT_CD		/* 클레임 상세 상태 코드 */
					, CD.CLM_RSN_CD				/* 클레임 사유 코드 */
					, CD.CLM_RSN_CONTENT    /* 클레임 사유 내용 */
                    , CD.CLM_DENY_RSN_CONTENT   /* 클레임 거부사유 내용 */
					, CD.MBR_NO					/* 회원 번호 */
					, CD.ORD_NO					/* 주문 번호 */
					, CD.ORD_DTL_SEQ				/* 주문 상세 순번 */
					, CD.ORG_CLM_NO				/* 원 클레임 번호 */
					, CD.ORG_CLM_DTL_SEQ		/* 원 클레임 상세 순번 */
					, CD.GOODS_ID					/* 상품 아이디 */
					, CD.GOODS_NM				/* 상품 명 */
					, CD.ITEM_NO
					, CD.ITEM_NM
					, CD.DEAL_GOODS_ID			/* 딜 상품 아이디 */
					, CD.DISP_CLSF_NO				/* 전시 분류 번호 */
					, (SELECT DISP_CLSF_NM FROM DISPLAY_CATEGORY WHERE DISP_CLSF_NO = CD.DISP_CLSF_NO) AS DISP_CLSF_NM
					, CD.COMP_GOODS_ID			/* 업체 상품 아이디 */
					, CD.COMP_ITEM_ID			/* 업체 단품 아이디 */
					, CD.SALE_AMT					/* 판매 금액 */
					, IFNULL(CD.PAY_AMT,0) AS PAY_AMT	/* 결제 금액 */
					, CD.RMN_PAY_AMT			/* 잔여 결제 금액 */
					, CD.CLM_QTY					/* 클레임 수량 */
					, (CD.PAY_AMT * CD.CLM_QTY) + CD.RMN_PAY_AMT AS RFD_PAY_TOT_AMT		/* 결제 환불 합계 금액 */
					, CD.CMS							/* 수수료 */
					, CD.GOODS_CMSN_RT			/* 상품수수료율 */
					, CD.TAX_GB_CD					/* 과세 구분 코드 */
					, CD.DLVRC_NO					/* 배송비 번호 */
					, CD.RTN_DLVRC_NO			/* 회수비 번호 */
					, CD.DLVRA_NO					/* 배송지 번호 */
					, CD.RTRNA_NO					/* 회수지 번호 */
					, CD.DLVR_NO					/* 배송 번호 */
					, CD.COMP_NO					/* 업체 번호 */
					, (SELECT FN_GET_COMPANY_NAME(CD.COMP_NO) ) AS COMP_NM	/* 업체 명 */
					, CD.UP_COMP_NO				/* 상위 업체 번호 */
					, CD.CLM_CPLT_DTM			/* 클레임 완료 일시 */
					, CD.RTN_MTD_CD				/* 회수 방법 코드 */
					, CD.OUTSIDE_CLM_DTL_NO	/* 외부 클레임 상세 번호 */
					, CD.SYS_REGR_NO				/* 시스템 등록자 번호 */
					, CD.SYS_REG_DTM				/* 시스템 등록 일시 */
					, CD.SYS_UPDR_NO				/* 시스템 수정자 번호 */
					, CD.SYS_UPD_DTM				/* 시스템 수정 일시 */
					, FN_GET_USER_NAME(CD.SYS_REGR_NO) AS SYS_REGR_NM	/* 시스템 등록자 */
					, FN_GET_USER_NAME(CD.SYS_UPDR_NO) AS SYS_UPDR_NM	/* 시스템 수정자 */
					, OD.ORD_QTY                   /* 총 주문 수량 */
					, OD.RMN_ORD_QTY			/* 주문 잔여 수량 */
					, OD.RTN_QTY					/* 반품 수량 */
					, (SELECT IMG_SEQ FROM GOODS_IMG WHERE GOODS_ID = CD.GOODS_ID AND DLGT_YN = '${@framework.common.constants.CommonConstants@COMM_YN_Y}') AS IMG_SEQ /* 상품 대표이미지 순번 */
					, (SELECT IMG_PATH FROM GOODS_IMG WHERE GOODS_ID = CD.GOODS_ID AND DLGT_YN = '${@framework.common.constants.CommonConstants@COMM_YN_Y}') AS IMG_PATH /* 상품 대표이미지 경로 */
					,(SELECT	IFNULL(SUM(APL_AMT), 0) 
						FROM		APL_BNFT AB
						WHERE	AB.ORD_NO = OD.ORD_NO
						AND		AB.ORD_DTL_SEQ = OD.ORD_DTL_SEQ
						AND		AB.APL_BNFT_GB_CD = '20'
						AND     AB.APL_BNFT_TP_CD  = '210') AS CP_DC_AMT		/* 상품 쿠폰 할인 금액 */
					,(SELECT	IFNULL(SUM(APL_AMT), 0) 
						FROM		APL_BNFT AB
						WHERE	AB.ORD_NO = OD.ORD_NO
						AND		AB.ORD_DTL_SEQ = OD.ORD_DTL_SEQ
						AND		AB.APL_BNFT_GB_CD = '20'
						AND     AB.APL_BNFT_TP_CD  = '220') AS CART_CP_DC_AMT	/** 장바구니 쿠폰 할인 금액 */
					, (SELECT BND_NM_KO FROM BRAND_BASE WHERE BND_NO = (SELECT BND_NO FROM GOODS_BASE WHERE GOODS_ID = CD.GOODS_ID)) AS BND_NM_KO	/* 브랜드명 국문 */
					, OD.PAK_GOODS_ID
		FROM		CLAIM_DETAIL CD
					,ORDER_DETAIL OD
					, CLAIM_BASE CB
		WHERE	CD.ORD_NO = OD.ORD_NO
		AND		CD.ORD_DTL_SEQ = OD.ORD_DTL_SEQ
		AND 		CB.CLM_NO = CD.CLM_NO
		<if test="clmNo != null and clmNo != ''">
		AND		CD.CLM_NO			= #{clmNo}
		</if>
		<if test="arrClmNo != null and arrClmNo.length > 0">
		AND 		CD.CLM_NO IN
			<foreach item="itemClmNo" index="indexClmNo" collection="arrClmNo" open="(" separator=","  close=")">
				#{itemClmNo}
			</foreach>
		</if>
        <if test="mbrNo != null and mbrNo != ''">
        AND     CD.MBR_NO           = #{mbrNo}
        </if>
		<if test="arrClmDtlSeq != null">
			<foreach collection="arrClmDtlSeq" item="clmDtlSeq" separator="," open="AND CD.CLM_DTL_SEQ IN (" close=")" >
				#{clmDtlSeq}
			</foreach>
		</if>
        <if test="dlvrNo != null">
        AND     CD.DLVR_NO = #{dlvrNo}
        </if>
        <if test="compNo != null">
        AND     CD.COMP_NO = #{compNo}
        </if>
        <if test="upCompNo != null">
        AND     (CD.COMP_NO = #{upCompNo} OR CD.UP_COMP_NO = #{upCompNo})
        </if>
		<if test="ordNo != null and ordNo != ''">
		AND		CB.ORD_NO	= #{ordNo}
		</if>
		<if test="ordDtlSeq != null">
		AND		OD.ORD_DTL_SEQ	= #{ordDtlSeq}
		</if>
		<if test="clmStatNot40 == true ">
		AND  	CB.CLM_STAT_CD != '${@framework.common.constants.CommonConstants@CLM_STAT_40}'
		</if>
		<if test="clmDtlTpCd != null and clmDtlTpCd != ''">
		AND		CD.CLM_DTL_TP_CD			= #{clmDtlTpCd}
		</if>
		
		ORDER BY CD.CLM_NO DESC, CD.CLM_DTL_SEQ ASC
	</select>

	<update id="updateClaimDetail">
		<!--
			Query Name : claimDetail.updateClaimDetail
			Description : 클레임 상세 수정	kek01
		-->
		UPDATE	/* QUERYID(claimDetail.updateClaimDetail) */
		        CLAIM_DETAIL SET
					SYS_UPDR_NO = #{sysUpdrNo}					/* 시스템 수정자 번호 */
					, SYS_UPD_DTM = NOW()						/* 시스템 수정 일시 */
					<if test="clmDtlStatCd != null and clmDtlStatCd != ''">
					, CLM_DTL_STAT_CD = #{clmDtlStatCd}			/* 클레임 상태 코드 */
					</if>
					<if test='clmDtlStatCd != null and (clmDtlStatCd.equals("120") or clmDtlStatCd.equals("250") or clmDtlStatCd.equals("260") or clmDtlStatCd.equals("350") or clmDtlStatCd.equals("360") or clmDtlStatCd.equals("450"))'>
					, CLM_CPLT_DTM = NOW()
					</if>					
					<if test="dlvrCpltPicUrl != null and dlvrCpltPicUrl != ''">
					, DLVR_CPLT_PIC_URL = #{dlvrCpltPicUrl}		/* 배송 완료 사진 URL */
					</if>
					<if test="dlvrCpltYn != null and dlvrCpltYn != ''">
					, DLVR_CPLT_YN = #{dlvrCpltYn}				/* 배송 완료 여부 */
					</if>
					<if test="dlvrNo != null and dlvrNo != ''">
					, DLVR_NO = #{dlvrNo}						/* 배송 번호 */
					</if>
					<if test="reduceRmnClmQty != null">
					, RMN_CLM_QTY = RMN_CLM_QTY - #{reduceRmnClmQty}			/* 클레임 수량 */
					</if>
					
		WHERE	1 = 1
		AND		CLM_NO = #{clmNo}
		<if test="clmDtlSeq != null">
		AND		CLM_DTL_SEQ = #{clmDtlSeq}
		</if>
	</update>
	<resultMap id="resultMapForClaim" type="biz.app.claim.model.ClaimDetailVO" autoMapping="true">
		<result property="clmNo"				column="CD_CLM_NO"              />
		<result property="clmDtlSeq"			column="CD_CLM_DTL_SEQ"         />
		<result property="clmDtlTpCd"			column="CD_CLM_DTL_TP_CD"       />
		<result property="clmDtlStatCd"			column="CD_CLM_DTL_STAT_CD"     />
		<result property="clmRsnCd"				column="CD_CLM_RSN_CD"          />
		<result property="clmRsnContent"		column="CD_CLM_RSN_CONTENT"     />
		<result property="clmDenyRsnContent"	column="CD_CLM_DENY_RSN_CONTENT"/>
		<result property="mbrNo"				column="CD_MBR_NO"              />
		<result property="ordNo"				column="CD_ORD_NO"              />
		<result property="ordDtlSeq"			column="CD_ORD_DTL_SEQ"         />
		<result property="orgClmNo"				column="CD_ORG_CLM_NO"          />
		<result property="orgClmDtlSeq"			column="CD_ORG_CLM_DTL_SEQ"     />
		<result property="goodsId"				column="CD_GOODS_ID"            />
		<result property="goodsNm"				column="CD_GOODS_NM"            />
		<result property="dealGoodsId"			column="CD_DEAL_GOODS_ID"       />
		<result property="pakGoodsId"			column="CD_PAK_GOODS_ID"        />
		<result property="dispClsfNo"			column="CD_DISP_CLSF_NO"        />
		<result property="compGoodsId"			column="CD_COMP_GOODS_ID"       />
		<result property="compItemId"			column="CD_COMP_ITEM_ID"        />
		<result property="goodsPrcNo"			column="CD_GOODS_PRC_NO"        />
		<result property="saleAmt"				column="CD_SALE_AMT"            />
		<result property="payAmt"				column="CD_PAY_AMT"             />
		<result property="rmnPayAmt"			column="CD_RMN_PAY_AMT"         />
		<result property="clmQty"				column="CD_CLM_QTY"             />
		<result property="cms"					column="CD_CMS"                 />
		<result property="goodsCmsnRt"			column="CD_GOODS_CMSN_RT"       />
		<result property="taxGbCd"				column="CD_TAX_GB_CD"           />
		<result property="dlvrcNo"				column="CD_DLVRC_NO"            />
		<result property="rtnDlvrcNo"			column="CD_RTN_DLVRC_NO"        />
		<result property="dlvraNo"				column="CD_DLVRA_NO"            />
		<result property="rtrnaNo"				column="CD_RTRNA_NO"            />
		<result property="dlvrNo"				column="CD_DLVR_NO"             />
		<result property="compNo"				column="CD_COMP_NO"             />
		<result property="upCompNo"				column="CD_UP_COMP_NO"          />
		<result property="clmCpltDtm"			column="CD_CLM_CPLT_DTM"        />
		<result property="rtnMtdCd"				column="CD_RTN_MTD_CD"          />
		<result property="outsideClmDtlNo"		column="CD_OUTSIDE_CLM_DTL_NO"  />
		<result property="stlNo"				column="CD_STL_NO"              />
		<result property="dlvrCpltPicUrl"		column="CD_DLVR_CPLT_PIC_URL"   />
		<result property="dlvrSms"				column="CD_DLVR_SMS"            />
		<result property="twcTckt"				column="CD_TWC_TCKT"            />
		<result property="dlvrCpltYn"			column="CD_DLVR_CPLT_YN"        />
		<result property="itemNm"				column="CD_ITEM_NM"				/>
		<result property="itemNo"				column="CD_ITEM_NO"				/>
		<result property="dispClsfNm"			column="CD_DISP_CLSF_NM"		/>
		<result property="cpDcAmt"				column="CD_CP_DC_AMT"			/>
		<result property="cartCpDcAmt"			column="CD_CART_CP_DC_AMT"		/>
		<result property="bndNmKo"				column="CD_BND_NM_KO"			/>
		<result property="subGoodsNm"			column="CD_SUB_GOODS_NM"		/>
		<result property="dlvrPrcsTpCd"			column="CD_DLVR_PRCS_TP_CD"		/>
		<association property="claimBaseVO" javaType="biz.app.claim.model.ClaimBaseVO" autoMapping="true">
		</association>
	</resultMap>
	<resultMap id="claimListMap2ndE" type="biz.app.order.model.OrderBaseVO" autoMapping="true"> 
		<id property="ordNo" column="ord_no" /> <!-- 주문번호별 -->
		<association property="payBaseVO" javaType="biz.app.pay.model.PayBaseVO" autoMapping="true"/>
		<collection property="orderCompanyListVO" ofType="biz.app.order.model.OrderCompanyVO" autoMapping="true"> 
			<id property="compNo" column="comp_no" /> <!-- 회사번호별 -->
			<collection property="orderInvoiceListVO" ofType="biz.app.order.model.OrderInvoiceVO" autoMapping="true">
				<id property="dlvrInvNo" column="DLVR_INV_NO" /> <!-- 송장번호별 -->
				<id property="cdClmNo" column="CD_CLM_NO" />
				<collection property="orderDlvrStatListVO" ofType="biz.app.order.model.OrderDlvrStatVO" autoMapping="true"> 
					<id property="forceDtlStat" column="FORCE_DTL_STAT" /> <!-- 프로세스단계(odrdtlstat, clmtpcd) -->
					<result property="ordDtlStatCd" column="ORD_DTL_STAT_CD" />
					<result property="clmTpCd" column="CB_CLM_TP_CD" />
					<result property="clmStatCd" column="CB_CLM_STAT_CD" /> <!-- 2021.05.28, ssmvf01, 클레임 상태 추가 -->
					<result property="dlvrPrcsTpCd" column="DLVR_PRCS_TP_CD" />
					<result property="clmDtlStatCd" column="CD_CLM_DTL_STAT_CD" />
					<result property="compGbCd" column="COMP_GB_CD"/>
					<result property="dlvrInvNo" column="DLVR_INV_NO" />
					<result property="viewClmDtlStatCd" column="VIEW_CD_CLM_DTL_STAT_CD" />
					<discriminator column="LIST_DELIMITER" javaType="String"> <!-- 쿼리로 LIST_DELIMITER 컬럼을 두어 리스트를 나눠담는다 -->
					<case value="CLAIM">
						<collection property="claimDetailListVO" ofType="biz.app.order.model.OrderDetailVO" autoMapping="true">
							<association property="claimDetailVO" resultMap="resultMapForClaim" autoMapping="true">
							</association>
						</collection>
					</case>
					</discriminator>
				</collection>
			</collection>
		</collection>
	</resultMap>
	<select id="listClaimDetail2ndE" resultMap="claimListMap2ndE">
		SELECT /* QUERYID(claimDetail.listClaimDetail2ndE) */
			LIST.*
			, (SELECT PAY_MEANS_CD FROM PAY_BASE WHERE ORD_CLM_GB_CD ='10' AND CNC_YN ='N'  AND ORD_NO = LIST.ORD_NO ORDER BY PAY_MEANS_CD LIMIT 1) AS PAY_MEANS_CD
			, (SELECT PAY_STAT_CD FROM PAY_BASE WHERE ORD_CLM_GB_CD ='10' AND CNC_YN ='N'  AND ORD_NO = LIST.ORD_NO ORDER BY PAY_MEANS_CD LIMIT 1) AS PAY_STAT_CD
			, (SELECT CASE WHEN SUM(IF(FN_GET_ORDER_CLAIM_ING_YN(ORD_NO, ORD_DTL_SEQ)='Y', 1, 0)) = 0 
		                    AND SUM(IF(RMN_ORD_QTY - RTN_QTY - CLM_EXC_CPLT_QTY > 0, 1, 0)) = SUM(IF(RMN_ORD_QTY - RTN_QTY - CLM_EXC_CPLT_QTY > 0 AND ORD_DTL_STAT_CD = '170', 1, 0)) THEN 'Y'
		                   ELSE 'N'
		              END 		       
		         FROM ORDER_DETAIL
		        WHERE ORD_NO = LIST.ORD_NO
		      ) AS ORD_DELETE_FLG
		FROM (
			SELECT 
				OBB.*
				, (SELECT IFNULL(SUM(CLM_QTY), 0) AS CLM_EXC_QTY FROM CLAIM_BASE CB ,CLAIM_DETAIL CD 
					WHERE CB.CLM_NO = CD.CLM_NO AND CB.CLM_TP_CD = '30' AND CB.CLM_STAT_CD IN ('30') AND CD.CLM_DTL_TP_CD = '40' AND CB.ORD_NO = OBB.ORD_NO AND CD.ORD_DTL_SEQ = OBB.ORD_DTL_SEQ 
				) AS CLM_EXC_CPLT_QTY
			FROM (
				SELECT
					ORD_NO,
					ST_ID,
					ORD_STAT_CD,
					ORD_MDA_CD,
					MBR_NO,
					MBR_GRD_CD,
					ORD_NM,
					ORDR_ID,
					ORDR_EMAIL,
					ORDR_TEL,
					ORDR_MOBILE,
					ORDR_IP,
					ORD_ACPT_DTM,
					ORD_CPLT_DTM,
					OUTSIDE_ORD_NO,
					CHNL_ID,
					ORD_DTL_CNT,
					ORD_PRCS_RST_CD,
					ORD_PRCS_RST_MSG,
					DATA_STAT_CD,
					DLVR_PRCS_TP_CD, /* 일반택배일 경우 강제로 코드를 10으로 바꿔줌 */
					ORDR_SHOW_YN,
					PAY_AMT_TOTAL,		/* 결제 금액 */
					CNC_PSB_YN,			/* 취소 가능 여부 */
					ORD_DTL_SEQ,
					ORD_DTL_STAT_CD,
					GOODS_ID,
					ITEM_NO,
					ITEM_NM,
					DEAL_GOODS_ID,
					PAK_GOODS_ID,
					COMP_GOODS_ID,
					COMP_ITEM_ID,
					ORD_QTY,
					CNC_QTY,
					RTN_QTY,
					RMN_ORD_QTY,
					GOODS_PRC_NO,
					SALE_AMT,
					PAY_AMT,
					RMN_PAY_AMT,
					CMS,
					GOODS_CMSN_RT,
					TAX_GB_CD,
					ORD_SVMN,
					SVMN_VLD_PRD_CD,
					SVMN_VLD_PRD,
					FREE_DLVR_YN,
					HOT_DEAL_YN,
					DLVRC_NO,
					ORD_DLVRA_NO,
					COMP_NO,
					UP_COMP_NO,
					MD_USR_NO,
					GOODS_ESTM_NO,
					GOODS_ESTM_REG_YN,
					OUTSIDE_ORD_DTL_NO,
					STL_NO,
					DISP_CLSF_NO,
					DLVR_CPLT_PIC_URL,
					DLVR_SMS,
					DLVR_CPLT_YN,
					MKI_GOODS_YN,
					MKI_GOODS_OPT_CONTENT,
					RSV_GOODS_YN,
					ISU_SCHD_PNT,
					RTN_PSB_YN,				/* 반품 가능 여부 */
					RTN_ING_YN,				/* 반품 진행 여무 */
					RTN_CPLT_QTY,			/* 반품 완료 수량 */
					CLM_EXC_ING_QTY,		/* 교환 진행 수량 */
					CLM_ING_YN,				/* 클레임 진행 여부 */
					PRMT_DC_AMT,			/* 프로모션 할인 금액 */
					CP_DC_AMT,				/* 쿠폰 할인 금액 */
					DLVR_NO,				/* 배송 번호 */
					STK_QTY,
					VLD_ORD_QTY,
					IMG_SEQ,
					IMG_PATH,
					RVS_IMG_PATH,
					COMP_NM,
					COMP_GB_CD, /* 업체 구분 코드 10:자사 */
					ITEM_MNG_YN,
					BND_NM, 			/* 노출 브랜드명 */
					BND_NM_KO,		/* 브랜드명 국문 */
					GOODS_CSTRT_TP_CD,
					PAK_ITEM_NM,
					CASE WHEN DLVR_NO &lt; 0 AND ADDDATE((SELECT DLVR_CPLT_DTM FROM DELIVERY WHERE DLVR_NO = OBB.DLVR_NO),7) &lt; SYSDATE() THEN 'N' ELSE 'Y' END AS COMPARE_DTM_YN,
					(
						SELECT
							GROUP_CONCAT( GB.GOODS_NM )
						FROM GOODS_BASE GB
						WHERE GB.GOODS_ID IN (
							SELECT ODC.CSTRT_GOODS_ID
							FROM ORD_DTL_CSTRT ODC
							INNER JOIN ORDER_DETAIL OD ON ODC.ORD_NO = OBB.ORD_NO AND ODC.ORD_DTL_SEQ = OBB.ORD_DTL_SEQ
							WHERE ODC.ORD_NO  = OBB.ORD_NO AND ODC.CSTRT_GOODS_GB_CD = '30'
							ORDER BY OBB.ORD_DTL_SEQ ASC
						)
					)AS SUB_GOODS_NM,		/*사은품명*/
					( SELECT ODAM.ORD_DT FROM ORD_DLVR_AREA_MAP ODAM WHERE ODAM.ORD_NO = OBB.ORD_NO AND ODAM.DEL_YN ='N') AS ORD_DT,
					( SELECT WEEKDAY(DATE_FORMAT(ODAM.ORD_DT, '%Y%m%d')) FROM ORD_DLVR_AREA_MAP ODAM WHERE ODAM.ORD_NO = OBB.ORD_NO AND ODAM.DEL_YN ='N') AS ORD_DT_WEEK,
					( SELECT DLVR_CPLT_DTM FROM DELIVERY DV WHERE DV.DLVR_NO = OBB.DLVR_NO AND DV.ORD_CLM_GB_CD ='10') as DLVR_CPLT_DTM,		/*배송 완료 일시*/
					( SELECT WEEKDAY(DATE_FORMAT(DLVR_CPLT_DTM, '%Y%m%d')) FROM DELIVERY DV WHERE DV.DLVR_NO = OBB.DLVR_NO AND DV.ORD_CLM_GB_CD ='10') as DLVR_CPLT_DTM_WEEK,	/*배송 완료 일시 요일*/
					IFNULL((SELECT INV_NO FROM DELIVERY DV WHERE DV.DLVR_NO = OBB.DLVR_NO), '') AS DLVR_INV_NO,
					(
						SELECT CONCAT_WS('|', if(BANK_CD='', null, BANK_CD) , if(ACCT_NO='', null, ACCT_NO), if(DPST_SCHD_DT='', null, DPST_SCHD_DT))
						FROM PAY_BASE PB
						WHERE PB.ORD_CLM_GB_CD ='10' AND PB.PAY_MEANS_CD IN('10', '20', '30') AND CNC_YN ='N'  AND PB.ORD_NO = OBB.ORD_NO
					) AS ORD_BANK_INFO,
					(CASE WHEN PAK_GOODS_ID IS null THEN GOODS_NM ELSE PAK_GOODS_NM END) AS GOODS_NM,     /* 상품 명 */
					(CASE WHEN GOODS_CSTRT_TP_CD = 'PAK' THEN GOODS_NM ELSE NULL END) AS OPT_GOODS_NM,
					CD_CLM_NO,
					CD_CLM_DTL_SEQ,
					CD_CLM_DTL_TP_CD,
					CD_CLM_DTL_STAT_CD,
					CD_CLM_RSN_CD,
					CD_CLM_RSN_CONTENT,
					CD_CLM_DENY_RSN_CONTENT,
					CD_MBR_NO,
					CD_ORD_NO,
					CD_ORD_DTL_SEQ,
					CD_ORG_CLM_NO,
					CD_ORG_CLM_DTL_SEQ,
					CD_GOODS_ID,
					CD_GOODS_NM,
					CD_DEAL_GOODS_ID,
					CD_PAK_GOODS_ID,
					CD_DISP_CLSF_NO,
					CD_COMP_GOODS_ID,
					CD_COMP_ITEM_ID,
					CD_GOODS_PRC_NO,
					CD_SALE_AMT,
					CD_PAY_AMT,
					CD_RMN_PAY_AMT,
					CD_CLM_QTY,
					CD_CMS,
					CD_GOODS_CMSN_RT,
					CD_TAX_GB_CD,
					CD_DLVRC_NO,
					CD_RTN_DLVRC_NO,
					CD_DLVRA_NO,
					CD_RTRNA_NO,
					CD_DLVR_NO,
					CD_COMP_NO,
					CD_UP_COMP_NO,
					CD_CLM_CPLT_DTM,
					CD_RTN_MTD_CD,
					CD_OUTSIDE_CLM_DTL_NO,
					CD_STL_NO,
					CD_DLVR_CPLT_PIC_URL,
					CD_DLVR_SMS,
					CD_TWC_TCKT,
					CD_DLVR_CPLT_YN,
					CD_STK_QTY,
					CD_RFD_PAY_TOT_AMT,
					CB_ST_ID,
					CB_CLM_TP_CD,
					CB_CLM_STAT_CD,
					CB_ORD_MDA_CD,
					CB_CHNL_ID,
					CB_SWAP_YN,
					CB_ACPT_DTM,
					CB_CNC_DTM,
					CB_CPLT_DTM,
					CB_ACPTR_NO,
					CB_CNCR_NO,
					CB_CPLTR_NO,
					CB_OUTSIDE_CLM_NO,
					CB_ORDR_SHOW_YN,
					CD_ITEM_NM,
					CD_ITEM_NO,
					CD_DISP_CLSF_NM,
					CD_CP_DC_AMT,		/* 상품 쿠폰 할인 금액 */
					CD_CART_CP_DC_AMT,	/** 장바구니 쿠폰 할인 금액 */
					CD_BND_NM_KO,		/* 브랜드명 국문 */
					CD_SUB_GOODS_NM,	/*사은품명*/
					CD_DLVR_PRCS_TP_CD,
					CASE WHEN CLM_DTL_STAT_ASC IS NULL THEN CONCAT('1ORD', ORD_DTL_STAT_CD)
					WHEN (CLM_DTL_STAT_ASC IS NOT NULL AND ((ORD_QTY - CNC_QTY - RTN_QTY) > 0)) THEN CONCAT('2CLM', CLM_DTL_STAT_ASC)
					ELSE CONCAT('2CLM', CLM_DTL_STAT_ASC)
					END AS FORCE_DTL_STAT, /* 주문과 클레임을 구분하여 리스트에 담기위한 구분자 */
					CASE WHEN CLM_DTL_STAT_ASC IS NULL THEN 'DELIVERY'
					WHEN (CLM_DTL_STAT_ASC IS NOT NULL AND ((ORD_QTY - CNC_QTY - RTN_QTY) > 0)) THEN 'CLAIM'
					ELSE 'CLAIM'
					END AS LIST_DELIMITER, /* 주문과 클레임을 구분하여 리스트에 담기위한 구분자 */
					CLM_DTL_SEQ_ORDER,
					CASE WHEN CB_CLM_TP_CD != '30' 
						 THEN CD_CLM_DTL_STAT_CD
						 WHEN CLM_DTL_STAT_ASC = '31'
				         THEN '410'
					     WHEN CLM_DTL_STAT_ASC = '32'
					     THEN '330'
					     <!-- 교환 거부 순서 변경 -->
					     WHEN CLM_DTL_STAT_ASC = '50'
					     THEN '350'
					     WHEN CLM_DTL_STAT_ASC = '45'
					     THEN '450'
					     ELSE CD_CLM_DTL_STAT_CD
			     	  END AS VIEW_CD_CLM_DTL_STAT_CD
				FROM (
					SELECT
						OB.ORD_NO,
						OB.ST_ID,
						OB.ORD_STAT_CD,
						OB.ORD_MDA_CD,
						OB.MBR_NO,
						OB.MBR_GRD_CD,
						OB.ORD_NM,
						OB.ORDR_ID,
						OB.ORDR_EMAIL,
						OB.ORDR_TEL,
						OB.ORDR_MOBILE,
						OB.ORDR_IP,
						OB.ORD_ACPT_DTM,
						OB.ORD_CPLT_DTM,
						OB.OUTSIDE_ORD_NO,
						OB.CHNL_ID,
						OB.ORD_DTL_CNT,
						OB.ORD_PRCS_RST_CD,
						OB.ORD_PRCS_RST_MSG,
						OB.DATA_STAT_CD,
						(
							CASE WHEN COMP_GB_CD='10' THEN OB.DLVR_PRCS_TP_CD
							ELSE '10' END
						) AS DLVR_PRCS_TP_CD,
						OB.ORDR_SHOW_YN,
						FN_GET_ORDER_PAY_AMT(OB.ORD_NO) AS PAY_AMT_TOTAL,		/* 결제 금액 */
						FN_GET_ORDER_CANCEL_PSB_YN(OB.ORD_NO) AS CNC_PSB_YN,	/* 취소 가능 여부 */
						OD.ORD_DTL_SEQ,
						OD.ORD_DTL_STAT_CD,
						OD.GOODS_ID,
						OD.ITEM_NO,
						OD.ITEM_NM,
						OD.DEAL_GOODS_ID,
						OD.PAK_GOODS_ID,
						OD.COMP_GOODS_ID,
						OD.COMP_ITEM_ID,
						OD.ORD_QTY,
						OD.CNC_QTY,
						OD.RTN_QTY,
						OD.RMN_ORD_QTY,
						OD.GOODS_PRC_NO,
						OD.SALE_AMT,
						OD.PAY_AMT,
						OD.RMN_PAY_AMT,
						OD.CMS,
						OD.GOODS_CMSN_RT,
						OD.TAX_GB_CD,
						OD.ORD_SVMN,
						OD.SVMN_VLD_PRD_CD,
						OD.SVMN_VLD_PRD,
						OD.FREE_DLVR_YN,
						OD.HOT_DEAL_YN,
						OD.DLVRC_NO,
						OD.ORD_DLVRA_NO,
						OD.COMP_NO,
						OD.UP_COMP_NO,
						OD.MD_USR_NO,
						OD.GOODS_ESTM_NO,
						OD.GOODS_ESTM_REG_YN,
						OD.OUTSIDE_ORD_DTL_NO,
						OD.STL_NO,
						OD.DISP_CLSF_NO,
						OD.DLVR_CPLT_PIC_URL,
						OD.DLVR_SMS,
						OD.DLVR_CPLT_YN,
						OD.MKI_GOODS_YN,
						OD.MKI_GOODS_OPT_CONTENT,
						OD.RSV_GOODS_YN,
						OD.ISU_SCHD_PNT,
						(SELECT RTN_PSB_YN FROM GOODS_BASE WHERE GOODS_ID = OD.GOODS_ID) AS RTN_PSB_YN,	/* 반품 가능 여부 */
						FN_GET_ORDER_CLAIM_ING_RTN_YN(OD.ORD_NO, OD.ORD_DTL_SEQ) AS RTN_ING_YN,			/* 반품 진행 여무 */
						FN_GET_ORD_CLM_RTN_CPLT_QTY(OD.ORD_NO, OD.ORD_DTL_SEQ)  AS RTN_CPLT_QTY,		/* 반품 완료 수량 */
						FN_GET_ORDER_CLAIM_EXC_QTY(OD.ORD_NO, OD.ORD_DTL_SEQ)  AS CLM_EXC_ING_QTY,		/* 교환 진행 수량 */
						FN_GET_ORDER_CLAIM_ING_YN(OD.ORD_NO, OD.ORD_DTL_SEQ) AS CLM_ING_YN,				/* 클레임 진행 여부 */
						FN_GET_ORDER_DTL_PRMT_DC_AMT(OB.ORD_NO, OD.ORD_DTL_SEQ) AS PRMT_DC_AMT,			/* 프로모션 할인 금액 */
						FN_GET_ORDER_DTL_CP_DC_AMT(OB.ORD_NO, OD.ORD_DTL_SEQ) AS CP_DC_AMT,				/* 쿠폰 할인 금액 */
						<!-- FN_GET_ORDER_DLVR_NO(OD.ORD_NO, OD.ORD_DTL_SEQ, 'Y') AS DLVR_NO,				/* 배송 번호 */ -->
						FN_GET_CLM_DLVR_NO(CD.CLM_NO, MAX(CD.CLM_DTL_SEQ) OVER(PARTITION BY CD.CLM_NO, CD.ORD_NO, CD.ORD_DTL_SEQ), 'Y') AS DLVR_NO,	/*배송번호 - 교환배송쪽 배송번호를 가져오도록 수정 - 2021.05.17 by kek01*/					
						FN_GET_GOODS_STOCK(OD.GOODS_ID, OD.ITEM_NO) AS STK_QTY,
						OD.RMN_ORD_QTY -  FN_GET_ORD_CLM_RTN_CPLT_QTY(OD.ORD_NO, OD.ORD_DTL_SEQ) AS VLD_ORD_QTY, /* 유효 주문 수량 */
						GI.IMG_SEQ,
						GI.IMG_PATH,
						GI.RVS_IMG_PATH,
						CP.COMP_NM,
						CP.COMP_GB_CD, /* 업체 구분 코드 10:자사 */
						GB.ITEM_MNG_YN,
						GB.GOODS_NM,
						FN_GET_BRAND_NAME(GB.BND_NO) AS BND_NM, 			/* 노출 브랜드명 */
						FN_GET_BRAND_NAME_KO(GB.BND_NO) AS BND_NM_KO,		/* 브랜드명 국문 */
						(SELECT GOODS_NM FROM GOODS_BASE WHERE GOODS_ID = OD.PAK_GOODS_ID) AS PAK_GOODS_NM,
						CASE WHEN OD.PAK_GOODS_ID IS NULL THEN GB.GOODS_CSTRT_TP_CD
						ELSE (SELECT GOODS_CSTRT_TP_CD FROM GOODS_BASE WHERE GOODS_ID = OD.PAK_GOODS_ID)
						END AS GOODS_CSTRT_TP_CD,
						CASE WHEN OD.PAK_GOODS_ID IS NOT NULL THEN
						(
							SELECT GROUP_CONCAT(CONCAT_WS(' : ', GOG.SHOW_NM , AV.ATTR_VAL) ORDER BY GOG.DISP_PRIOR_RANK SEPARATOR '|')
							FROM GOODS_BASE GB,ITEM IT, GOODS_OPT_GRP GOG, GOODS_ATTRIBUTE GA, ITEM_ATTRIBUTE_VALUE IAV, ATTRIBUTE_VALUE AV
							WHERE GB.GOODS_ID = IT.GOODS_ID AND GA.GOODS_ID = GB.GOODS_ID
								AND GA.ATTR_NO = AV.ATTR_NO AND GOG.ATTR_NO = GA.ATTR_NO
								AND GOG.ATTR_NO = AV.ATTR_NO AND IAV.ITEM_NO = IT.ITEM_NO
								AND IAV.ATTR_NO = AV.ATTR_NO AND AV.ATTR_VAL_NO = IAV.ATTR_VAL_NO
								AND GB.GOODS_ID = OD.GOODS_ID AND GOG.GOODS_ID = OD.PAK_GOODS_ID
						)
						END AS PAK_ITEM_NM,
						CD.CLM_NO					AS	CD_CLM_NO,
						<!-- CD.CLM_DTL_SEQ				AS	CD_CLM_DTL_SEQ, -->
						<!-- CD.CLM_DTL_STAT_CD			AS	CD_CLM_DTL_STAT_CD, -->
						<!-- CD.CLM_QTY					AS	CD_CLM_QTY, -->
						CD.CLM_DTL_SEQ				AS	ORG_CD_CLM_DTL_SEQ,
						MIN(CD.CLM_DTL_SEQ) OVER(PARTITION BY CD.CLM_NO, CD.ORD_NO, CD.ORD_DTL_SEQ, CD.CLM_DTL_TP_CD) AS	CD_CLM_DTL_SEQ,
						MIN(CD.CLM_DTL_STAT_CD) OVER(PARTITION BY CD.CLM_NO, CD.ORD_NO, CD.ORD_DTL_SEQ, CD.CLM_DTL_TP_CD) AS	CD_CLM_DTL_STAT_CD,
						SUM(CD.CLM_QTY) OVER(PARTITION BY CD.CLM_NO, CD.ORD_NO, CD.ORD_DTL_SEQ, CD.CLM_DTL_TP_CD )         AS CD_CLM_QTY,
						CD.CLM_DTL_TP_CD			AS	CD_CLM_DTL_TP_CD,
						(SELECT USR_DFN3_VAL FROM CODE_DETAIL WHERE GRP_CD = 'CLM_DTL_STAT' AND DTL_CD = CD.CLM_DTL_STAT_CD) AS CLM_DTL_STAT_ASC,
						CD.CLM_RSN_CD				AS	CD_CLM_RSN_CD,
						CD.CLM_RSN_CONTENT			AS	CD_CLM_RSN_CONTENT,
						CD.CLM_DENY_RSN_CONTENT		AS	CD_CLM_DENY_RSN_CONTENT,
						CD.MBR_NO					AS	CD_MBR_NO,
						CD.ORD_NO					AS	CD_ORD_NO,
						CD.ORD_DTL_SEQ				AS	CD_ORD_DTL_SEQ,
						CD.ORG_CLM_NO				AS	CD_ORG_CLM_NO,
						CD.ORG_CLM_DTL_SEQ			AS	CD_ORG_CLM_DTL_SEQ,
						CD.GOODS_ID					AS	CD_GOODS_ID,
						CD.GOODS_NM					AS	CD_GOODS_NM,
						CD.DEAL_GOODS_ID			AS	CD_DEAL_GOODS_ID,
						CD.PAK_GOODS_ID				AS	CD_PAK_GOODS_ID,
						CD.DISP_CLSF_NO				AS	CD_DISP_CLSF_NO,
						CD.COMP_GOODS_ID			AS	CD_COMP_GOODS_ID,
						CD.COMP_ITEM_ID				AS	CD_COMP_ITEM_ID,
						CD.GOODS_PRC_NO				AS	CD_GOODS_PRC_NO,
						CD.SALE_AMT					AS	CD_SALE_AMT,
						CD.PAY_AMT					AS	CD_PAY_AMT,
						CD.RMN_PAY_AMT				AS	CD_RMN_PAY_AMT,
						CD.CMS						AS	CD_CMS,
						CD.GOODS_CMSN_RT			AS	CD_GOODS_CMSN_RT,
						CD.TAX_GB_CD				AS	CD_TAX_GB_CD,
						CD.DLVRC_NO					AS	CD_DLVRC_NO,
						CD.RTN_DLVRC_NO				AS	CD_RTN_DLVRC_NO,
						CD.DLVRA_NO					AS	CD_DLVRA_NO,
						CD.RTRNA_NO					AS	CD_RTRNA_NO,
						CD.DLVR_NO						CD_DLVR_NO,
						CD.COMP_NO					AS	CD_COMP_NO,
						CD.UP_COMP_NO				AS	CD_UP_COMP_NO,
						CD.CLM_CPLT_DTM				AS	CD_CLM_CPLT_DTM,
						CD.RTN_MTD_CD				AS	CD_RTN_MTD_CD,
						CD.OUTSIDE_CLM_DTL_NO		AS	CD_OUTSIDE_CLM_DTL_NO,
						CD.STL_NO					AS	CD_STL_NO,
						CD.DLVR_CPLT_PIC_URL		AS	CD_DLVR_CPLT_PIC_URL,
						CD.DLVR_SMS					AS	CD_DLVR_SMS,
						CD.TWC_TCKT					AS	CD_TWC_TCKT,
						CD.DLVR_CPLT_YN				AS	CD_DLVR_CPLT_YN,
						FN_GET_GOODS_STOCK(OD.GOODS_ID, OD.ITEM_NO) AS CD_STK_QTY,
						(CD.PAY_AMT * CD.CLM_QTY) + CD.RMN_PAY_AMT AS CD_RFD_PAY_TOT_AMT,
						CB.ST_ID					AS	CB_ST_ID,
						CB.CLM_TP_CD				AS	CB_CLM_TP_CD,
						CB.CLM_STAT_CD				AS	CB_CLM_STAT_CD,
						CB.ORD_MDA_CD				AS	CB_ORD_MDA_CD,
						CB.CHNL_ID					AS	CB_CHNL_ID,
						CB.SWAP_YN					AS	CB_SWAP_YN,
						CB.ACPT_DTM					AS	CB_ACPT_DTM,
						CB.CNC_DTM					AS	CB_CNC_DTM,
						CB.CPLT_DTM					AS	CB_CPLT_DTM,
						CB.ACPTR_NO					AS	CB_ACPTR_NO,
						CB.CNCR_NO					AS	CB_CNCR_NO,
						CB.CPLTR_NO					AS	CB_CPLTR_NO,
						CB.OUTSIDE_CLM_NO			AS	CB_OUTSIDE_CLM_NO,
						CB.ORDR_SHOW_YN				AS	CB_ORDR_SHOW_YN,
						CASE
							WHEN CB.CLM_TP_CD = '30'
							THEN ( SELECT CDT.ITEM_NM FROM CLAIM_DETAIL CDT WHERE CDT.CLM_NO = CD.CLM_NO ORDER BY CDT.CLM_DTL_SEQ DESC LIMIT 1)
							ELSE CD.ITEM_NM
						END AS CD_ITEM_NM,
						CASE
							WHEN CB.CLM_TP_CD = '30'
							THEN ( SELECT CDT.ITEM_NO FROM CLAIM_DETAIL CDT WHERE CDT.CLM_NO = CD.CLM_NO ORDER BY CDT.CLM_DTL_SEQ DESC LIMIT 1)
							ELSE CD.ITEM_NO
						END AS CD_ITEM_NO,
						(SELECT DISP_CLSF_NM FROM DISPLAY_CATEGORY WHERE DISP_CLSF_NO = CD.DISP_CLSF_NO) AS CD_DISP_CLSF_NM,
						(
							SELECT IFNULL(SUM(APL_AMT), 0)
							FROM APL_BNFT AB
							WHERE AB.ORD_NO = OD.ORD_NO AND AB.ORD_DTL_SEQ = OD.ORD_DTL_SEQ AND AB.APL_BNFT_GB_CD = '20' AND AB.APL_BNFT_TP_CD  = '210'
						) AS CD_CP_DC_AMT,		/* 상품 쿠폰 할인 금액 */
						(
							SELECT	IFNULL(SUM(APL_AMT), 0)
							FROM APL_BNFT AB
							WHERE	AB.ORD_NO = OD.ORD_NO AND AB.ORD_DTL_SEQ = OD.ORD_DTL_SEQ AND AB.APL_BNFT_GB_CD = '20' AND AB.APL_BNFT_TP_CD  = '220'
						) AS CD_CART_CP_DC_AMT,	/** 장바구니 쿠폰 할인 금액 */
						(SELECT BND_NM_KO FROM BRAND_BASE WHERE BND_NO = (SELECT BND_NO FROM GOODS_BASE WHERE GOODS_ID = CD.GOODS_ID)) AS CD_BND_NM_KO,	/* 브랜드명 국문 */
						(
							 SELECT GROUP_CONCAT( GB.GOODS_NM, ',')
							 FROM GOODS_BASE GB
							 WHERE GB.GOODS_ID IN (
								SELECT ODC.CSTRT_GOODS_ID
								FROM ORD_DTL_CSTRT ODC
								INNER JOIN ORDER_DETAIL ODD ON ODC.ORD_NO = ODD.ORD_NO AND ODC.ORD_DTL_SEQ = ODD.ORD_DTL_SEQ
								WHERE ODC.ORD_NO  = OD.ORD_NO AND ODC.CSTRT_GOODS_GB_CD = '30'
								ORDER BY ODD.ORD_DTL_SEQ ASC
							)
						) AS CD_SUB_GOODS_NM, /*사은품명*/
						CASE WHEN (SELECT COMP_GB_CD FROM COMPANY_BASE CB WHERE CB.COMP_NO = CD.COMP_NO) = '20' THEN '10'
						ELSE (SELECT DLVR_PRCS_TP_CD FROM ORDER_BASE X1 WHERE X1.ORD_NO = CD.ORD_NO)
						END CD_DLVR_PRCS_TP_CD,
						ROW_NUMBER() OVER(PARTITION BY OD.ORD_NO, OD.ORD_DTL_SEQ, CD.CLM_NO ORDER BY CD.CLM_DTL_SEQ DESC) AS CLM_DTL_SEQ_ORDER,
						CASE WHEN CD.CLM_DTL_TP_CD IN ('10', '20') THEN 'Y'
						     WHEN CD.CLM_DTL_TP_CD = '30' 
						     THEN CASE WHEN MIN(CD.CLM_DTL_STAT_CD) OVER(PARTITION BY CD.CLM_NO, CD.ORD_NO, CD.ORD_DTL_SEQ) = '310'
						     		   THEN CASE WHEN MAX(CD.CLM_DTL_STAT_CD) OVER(PARTITION BY CD.CLM_NO, CD.ORD_NO, CD.ORD_DTL_SEQ) = 410
						     		   			 THEN 'N'
						     		   			 ELSE 'Y'
						     		   		 END
						     		   WHEN MIN(CD.CLM_DTL_STAT_CD) OVER(PARTITION BY CD.CLM_NO, CD.ORD_NO, CD.ORD_DTL_SEQ) = '360'
						     		   THEN CASE WHEN MAX(CD.CLM_DTL_STAT_CD) OVER(PARTITION BY CD.CLM_NO, CD.ORD_NO, CD.ORD_DTL_SEQ) = 410
						     		   			 THEN 'Y'
						     		   			 ELSE 'N'
						     		   		 END
						     		   WHEN MIN(CD.CLM_DTL_STAT_CD) OVER(PARTITION BY CD.CLM_NO, CD.ORD_NO, CD.ORD_DTL_SEQ) = '350'
						     		   THEN 'Y'
						     		   ELSE 'Y'
						     	   END
						     WHEN CD.CLM_DTL_TP_CD = '40' 
						     THEN CASE WHEN MIN(CD.CLM_DTL_STAT_CD) OVER(PARTITION BY CD.CLM_NO, CD.ORD_NO, CD.ORD_DTL_SEQ) = '310'
						     		   THEN CASE WHEN MAX(CD.CLM_DTL_STAT_CD) OVER(PARTITION BY CD.CLM_NO, CD.ORD_NO, CD.ORD_DTL_SEQ) = 410
						     		   			 THEN 'Y'
						     		   			 ELSE 'N'
						     		   		 END
				     		   		   WHEN MIN(CD.CLM_DTL_STAT_CD) OVER(PARTITION BY CD.CLM_NO, CD.ORD_NO, CD.ORD_DTL_SEQ) = '360'
						     		   THEN CASE WHEN MAX(CD.CLM_DTL_STAT_CD) OVER(PARTITION BY CD.CLM_NO, CD.ORD_NO, CD.ORD_DTL_SEQ) = 410
						     		   			 THEN 'N'
						     		   			 ELSE 'Y'
						     		   		 END
						     		   WHEN MIN(CD.CLM_DTL_STAT_CD) OVER(PARTITION BY CD.CLM_NO, CD.ORD_NO, CD.ORD_DTL_SEQ) = '350'
						     		   THEN 'N'
						     		   ELSE 'N'
						     	   END
						     ELSE 'N'
						END AS VIEW_CLM_YN
					FROM (
						SELECT
							ORD_NO,
							ST_ID,
							ORD_STAT_CD,
							ORD_MDA_CD,
							MBR_NO,
							MBR_GRD_CD,
							ORD_NM,
							ORDR_ID,
							ORDR_EMAIL,
							ORDR_TEL,
							ORDR_MOBILE,
							ORDR_IP,
							ORD_ACPT_DTM,
							ORD_CPLT_DTM,
							OUTSIDE_ORD_NO,
							CHNL_ID,
							ORD_DTL_CNT,
							ORD_PRCS_RST_CD,
							ORD_PRCS_RST_MSG,
							DATA_STAT_CD,
							DLVR_PRCS_TP_CD,
							ORDR_SHOW_YN
						FROM
							ORDER_BASE OB
						WHERE 
							ORD_NO IN (
								SELECT
									CB.ORD_NO
								FROM CLAIM_BASE CB
								JOIN CLAIM_DETAIL CD ON (CB.CLM_NO  = CD.CLM_NO)
								<trim prefix="WHERE" prefixOverrides="AND |OR ">
								AND CD.CLM_NO = #{clmNo}
								<if test='clmTpCd != null and clmTpCd != ""'>
								AND CB.CLM_TP_CD = #{clmTpCd}
								</if>
								AND CASE
									WHEN CB.SWAP_YN = '${@framework.common.constants.CommonConstants@COMM_YN_Y}' THEN CD.CLM_DTL_TP_CD = '${@framework.common.constants.CommonConstants@CLM_DTL_TP_40}'
									WHEN '${@framework.common.constants.CommonConstants@CLM_DTL_STAT_360}' IN (SELECT CLM_DTL_STAT_CD FROM CLAIM_DETAIL WHERE CLM_NO = CB.CLM_NO)
										THEN CD.CLM_DTL_TP_CD = '${@framework.common.constants.CommonConstants@CLM_DTL_TP_40}'
									ELSE CD.CLM_DTL_TP_CD IN ('${@framework.common.constants.CommonConstants@CLM_TP_10}'
																, '${@framework.common.constants.CommonConstants@CLM_TP_20}'
																, '${@framework.common.constants.CommonConstants@CLM_TP_30}')
								END
								</trim>
							)
					) OB
					INNER JOIN ORDER_DETAIL OD ON (OB.ORD_NO = OD.ORD_NO)
					INNER JOIN GOODS_BASE GB ON (OD.GOODS_ID = GB.GOODS_ID)
					INNER JOIN GOODS_IMG GI ON (OD.GOODS_ID = GI.GOODS_ID AND GI.DLGT_YN = 'Y')
					INNER JOIN COMPANY_BASE CP ON (OD.COMP_NO = CP.COMP_NO )
					LEFT JOIN CLAIM_DETAIL CD ON (OD.ORD_NO = CD.ORD_NO AND OD.ORD_DTL_SEQ = CD.ORD_DTL_SEQ)
					LEFT JOIN CLAIM_BASE CB ON CB.CLM_NO = CD.CLM_NO AND CB.CLM_STAT_CD &lt;> '40'
					<trim prefix="WHERE" prefixOverrides="AND |OR ">
						<if test='clmTpCd != null and clmTpCd != ""'>
						AND CB.CLM_TP_CD = #{clmTpCd}
						</if>
					</trim>
				) OBB
				WHERE OBB.VIEW_CLM_YN = 'Y'
				  AND OBB.ORG_CD_CLM_DTL_SEQ = CD_CLM_DTL_SEQ
			)OBB
			WHERE 
				LIST_DELIMITER = 'CLAIM'
		) LIST
		WHERE CD_CLM_NO = #{clmNo}
		ORDER BY ORD_ACPT_DTM DESC, COMP_GB_CD, COMP_NO, IF(CD_CLM_NO = ORD_NO, 'Z00000000000000000', CD_CLM_NO) DESC, FORCE_DTL_STAT, ORD_DTL_SEQ
	</select>
	
	<update id="updateClaimDetailStatus">
		<!--
			Query Name : claimDetail.updateClaimDetailStatus
			Description : 클레임 상세 상태 수정
		-->
		UPDATE	CLAIM_DETAIL SET
					SYS_UPDR_NO				= #{sysUpdrNo}			/* 시스템 수정자 번호 */
					, SYS_UPD_DTM			= NOW()					/* 시스템 수정 일시 */
					, CLM_DTL_STAT_CD			= #{clmDtlStatCd}			/* 클레임 상태 코드 */
					<if test='clmDtlStatCd.equals("120") or clmDtlStatCd.equals("250") or clmDtlStatCd.equals("260") or clmDtlStatCd.equals("350") or clmDtlStatCd.equals("360") or clmDtlStatCd.equals("450")'>
					, CLM_CPLT_DTM = NOW()
					</if>
					<if test="clmDenyRsnContent != null">
					, CLM_DENY_RSN_CONTENT = #{clmDenyRsnContent}	
					</if>
		WHERE	1 = 1
		AND		CLM_NO				= #{clmNo}
		<if test="clmDtlSeq != null">
		AND		CLM_DTL_SEQ			= #{clmDtlSeq}
		</if>
		<!-- 2021.03.29 by kek01 -->
		<if test='clmDtlAllDlvrCpltYn != null and clmDtlAllDlvrCpltYn eq "Y"'>
		AND     0 = (SELECT COUNT(DLVR_NO)
					   FROM DELIVERY D2 
					  WHERE D2.DLVR_NO IN (
					  		SELECT CDCDM.DLVR_NO 
					 		  FROM CLM_DTL_CSTRT_DLVR_MAP CDCDM 
					 		 WHERE CDCDM.CLM_DTL_CSTRT_NO IN (
					 				SELECT CDC.CLM_DTL_CSTRT_NO FROM CLM_DTL_CSTRT CDC WHERE CDC.CLM_NO = #{clmNo} AND CDC.CLM_DTL_SEQ = #{clmDtlSeq}
					 		       )
					        )
					    AND D2.DLVR_CPLT_DTM IS NULL
					)
		</if>
	</update>

	<update id="updateClaimDetailDlvrcNo">
		<!--
			Query Name : claimDetail.updateClaimDetailDlvrcNo
			Description : 클레임 배송비 번호 설정
		-->
		UPDATE	CLAIM_DETAIL SET
					SYS_UPDR_NO		= #{sysUpdrNo}		/* 시스템 수정자 번호 */
					, SYS_UPD_DTM		= NOW()				/* 시스템 수정 일시 */
					, DLVRC_NO			= #{dlvrcNo}			/* 배송비 번호 */
		WHERE	1 = 1
		AND		CLM_NO				= #{clmNo}
		AND		ORD_DTL_SEQ IN (
											SELECT 	ORD_DTL_SEQ
											FROM		ORDER_DETAIL
											WHERE	ORD_NO = (SELECT ORD_NO FROM CLAIM_BASE WHERE CLM_NO = #{clmNo})
											AND		DLVRC_NO = #{orgDlvrcNo}
				   						 )
	</update>

	<select id="getClaimDetail" resultType="biz.app.claim.model.ClaimDetailVO" >
		<!--
			Query Name : claimDetail.getClaimDetail
			Description : 클레임 상세 조회
		-->
		SELECT	/* QUERYID(claimDetail.getClaimDetail) */
					CD.CLM_NO						/* 클레임 번호 */
					, CD.CLM_DTL_SEQ				/* 클레임 상세 순번 */
					, CD.CLM_DTL_TP_CD			/* 클레임 상세 유형 코드 */
					, CD.CLM_DTL_STAT_CD		/* 클레임 상세 상태 코드 */
					, CB.CLM_STAT_CD		/* 클레임 상태 코드 */
					, CD.CLM_RSN_CD				/* 클레임 사유 코드 */
					, CD.MBR_NO					/* 회원 번호 */
					, CD.ORD_NO					/* 주문 번호 */
					, CD.ORD_DTL_SEQ				/* 주문 상세 순번 */
					, CD.ORG_CLM_NO				/* 원 클레임 번호 */
					, CD.ORG_CLM_DTL_SEQ		/* 원 클레임 상세 순번 */
					, CD.GOODS_ID					/* 상품 아이디 */
					, CD.GOODS_NM				/* 상품 명 */
					, CD.ITEM_NO					/* 단품 번호 */
					, CD.ITEM_NM					/* 단품 명 */
					, CD.DEAL_GOODS_ID			/* 딜 상품 아이디 */
					, CD.DISP_CLSF_NO				/* 전시 분류 번호 */
					, CD.COMP_GOODS_ID			/* 업체 상품 아이디 */
					, CD.COMP_ITEM_ID			/* 업체 단품 아이디 */
					, CD.SALE_AMT					/* 판매 금액 */
					, CD.PAY_AMT					/* 결제 금액 */
					, CD.CLM_QTY					/* 클레임 수량 */
					, CD.CMS							/* 수수료 */
					, CD.GOODS_CMSN_RT			/* 상품수수료율 */
					, CD.TAX_GB_CD					/* 과세 구분 코드 */
					, CD.DLVRC_NO					/* 배송비 번호 */
					, CD.RTN_DLVRC_NO			/* 회수비 번호 */
					, CD.DLVRA_NO					/* 배송지 번호 */
					, CD.RTRNA_NO					/* 회수지 번호 */
					, CD.DLVR_NO					/* 배송 번호 */
					, CD.COMP_NO					/* 업체 번호 */
					, CD.UP_COMP_NO				/* 상위 업체 번호 */
					, CD.CLM_CPLT_DTM			/* 클레임 완료 일시 */
					, CD.RTN_MTD_CD				/* 회수 방법 코드 */
					, CD.OUTSIDE_CLM_DTL_NO	/* 외부 클레임 상세 번호 */
					, CD.SYS_REGR_NO				/* 시스템 등록자 번호 */
					, CD.SYS_REG_DTM				/* 시스템 등록 일시 */
					, CD.SYS_UPDR_NO				/* 시스템 수정자 번호 */
					, CD.SYS_UPD_DTM				/* 시스템 수정 일시 */
					, FN_GET_USER_NAME(CD.SYS_REGR_NO) AS SYS_REGR_NM	/* 시스템 등록자 */
					, FN_GET_USER_NAME(CD.SYS_UPDR_NO) AS SYS_UPDR_NM	/* 시스템 수정자 */
					, GB.GOODS_CSTRT_TP_CD  /* 상품 구성 유형 코드 */
		FROM		CLAIM_DETAIL CD
					INNER JOIN CLAIM_BASE CB ON (CB.CLM_NO	 = CD.CLM_NO	)	
					INNER JOIN GOODS_BASE GB ON GB.GOODS_ID = CD.GOODS_ID
		WHERE	1 = 1
		<if test="clmNo != null and clmNo != ''">
		AND		CD.CLM_NO			= #{clmNo}
		</if>
		<if test="clmDtlSeq != null">
		AND		CD.CLM_DTL_SEQ = #{clmDtlSeq}
		</if>
		<if test="ordNo != null and ordNo != ''">
		AND		CD.ORD_NO			= #{ordNo}
		</if>
		<if test="ordDtlSeq != null and ordDtlSeq != ''">
		AND		CD.ORD_DTL_SEQ			= #{ordDtlSeq}
		</if>
		<if test="clmDtlTpCd != null and clmDtlTpCd != ''">
		AND		CD.CLM_DTL_TP_CD		= #{clmDtlTpCd}
		</if>
	</select>
	
	<select id="listClaimDetailImage" resultType="biz.app.claim.model.ClaimDetailVO" >
		<!--
			Query Name : claimDetail.listClaimDetailImage
			Description : 클레임 상세사유 이미지 조회
		-->
		SELECT	/* QUERYID(claimDetail.listClaimDetailImage) */
				CDRI.CLM_NO				/* 클레임 번호 */   
				, CDRI.CLM_DTL_SEQ		/* 클레임 상세 순번 */
				, CDRI.CLM_DTL_RSN_SEQ	/* 클레임 상세 사유 순번 */
				, CDRI.RSN_IMG_PATH		/* 사유 이미지 PATH */
				, CDRI.DEL_YN			/* 삭제 여부 */
				, CDRI.SYS_REGR_NO		/* 시스템 등록자 번호 */
				, CDRI.SYS_REG_DTM		/* 시스템 등록자 일시 */
		FROM	CLAIM_DTL_RSN_IMG	CDRI	/* 클레임 상세사유 이미지 */
		WHERE	1 = 1
		AND 	CDRI.DEL_YN = 'N'
		<if test="clmNo != null and clmNo != ''">
		AND		CDRI.CLM_NO			= #{clmNo}
		</if>
		<if test="clmDtlSeq != null">
		AND		CDRI.CLM_DTL_SEQ = #{clmDtlSeq}
		</if>
	</select>

</mapper>
