<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
	주문 공통
	일자 : 2017. 02. 22.
	작성자 : snw
-->

<mapper namespace="order">

    <select id="pageOrderOrg_old" resultType="biz.app.order.model.OrderListVO">
		<!--
			Query Name : order.pageOrderOrg
			Description : 원 주문 목록 페이징 조회
		-->
        SELECT 	/* order.pageOrderOrg */
        			ODM.ORD_NO
	                , ODM.ST_ID
	                , SSI.ST_NM
	                , ODM.MBR_NO
	                , ODM.ORD_STAT_CD
	                , ODM.ORD_MDA_CD
	                , ODM.CHNL_ID
	                , CSI.CHNL_NM
	                , ODM.ORD_NM
	                , ODM.ORDR_ID
	                , ODM.ORDR_TEL
	                , ODM.ORDR_MOBILE
	                , ODM.ORDR_EMAIL
	                , ODM.ORD_ACPT_DTM
	                , ODM.ORD_CPLT_DTM
	                , ODM.OUTSIDE_ORD_NO
	                , ODM.ORD_DTL_CNT
	                , ODM.ORD_DTL_SEQ
					, ODM.ORD_DTL_STAT_CD
					, IF(ODM.RMN_ORD_QTY = 0, '주문취소', (SELECT DTL_NM FROM CODE_DETAIL WHERE GRP_CD = 'ORD_DTL_STAT' AND DTL_CD = ODM.ORD_DTL_STAT_CD)) ORD_DTL_STAT_CD_NM
					, ODM.GOODS_ID
					, ODM.GOODS_NM
					, ODM.ITEM_NO
					, ODM.ITEM_NM
					, ODM.ORD_QTY
					, ODM.CNC_QTY
					, ODM.RTN_QTY
					, ODM.RMN_ORD_QTY
					, ODM.RTN_CPLT_QTY		/* 반품 완료 수량 */
					, ODM.RTN_QTY - ODM.RTN_CPLT_QTY	 AS RTN_ING_QTY	/* 반품 진행 수량 */
					, FN_GET_ORDER_CLAIM_EXC_QTY(ODM.ORD_NO, ODM.ORD_DTL_SEQ) AS CLM_EXC_ING_QTY	/* 클레임 교환 진행 수량 */
					, ODM.RMN_ORD_QTY -  ODM.RTN_CPLT_QTY AS VLD_ORD_QTY /* 유효 주문 수량 */
					, FN_GET_ORDER_CLAIM_ING_YN(ODM.ORD_NO,  ODM.ORD_DTL_SEQ) AS CLM_ING_YN /* 클레임 진행 여부 */
					, ODM.SALE_AMT
					, ODM.PAY_AMT
					, ODM.RMN_ORD_QTY * ODM.PAY_AMT AS PAY_SUM_AMT
					, ODM.COMP_NO
					, ODM.COMP_GB_CD
					, ODM.COMP_NM
					, ODM.COMP_GOODS_ID
					, ODM.COMP_ITEM_ID
					, ODM.DISP_CLSF_NO
					, ODM.DLVR_NO
					, ODM.DLVRC_NO
					, ODM.ORD_DLVRA_NO
	                , ODM.ADRS_NM
	                , ODM.TEL
	                , ODM.MOBILE
	                , ODM.ROAD_ADDR
	                , ODM.ROAD_DTL_ADDR
	                , BB.BND_NM_KO
 		FROM		(
					 SELECT	OB.ORD_NO
				                , OB.ST_ID
				                , OB.MBR_NO
				                , OB.ORD_STAT_CD
				                , OB.ORD_MDA_CD
				                , OB.CHNL_ID
				                , OB.ORD_NM
				                , OB.ORDR_ID
				                , OB.ORDR_TEL
				                , OB.ORDR_MOBILE
				                , OB.ORDR_EMAIL
				                , OB.ORD_ACPT_DTM
				                , OB.ORD_CPLT_DTM
				                , OB.OUTSIDE_ORD_NO
				                , OB.ORD_DTL_CNT
				                , OD.ORD_DTL_SEQ
								, OD.ORD_DTL_STAT_CD
								, OD.GOODS_ID
								, OD.GOODS_NM
								, OD.ITEM_NO
								, OD.ITEM_NM
								, OD.ORD_QTY
								, OD.CNC_QTY
								, OD.RTN_QTY
								, OD.RMN_ORD_QTY
								, FN_GET_ORD_CLM_RTN_CPLT_QTY(OD.ORD_NO, OD.ORD_DTL_SEQ) AS RTN_CPLT_QTY /* 반품 완료 수량 */
								, OD.SALE_AMT
								, OD.PAY_AMT
								, OD.COMP_NO
								, CP.COMP_GB_CD
								, CP.COMP_NM
								, OD.COMP_GOODS_ID
								, OD.COMP_ITEM_ID
								, OD.DISP_CLSF_NO
								, OD.DLVR_NO
								, OD.DLVRC_NO
								, OD.ORD_DLVRA_NO
				                , ODA.ADRS_NM
				                , ODA.TEL
				                , ODA.MOBILE
				                , ODA.ROAD_ADDR
				                , ODA.ROAD_DTL_ADDR
					FROM		ORDER_BASE OB
				                , ORDER_DETAIL OD
			                  	, ORDER_DLVRA ODA
			                  	, COMPANY_BASE CP
					WHERE	OB.ORD_NO = OD.ORD_NO
			        AND    	OD.ORD_DLVRA_NO = ODA.ORD_DLVRA_NO
			        AND     OD.COMP_NO = CP.COMP_NO
					<include refid="order.pageOrderOrgWhere" />
			        ORDER BY OB.ORD_ACPT_DTM DESC, OB.ORD_NO, OD.ORD_DTL_SEQ ASC
			        <include refid="bizCommon.pageSql" />
					) ODM
        			, ST_STD_INFO SSI
        			, CHNL_STD_INFO CSI
        			, GOODS_BASE GB
				LEFT OUTER JOIN BRAND_BASE BB ON (BB.BND_NO = GB.BND_NO)
		WHERE	ODM.ST_ID = SSI.ST_ID
        AND		ODM.CHNL_ID = CSI.CHNL_ID
        AND     GB.GOODS_ID = ODM.GOODS_ID
        ORDER BY ODM.ORD_ACPT_DTM DESC, ODM.ORD_NO, ODM.ORD_DTL_SEQ ASC
    </select>
    
    <resultMap type="biz.app.order.model.OrderListVO" id="pageOrderOrgMap">
    	<result property="dlvrcNo" column="DLVRC_NO"/>
    	
    	<collection property="orderDetalListVO" ofType="biz.app.order.model.OrderListVO">
    		<result property="ordNo" column="ORD_NO"/>
			<result property="ordDtlSeq" column="ORD_DTL_SEQ"/>
    		<result property="stId" column="ST_ID"/>
			<result property="stNm" column="ST_NM"/>
			<result property="ordMdaCd" column="ORD_MDA_CD"/>
			<result property="ordAcptDtm" column="ORD_ACPT_DTM"/>
			<result property="ordCpltDtm" column="ORD_CPLT_DTM"/>
			<result property="ordrId" column="ORDR_ID"/>
			<result property="ordNm" column="ORD_NM"/>
			<result property="ordrMobile" column="ORDR_MOBILE"/>
			<result property="compGbCd" column="COMP_GB_CD"/>
			<result property="compNm" column="COMP_NM"/>
			<result property="bndNmKo" column="BND_NM_KO"/>
			<result property="goodsNm" column="GOODS_NM"/>
			<result property="goodsId" column="GOODS_ID"/>
			<result property="itemNm" column="ITEM_NM"/>
			<result property="ordDtlStatCd" column="ORD_DTL_STAT_CD"/>
			<result property="ordDtlStatCdNm" column="ORD_DTL_STAT_CD_NM"/>
			<result property="ordDtlStatNm" column="ORD_DTL_STAT_NM"/>
			<result property="clmIngYn" column="CLM_ING_YN"/>
			<result property="ordQty" column="ORD_QTY"/>
			<result property="cncQty" column="CNC_QTY"/>
			<result property="rmnOrdQty" column="RMN_ORD_QTY"/>
			<result property="rtnQty" column="RTN_QTY"/>
			<result property="rtnCpltQty" column="RTN_CPLT_QTY"/>
			<result property="rtnIngQty" column="RTN_ING_QTY"/>
			<result property="clmExcIngQty" column="CLM_EXC_ING_QTY"/>
			<result property="saleAmt" column="SALE_AMT"/>
			<result property="prmtDcAmt" column="PRMT_DC_AMT"/>
			<result property="cpDcAmt" column="CP_DC_AMT"/>
			<result property="paySumAmt" column="PAY_SUM_AMT"/>
			<result property="adrsNm" column="ADRS_NM"/>
			<result property="mobile" column="MOBILE"/>
			<result property="roadAddr" column="ROAD_ADDR"/>
			<result property="roadDtlAddr" column="ROAD_DTL_ADDR"/>
			<result property="compNo" column="COMP_NO"/>
			<result property="mbrNo" column="MBR_NO"/>
			<result property="ordStatCd" column="ORD_STAT_CD"/>
			<result property="chnlId" column="CHNL_ID"/>
			<result property="chnlNm" column="CHNL_NM"/>
			<result property="ordrTel" column="ORDR_TEL"/>
			<result property="ordrEmail" column="ORDR_EMAIL"/>
			<result property="outsideOrdNo" column="OUTSIDE_ORD_NO"/>
			<result property="ordDtlCnt" column="ORD_DTL_CNT"/>
			<result property="itemNo" column="ITEM_NO"/>
			<result property="vldOrdQty" column="VLD_ORD_QTY"/>
			<result property="payAmt" column="PAY_AMT"/>
			<result property="compGoodsId" column="COMP_GOODS_ID"/>
			<result property="compItemId" column="COMP_ITEM_ID"/>
			<result property="dispClsfNo" column="DISP_CLSF_NO"/>
			<result property="dlvrNo" column="DLVR_NO"/>
			<result property="ordDlvraNo" column="ORD_DLVRA_NO"/>
			<result property="tel" column="TEL"/>
			<result property="realDlvrAmt" column="REAL_DLVR_AMT"/>
			<result property="rtnDlvrAmt" column="RTN_DLVR_AMT"/>
			<result property="goodsCstrtTpCd" column="GOODS_CSTRT_TP_CD"/>
			<result property="dlvrPrcsTpCd" column="DLVR_PRCS_TP_CD"/>
			<result property="mkiGoodsYn" column="MKI_GOODS_YN"/>
			<result property="rsvGoodsYn" column="RSV_GOODS_YN"/>
			<result property="frbGoodsYn" column="FRB_GOODS_YN"/>
			<result property="pakGoodsYn" column="PAK_GOODS_YN"/>
			<result property="ordNoPayAmt" column="ORD_NO_PAY_AMT"/>
			<result property="compTpCd" column="COMP_TP_CD"/>
    	</collection>
    </resultMap>

    <select id="pageOrderOrg" resultMap="pageOrderOrgMap">
		<!--
			Query Name : order.pageOrderOrg
			Description : 원 주문 목록 페이징 조회
		-->
		SELECT		/* order.pageOrderOrg */
			ORD_INFO.*
			, CONCAT(ORD_INFO.ORD_NO,' (', FORMAT((SELECT SUM(PAY_AMT) FROM PAY_BASE 
													WHERE ORD_NO = ORD_INFO.ORD_NO 
													  AND ORD_CLM_GB_CD = '${@framework.common.constants.CommonConstants@ORD_CLM_GB_10}'
													  AND PAY_GB_CD = '${@framework.common.constants.CommonConstants@PAY_GB_10}' ), 0),'원)' ) AS ORD_NO_PAY_AMT
		FROM(
			SELECT
				ODM.ORD_NO
				, ODM.ST_ID
				, SSI.ST_NM
				, ODM.MBR_NO
				, ODM.ORD_STAT_CD
				, ODM.ORD_MDA_CD
				, ODM.CHNL_ID
				, CSI.CHNL_NM
				, ODM.ORD_NM
				, ODM.ORDR_ID
				, ODM.ORDR_TEL
				, ODM.ORDR_MOBILE
				, ODM.ORDR_EMAIL
				, ODM.ORD_ACPT_DTM
				, ODM.ORD_CPLT_DTM
				, ODM.OUTSIDE_ORD_NO
				, ODM.ORD_DTL_CNT
				, ODM.ORD_DTL_SEQ
				, ODM.ORD_DTL_STAT_CD
				, IF(ODM.RMN_ORD_QTY = 0, '주문취소', (SELECT DTL_NM FROM CODE_DETAIL WHERE GRP_CD = 'ORD_DTL_STAT' AND DTL_CD = ODM.ORD_DTL_STAT_CD)) ORD_DTL_STAT_CD_NM
				, IF(ODM.RMN_ORD_QTY = 0, '주문취소', (SELECT DTL_NM FROM CODE_DETAIL WHERE GRP_CD = 'ORD_DTL_STAT' AND DTL_CD = ODM.ORD_DTL_STAT_CD)) ORD_DTL_STAT_NM
				, ODM.GOODS_ID
				, ODM.GOODS_NM
				, ODM.ITEM_NO
				, ODM.ITEM_NM
				, ODM.ORD_QTY
				, ODM.CNC_QTY
				, ODM.RTN_QTY
				, ODM.RMN_ORD_QTY
				, FN_GET_ORD_CLM_RTN_CPLT_QTY(ODM.ORD_NO, ODM.ORD_DTL_SEQ) AS RTN_CPLT_QTY							/* 반품 완료 수량 */
				, ODM.RTN_QTY - FN_GET_ORD_CLM_RTN_CPLT_QTY(ODM.ORD_NO, ODM.ORD_DTL_SEQ) AS RTN_ING_QTY									/* 반품 진행 수량 */
				, FN_GET_ORDER_CLAIM_EXC_QTY(ODM.ORD_NO, ODM.ORD_DTL_SEQ) AS CLM_EXC_ING_QTY	/* 클레임 교환 진행 수량 */
				, ODM.RMN_ORD_QTY - FN_GET_ORD_CLM_RTN_CPLT_QTY(ODM.ORD_NO, ODM.ORD_DTL_SEQ) AS VLD_ORD_QTY 							/* 유효 주문 수량 */
				, FN_GET_ORDER_CLAIM_ING_YN(ODM.ORD_NO, ODM.ORD_DTL_SEQ) AS CLM_ING_YN 			/* 클레임 진행 여부 */
				, ODM.SALE_AMT
				, ODM.PAY_AMT
				, (ODM.RMN_ORD_QTY - FN_GET_ORD_CLM_RTN_CPLT_QTY(ODM.ORD_NO, ODM.ORD_DTL_SEQ))* ODM.PAY_AMT + CASE WHEN (ODM.RMN_ORD_QTY - FN_GET_ORD_CLM_RTN_CPLT_QTY(ODM.ORD_NO, ODM.ORD_DTL_SEQ)) > 0 THEN ODM.RMN_PAY_AMT ELSE 0 END  AS PAY_SUM_AMT
				, ODM.COMP_NO
				, ODM.COMP_GB_CD
				, ODM.COMP_NM
				, ODM.COMP_GOODS_ID				/* 업체상품 아이디  */
				, ODM.COMP_ITEM_ID				/* 업체단품 아이디 */
				, ODM.DISP_CLSF_NO				/* 전시 분류 번호 */
				, ODM.DLVR_NO					/* 배송 번호 */
				, ODM.ORD_DLVRA_NO				/* 주문 배송지 번호 */
				, ODM.ADRS_NM
				, ODM.TEL
				, ODM.MOBILE
				, ODM.ROAD_ADDR
				, ODM.ROAD_DTL_ADDR
				, BB.BND_NM_KO
				, FN_GET_ORDER_DTL_PRMT_DC_AMT(ODM.ORD_NO, ODM.ORD_DTL_SEQ) AS PRMT_DC_AMT		/* 프로모션 할인 금액 */
				, FN_GET_ORDER_DTL_CP_DC_AMT(ODM.ORD_NO, ODM.ORD_DTL_SEQ) AS CP_DC_AMT			/* 쿠폰 할인 금액 */
				, ODM.DLVRC_NO									/* 배송비 번호 */
				, ODM.REAL_DLVR_AMT								/* 실배송비 */
				, IFNULL(ODM.RTN_DLVR_AMT, 0) AS RTN_DLVR_AMT 	/* 회수비 */
				, GB.GOODS_CSTRT_TP_CD
				, ODM.DLVR_PRCS_TP_CD
				, ODM.COMP_TP_CD
				, IFNULL(ODM.MKI_GOODS_YN, 'N') AS MKI_GOODS_YN
				, IFNULL(ODM.RSV_GOODS_YN, 'N') AS RSV_GOODS_YN
				, IF(ODM.PAK_GOODS_ID IS NULL, 'N', 'Y') AS PAK_GOODS_YN
				, (SELECT IF(COUNT(*) > 0, 'Y' , 'N' ) FROM ORD_DTL_CSTRT WHERE ORD_NO = ODM.ORD_NO AND ORD_DTL_SEQ = ODM.ORD_DTL_SEQ AND CSTRT_GOODS_GB_CD = '${@framework.common.constants.CommonConstants@CSTRT_GOODS_GB_30}') AS FRB_GOODS_YN
			FROM	(
				 SELECT	OB.ORD_NO
					, OB.ST_ID
					, OB.MBR_NO
					, OB.ORD_STAT_CD
					, OB.ORD_MDA_CD
					, OB.CHNL_ID
					, OB.ORD_NM
					, OB.ORDR_ID
					, OB.ORDR_TEL
					, OB.ORDR_MOBILE
					, OB.ORDR_EMAIL
					, OB.ORD_ACPT_DTM
					, OB.ORD_CPLT_DTM
					, OB.OUTSIDE_ORD_NO
					, OB.ORD_DTL_CNT
					, OD.ORD_DTL_SEQ
					, OD.ORD_DTL_STAT_CD
					, OD.GOODS_ID
					, IF(OD.PAK_GOODS_ID IS NOT NULL, GB.GOODS_NM, OD.GOODS_NM) AS GOODS_NM
					, OD.ITEM_NO
					, OD.ITEM_NM
					, OD.ORD_QTY
					, OD.CNC_QTY
					, OD.RTN_QTY
					, OD.RMN_ORD_QTY
					, OD.SALE_AMT
					, OD.PAY_AMT
					, OD.RMN_PAY_AMT
					, OD.COMP_NO
					, CP.COMP_GB_CD
					, CP.COMP_NM
					, OD.COMP_GOODS_ID
					, OD.COMP_ITEM_ID
					, OD.DISP_CLSF_NO
					, OD.DLVR_NO
					, OD.DLVRC_NO
					, OD.ORD_DLVRA_NO
					, ODA.ADRS_NM
					, ODA.TEL
					, ODA.MOBILE
					, ODA.ROAD_ADDR
					, ODA.ROAD_DTL_ADDR
					, DC.REAL_DLVR_AMT
					, (SELECT 
							SUM(REAL_DLVR_AMT) 
						FROM 
							DELIVERY_CHARGE DC
						WHERE CNC_YN = 'N'
						AND	DC.DLVRC_NO IN (SELECT RTN_DLVRC_NO FROM CLAIM_DETAIL CD WHERE CD.ORD_NO = OD.ORD_NO AND CD.ORD_DTL_SEQ  = OD.ORD_DTL_SEQ AND CD.CLM_DTL_STAT_CD != '40') 
						) AS RTN_DLVR_AMT
					, OB.DLVR_PRCS_TP_CD
					, OD.MKI_GOODS_YN
					, OD.RSV_GOODS_YN
					, OD.PAK_GOODS_ID
					, CP.COMP_TP_CD
				FROM
					 ORDER_BASE OB /*! USE KEY (XIE1_ORDER_BASE_SRCH1) */
					, ORDER_DETAIL OD
					, ORDER_DLVRA ODA
					, COMPANY_BASE CP
					, DELIVERY_CHARGE DC
					, GOODS_BASE GB
				WHERE	OB.ORD_NO = OD.ORD_NO
				AND    	OD.ORD_DLVRA_NO = ODA.ORD_DLVRA_NO
				AND     OD.COMP_NO = CP.COMP_NO
				AND     OD.DLVRC_NO = DC.DLVRC_NO
				AND     OD.GOODS_ID = GB.GOODS_ID
				<include refid="order.pageOrderOrgWhere" />
				ORDER BY OB.ORD_ACPT_DTM DESC, OB.ORD_NO, OD.ORD_DTL_SEQ ASC
				<include refid="bizCommon.pageSql" />
				) ODM
				, ST_STD_INFO SSI
				, CHNL_STD_INFO CSI
				, GOODS_BASE GB
				LEFT OUTER JOIN BRAND_BASE BB ON (BB.BND_NO = GB.BND_NO)
			WHERE	ODM.ST_ID = SSI.ST_ID
			AND		ODM.CHNL_ID = CSI.CHNL_ID
			AND     GB.GOODS_ID = ODM.GOODS_ID
			ORDER BY ODM.ORD_ACPT_DTM DESC, ODM.ORD_NO, ODM.ORD_DTL_SEQ ASC)
		ORD_INFO
    </select>

	<resultMap type="biz.app.order.model.OrderListExcelVO" id="orderOrgExcelMap">
    	<id property="dlvrcNo" column="DLVRC_NO"/>
    	
    	<collection property="orderDetalListVO" ofType="biz.app.order.model.OrderListExcelVO">
    		<result property="ordNo" column="ORD_NO"/>
			<result property="ordDtlSeq" column="ORD_DTL_SEQ"/>
    		<result property="mbrNo" column="MBR_NO"/>
			<result property="ordNm" column="ORD_NM"/>
			<result property="ordrEmail" column="ORDR_EMAIL"/>
			<result property="ordrMobile" column="ORDR_MOBILE"/>
			<result property="ordrId" column="ORDR_ID"/>
			<result property="mbrGrdNm" column="MBR_GRD_NM"/>
			<result property="compGbCd" column="COMP_GB_CD"/>
			<result property="compGbNm" column="COMP_GB_NM"/>
			<result property="compTpNm" column="COMP_TP_NM"/>
			<result property="phsCompNm" column="PHS_COMP_NM"/>
			<result property="goodsId" column="GOODS_ID"/>
			<result property="itemNo" column="ITEM_NO"/>
			<result property="goodsCstrtTpCd" column="GOODS_CSTRT_TP_CD"/>
			<result property="goodsCstrtTpNm" column="GOODS_CSTRT_TP_NM"/>
			<result property="goodsNm" column="GOODS_NM"/>
			<result property="itemNm" column="ITEM_NM"/>
			<result property="ordDtlStatCd" column="ORD_DTL_STAT_CD"/>
			<result property="ordDtlStatCdNm" column="ORD_DTL_STAT_CD_NM"/>
			<result property="splAmt" column="SPL_AMT"/>
			<result property="splAmtTot" column="SPL_AMT_TOT"/>
			<result property="orgSaleAmt" column="ORG_SALE_AMT"/>
			<result property="saleAmt" column="SALE_AMT"/>
			<result property="prmtDcAmt" column="PRMT_DC_AMT"/>
			<result property="cpDcAmt" column="CP_DC_AMT"/>
			<result property="cartCpDcAmt" column="CART_CP_DC_AMT"/>
			<result property="payAmt" column="PAY_AMT"/>
			<result property="ordQty" column="ORD_QTY"/>
			<result property="cncQty" column="CNC_QTY"/>
			<result property="rtnQty" column="RTN_QTY"/>
			<result property="excQty" column="EXC_QTY"/>
			<result property="clmExcIngQty" column="CLM_EXC_ING_QTY"/>
			<result property="prmtDcSumAmt" column="PRMT_DC_SUM_AMT"/>
			<result property="cpSumAmt" column="CP_SUM_AMT"/>
			<result property="cartCpSumAmt" column="CART_CP_SUM_AMT"/>
			<result property="cpDcSumAmt" column="CP_DC_SUM_AMT"/>
			<result property="paySumAmt" column="PAY_SUM_AMT"/>
			<result property="orgDlvrAmt" column="ORG_DLVR_AMT"/>
			<result property="dlvrcCpDcAmt" column="DLVRC_CP_DC_AMT"/>
			<result property="realDlvrAmt" column="REAL_DLVR_AMT"/>
			<result property="realDlvrAmtString" column="REAL_DLVR_AMT_STRING"/>
			<result property="excDlvrAmt" column="EXC_DLVR_AMT"/>
			<result property="rtnDlvrAmt" column="RTN_DLVR_AMT"/>
			<result property="stlAmt" column="STL_AMT"/>
			<result property="stlAmtTot" column="STL_AMT_TOT"/>
			<result property="ooCpltDtm" column="OO_CPLT_DTM"/>
			<result property="bizNo" column="BIZ_NO"/>
			<result property="payMeansNm" column="PAY_MEANS_NM"/>
			<result property="bankNm" column="BANK_NM"/>
			<result property="acctNo" column="ACCT_NO"/>
			<result property="ooaNm" column="OOA_NM"/>
			<result property="cashRctNo" column="CASH_RCT_NO"/>
			<result property="cfmRstCd" column="CFM_RST_CD"/>
			<result property="dealNo" column="DEAL_NO"/>
			<result property="cfmNo" column="CFM_NO"/>
			<result property="ordAcptDtm" column="ORD_ACPT_DTM"/>
			<result property="payCpltDtm" column="PAY_CPLT_DTM"/>
			<result property="payCpltDtmVirtualAccount" column="PAY_CPLT_DTM_VIRTUAL_ACCOUNT"/>
			<result property="adrsNm" column="ADRS_NM"/>
			<result property="mobile" column="MOBILE"/>
			<result property="postNoNew" column="POST_NO_NEW"/>
			<result property="roadAddr" column="ROAD_ADDR"/>
			<result property="roadDtlAddr" column="ROAD_DTL_ADDR"/>
			<result property="rfdAmt" column="RFD_AMT"/>
			<result property="cashRefundAmt" column="CASH_REFUND_AMT"/>
			<result property="cardRefundAmt" column="CARD_REFUND_AMT"/>
			<result property="payRefundAmt" column="PAY_REFUND_AMT"/>
			<result property="clmDlvrcAmt" column="CLM_DLVRC_AMT"/>
			<result property="clmRsnCd" column="CLM_RSN_CD"/>
			<result property="clmRsnNm" column="CLM_RSN_NM"/>
			<result property="clmRsnContent" column="CLM_RSN_CONTENT"/>
			<result property="refundBankCd" column="REFUND_BANK_CD"/>
			<result property="refundAcctNo" column="REFUND_ACCT_NO"/>
			<result property="refundOoaNm" column="REFUND_OOA_NM"/>
			<result property="clmAcptDtm" column="CLM_ACPT_DTM"/>
			<result property="clmCpltDtm" column="CLM_CPLT_DTM"/>
			<result property="mdlNm" column="MDL_NM"/>
			<result property="category" column="CATEGORY"/>
			<result property="bndNmKo" column="BND_NM_KO"/>
			<result property="mmft" column="MMFT"/>
			<result property="ctrOrg" column="CTR_ORG"/>
			<result property="subGoodsNm" column="SUB_GOODS_NM"/>
			<result property="dlvrPrcsTpNm" column="DLVR_PRCS_TP_NM"/>
			<result property="dlvrNo" column="DLVR_NO"/>
			<result property="hdcCd" column="HDC_CD"/>
			<result property="hdcNm" column="HDC_NM"/>
			<result property="invNo" column="INV_NO"/>
			<result property="dlvrMemo" column="DLVR_MEMO"/>
			<result property="dlvrDemand" column="DLVR_DEMAND"/>
			<result property="dlvrCmdDtm" column="DLVR_CMD_DTM"/>
			<result property="dlvrCpltDtm" column="DLVR_CPLT_DTM"/>
			<result property="mkngRcvYn" column="MKNG_RCV_YN"/>
			<result property="cpNm" column="CP_NM"/>
			<result property="goodsCpNm" column="GOODS_CP_NM"/>
			<result property="cartCpNm" column="CART_CP_NM"/>
			<result property="mkiGoodsYn" column="MKI_GOODS_YN"/>
			<result property="mkiGoodsOptContent" column="MKI_GOODS_OPT_CONTENT"/>
    	</collection>
    </resultMap>

    <select id="orderOrgExcel" resultMap="orderOrgExcelMap">
		<!--
			Query Name : order.orderOrgExcel
			Description : 원 주문 목록 엑셀 쿼리 조회
		-->
        SELECT 	/* order.orderOrgExcel */
        			ODM.ORD_NO
        			, ODM.DLVRC_NO
        			, ODM.ORD_DTL_SEQ
	                , ODM.MBR_NO			/* 회원 번호 */
	                , ODM.ORD_NM
	                , ODM.ORDR_EMAIL
	                , ODM.ORDR_MOBILE
	                , ODM.ORDR_ID
	                , (SELECT DTL_NM FROM CODE_DETAIL WHERE GRP_CD = '${@framework.common.constants.CommonConstants@MBR_GRD_CD}' AND DTL_CD = MB.MBR_GRD_CD) AS MBR_GRD_NM /*회원 등급 명*/
	                , ODM.COMP_GB_CD			/* 업체 구분 코드 10:자사 */
		            ,(SELECT DTL_NM
			           FROM CODE_DETAIL 
			          WHERE GRP_CD = 'COMP_TP' 
			            AND DTL_CD = ODM.COMP_TP_CD	
			            AND SYS_DEL_YN = 'N'
			   		) AS COMP_TP_NM
	                , FN_GET_COMPANY_NAME(S.PHS_COMP_NO) AS PHS_COMP_NM	/* 매입 업체 이름 */
	                , ODM.GOODS_ID
	                , ODM.ITEM_NO
	                , GB.GOODS_CSTRT_TP_CD	/* 상품 구성 유형 - ITEM:단품 ATTR:옵션 SET:세트 PAK:묶음 */
	                , (SELECT DTL_NM FROM CODE_DETAIL CD WHERE GRP_CD = 'GOODS_CSTRT_TP' AND DTL_CD = GB.GOODS_CSTRT_TP_CD and SYS_DEL_YN != 'Y' and USE_YN = 'Y' ) as GOODS_CSTRT_TP_NM /* 상품상태 */
	                , ODM.GOODS_NM
	                , ODM.ITEM_NM
	                , ODM.ORD_DTL_STAT_CD
					, IF(ODM.RMN_ORD_QTY = 0, '주문취소', (SELECT DTL_NM FROM CODE_DETAIL WHERE GRP_CD = 'ORD_DTL_STAT' AND DTL_CD = ODM.ORD_DTL_STAT_CD)) ORD_DTL_STAT_CD_NM
					, ODM.SPL_AMT	 		/* 매입가 */
	                , ODM.ORG_SALE_AMT 		/* 정상가 */
					, ODM.SALE_AMT /* 판매가 */
					, FN_GET_ORDER_DTL_PRMT_DC_AMT(ODM.ORD_NO, ODM.ORD_DTL_SEQ) AS PRMT_DC_AMT		/* 프로모션 할인 금액 */
	                , FN_GET_ORDER_DTL_APL_BNFT(ODM.ORD_NO, ODM.ORD_DTL_SEQ, '20',  '210') AS CP_DC_AMT		/* 상품 쿠폰 할인 금액 */
					, FN_GET_ORDER_DTL_APL_BNFT(ODM.ORD_NO, ODM.ORD_DTL_SEQ, '20',  '220') AS CART_CP_DC_AMT	/* 장바구니 쿠폰 할인 금액 */
	                , ODM.PAY_AMT AS PAY_AMT		/* 결제 금액 */
	                , ODM.ORD_QTY
					, ODM.CNC_QTY
					, ODM.RTN_QTY
					, FN_GET_ORDER_CLAIM_EXC_QTY(ODM.ORD_NO, ODM.ORD_DTL_SEQ) AS CLM_EXC_ING_QTY	/* 클레임 교환 진행 수량 */
					, (IFNULL(ODM.ORG_SALE_AMT, 0) - IFNULL(ODM.SALE_AMT, 0)) * (ODM.RMN_ORD_QTY - FN_GET_ORD_CLM_RTN_CPLT_QTY(ODM.ORD_NO, ODM.ORD_DTL_SEQ)) AS PRMT_DC_SUM_AMT 		/*총 상품 할인 금액*/
					, IFNULL(FN_GET_ORDER_DTL_APL_BNFT(ODM.ORD_NO, ODM.ORD_DTL_SEQ, '${@framework.common.constants.CommonConstants@APL_BNFT_GB_20}',  '${@framework.common.constants.CommonConstants@APL_BNFT_TP_210}'),0) * (ODM.RMN_ORD_QTY - FN_GET_ORD_CLM_RTN_CPLT_QTY(ODM.ORD_NO, ODM.ORD_DTL_SEQ)) AS CP_SUM_AMT
					, IFNULL(FN_GET_ORDER_DTL_APL_BNFT(ODM.ORD_NO, ODM.ORD_DTL_SEQ, '${@framework.common.constants.CommonConstants@APL_BNFT_GB_20}',  '${@framework.common.constants.CommonConstants@APL_BNFT_TP_220}'),0) * (ODM.RMN_ORD_QTY - FN_GET_ORD_CLM_RTN_CPLT_QTY(ODM.ORD_NO, ODM.ORD_DTL_SEQ)) + CASE WHEN (ODM.RMN_ORD_QTY - FN_GET_ORD_CLM_RTN_CPLT_QTY(ODM.ORD_NO, ODM.ORD_DTL_SEQ)) > 0 THEN ODM.CART_CP_DC_RMN_AMT ELSE 0 END AS CART_CP_SUM_AMT
					, (IFNULL(FN_GET_ORDER_DTL_APL_BNFT(ODM.ORD_NO, ODM.ORD_DTL_SEQ, '${@framework.common.constants.CommonConstants@APL_BNFT_GB_20}',  '${@framework.common.constants.CommonConstants@APL_BNFT_TP_210}'),0) * (ODM.RMN_ORD_QTY - FN_GET_ORD_CLM_RTN_CPLT_QTY(ODM.ORD_NO, ODM.ORD_DTL_SEQ))) + (IFNULL(FN_GET_ORDER_DTL_APL_BNFT(ODM.ORD_NO, ODM.ORD_DTL_SEQ, '${@framework.common.constants.CommonConstants@APL_BNFT_GB_20}',  '${@framework.common.constants.CommonConstants@APL_BNFT_TP_220}'),0) *(ODM.RMN_ORD_QTY - FN_GET_ORD_CLM_RTN_CPLT_QTY(ODM.ORD_NO, ODM.ORD_DTL_SEQ))) + CASE WHEN (ODM.RMN_ORD_QTY - FN_GET_ORD_CLM_RTN_CPLT_QTY(ODM.ORD_NO, ODM.ORD_DTL_SEQ)) > 0 THEN ODM.CART_CP_DC_RMN_AMT ELSE 0 END AS CP_DC_SUM_AMT
					, (IFNULL(ODM.SALE_AMT, 0) - IFNULL(FN_GET_ORDER_DTL_APL_BNFT(ODM.ORD_NO, ODM.ORD_DTL_SEQ, '${@framework.common.constants.CommonConstants@APL_BNFT_GB_20}',  '${@framework.common.constants.CommonConstants@APL_BNFT_TP_210}'), 0) - IFNULL(FN_GET_ORDER_DTL_APL_BNFT(ODM.ORD_NO, ODM.ORD_DTL_SEQ, '${@framework.common.constants.CommonConstants@APL_BNFT_GB_20}',  '${@framework.common.constants.CommonConstants@APL_BNFT_TP_220}'), 0)) * (ODM.RMN_ORD_QTY - FN_GET_ORD_CLM_RTN_CPLT_QTY(ODM.ORD_NO, ODM.ORD_DTL_SEQ)) - CASE WHEN (ODM.RMN_ORD_QTY - FN_GET_ORD_CLM_RTN_CPLT_QTY(ODM.ORD_NO, ODM.ORD_DTL_SEQ)) > 0 THEN ODM.CART_CP_DC_RMN_AMT ELSE 0 END AS PAY_SUM_AMT		/*총 결제 금액*/
					, ODM.ORG_DLVR_AMT				/*원 배송비*/
					, ODM.DLVRC_CP_DC_AMT			/* 배송비 쿠폰 할인 금액 */
					, ODM.REAL_DLVR_AMT				/* 실배송비 */
					, CONCAT(IFNULL(FN_GET_CODE_NAME('PAY_MEANS', PB.PAY_MEANS_CD,'Y'), '가상계좌'), ' ',IFNULL(FN_GET_CODE_NAME('PAY_MEANS', GS_PNT.PAY_MEANS_CD,'Y'),''), ' ', IFNULL(FN_GET_CODE_NAME('PAY_MEANS', MP_PNT.PAY_MEANS_CD,'Y'),'')) AS PAY_MEANS_NM
					, (SELECT DTL_NM FROM CODE_DETAIL CD WHERE GRP_CD = 'BANK' AND DTL_CD = PB.BANK_CD and SYS_DEL_YN != 'Y' and USE_YN = 'Y' ) as BANK_NM /* 은행명 */
					, PB.ACCT_NO				/* 계좌 번호 */
					, PB.OOA_NM				/* 예금주 명 */
					, CASE WHEN (SELECT MAX(CRGM.CASH_RCT_NO) FROM CASH_RECEIPT_GOODS_MAP CRGM
		              INNER JOIN CASH_RECEIPT CR
		              ON    CRGM.CASH_RCT_NO = CR.CASH_RCT_NO
		              WHERE 1=1 AND CRGM.ORD_CLM_NO = ODM.ORD_NO) IS NOT NULL THEN 'Y' ELSE '' END AS CASH_RCT_NO /* 현금영수증 번호 */
					, PB.CFM_RST_CD			/* 승인 결과 코드 */
					, PB.DEAL_NO				/* 거래 번호 */
					, PB.CFM_NO				/* 승인 번호 */
					, ODM.ORD_ACPT_DTM
					, CASE WHEN FN_GET_ORDER_PAY_MEANS_CD(ODM.ORD_NO) != '30' THEN PB.PAY_CPLT_DTM ELSE '' END AS PAY_CPLT_DTM		/* 결제 완료 일시 */
					, CASE WHEN FN_GET_ORDER_PAY_MEANS_CD(ODM.ORD_NO) = '30' THEN PB.PAY_CPLT_DTM ELSE '' END AS PAY_CPLT_DTM_VIRTUAL_ACCOUNT		/* 가상계좌 결제 완료 일시 */
					, ODM.ADRS_NM
	                , ODM.MOBILE
	                , ODM.POST_NO_NEW			/*수취인 우편번호 */
	                , ODM.ROAD_ADDR
	                , ODM.ROAD_DTL_ADDR
					, PCR.RFD_AMT			/* 환불 금액 */
					, (
		            	SELECT  SUM((CD.PAY_AMT * CD.CLM_QTY) + CD.RMN_PAY_AMT) 
		            	FROM CLAIM_DETAIL CD 
		            	WHERE  ODM.ORD_NO = CD.ORD_NO 
		            	AND ODM.ORD_DTL_SEQ = CD.ORD_DTL_SEQ 
		            	AND (CD.CLM_DTL_TP_CD = '10' OR  (CD.CLM_DTL_TP_CD = '20' AND (SELECT USR_DFN2_VAL FROM  CODE_DETAIL WHERE GRP_CD = 'CLM_RSN' AND DTL_CD = CD.CLM_RSN_CD) = '20')) 
		            	AND FN_GET_ORDER_PAY_MEANS_CD(CD.ORD_NO) IN ('20', '30', '80', '81')
		            	) AS CASH_REFUND_AMT
		            , (
		            	SELECT  SUM((CD.PAY_AMT * CD.CLM_QTY) + CD.RMN_PAY_AMT) 
		            	FROM CLAIM_DETAIL CD 
		            	WHERE  ODM.ORD_NO = CD.ORD_NO 
		            	AND ODM.ORD_DTL_SEQ = CD.ORD_DTL_SEQ 
		            	AND (CD.CLM_DTL_TP_CD = '10' OR  (CD.CLM_DTL_TP_CD = '20' AND (SELECT USR_DFN2_VAL FROM  CODE_DETAIL WHERE GRP_CD = 'CLM_RSN' AND DTL_CD = CD.CLM_RSN_CD) = '20')) 
		            	AND FN_GET_ORDER_PAY_MEANS_CD(CD.ORD_NO) IN ('10','11')
		            	) AS CARD_REFUND_AMT
		            , (
		            	SELECT  SUM((CD.PAY_AMT * CD.CLM_QTY) + CD.RMN_PAY_AMT) 
		            	FROM CLAIM_DETAIL CD 
		            	WHERE  ODM.ORD_NO = CD.ORD_NO 
		            	AND ODM.ORD_DTL_SEQ = CD.ORD_DTL_SEQ 
		            	AND (CD.CLM_DTL_TP_CD = '10' OR  (CD.CLM_DTL_TP_CD = '20' AND (SELECT USR_DFN2_VAL FROM  CODE_DETAIL WHERE GRP_CD = 'CLM_RSN' AND DTL_CD = CD.CLM_RSN_CD) = '20')) 
		            	AND FN_GET_ORDER_PAY_MEANS_CD(CD.ORD_NO) IN ('70', '71', '72')
		            	) AS PAY_REFUND_AMT
		            , (
		            	SELECT IFNULL(SUM(REAL_DLVR_AMT), 0) 
					    FROM DELIVERY_CHARGE DC ,CLAIM_DETAIL CD 
		            	WHERE  ODM.ORD_NO = CD.ORD_NO 
		            	AND ODM.ORD_DTL_SEQ = CD.ORD_DTL_SEQ 
						AND DC.DLVRC_NO =  CD.DLVRC_NO
						) AS CLM_DLVRC_AMT 		 /* 추가 배송비 */
					, (SELECT CONCAT(DTL_NM,'(',CASE when CDD.USR_DFN2_VAL ='20' THEN '업체' ELSE '고객' end,')') FROM CLAIM_DETAIL CD, CODE_DETAIL CDD WHERE ODM.ORD_NO = CD.ORD_NO AND ODM.ORD_DTL_SEQ = CD.ORD_DTL_SEQ and CDD.GRP_CD = 'CLM_RSN' and CD.CLM_RSN_CD = CDD.DTL_CD LIMIT 1) AS CLM_RSN_NM		/* 클레임 사유 */
					, (
						SELECT CLM_RSN_CONTENT
						FROM CLAIM_DETAIL CD 
		            	WHERE  ODM.ORD_NO = CD.ORD_NO 
		            	AND ODM.ORD_DTL_SEQ = CD.ORD_DTL_SEQ LIMIT 1)  AS CLM_RSN_CONTENTS		/* 클레임 사유 내용 */
					, PCR.BANK_CD			AS REFUND_BANK_CD			/* 환불 은행 코드 */
					, PCR.ACCT_NO			AS REFUND_ACCT_NO			/* 환불 계좌 번호 */
					, PCR.OOA_NM			AS REFUND_OOA_NM					/* 환불 예금주 명 */
					, (SELECT SYS_REG_DTM FROM CLAIM_DETAIL CD WHERE ODM.ORD_NO = CD.ORD_NO AND ODM.ORD_DTL_SEQ = CD.ORD_DTL_SEQ LIMIT 1) AS CLM_ACPT_DTM 		/*접수 일시		  */
					, (SELECT CLM_CPLT_DTM FROM CLAIM_DETAIL CD WHERE ODM.ORD_NO = CD.ORD_NO AND ODM.ORD_DTL_SEQ = CD.ORD_DTL_SEQ LIMIT 1) AS CLM_CPLT_DTM		/*완료 일시		  */
					, GB.MDL_NM					/* 모델 명 */
		            , FN_GET_DISP_CTG_PATH(DG.DISP_CLSF_NO) as CATEGORY /* 카테고리 */
					, BB.BND_NM_KO					/* 노출 브랜드명 */
					, GB.MMFT /* 제조사 */
		            , GB.CTR_ORG /* 원산지 */
		            ,(
	        			 SELECT 
						  	group_concat( if(GB.GOODS_NM='', null, GB.GOODS_NM), ',') 
						  FROM GOODS_BASE GB    	
						  	WHERE GB.GOODS_ID IN  
						  	(					                   
								SELECT ODC.CSTRT_GOODS_ID 
								  FROM ORD_DTL_CSTRT ODC	       
								 WHERE ODC.ORD_NO  = ODM.ORD_NO 
								 AND ODC.ORD_DTL_SEQ = ODM.ORD_DTL_SEQ
								 AND ODC.CSTRT_GOODS_GB_CD = '30'								
							)	
	        		) AS SUB_GOODS_NM		/*사은품명*/     
	        		, FN_GET_CODE_NAME('${@framework.common.constants.CommonConstants@DLVR_PRCS_TP}', DV.DLVR_PRCS_TP_CD,'Y') AS DLVR_PRCS_TP_NM		/* 배송 처리 유형*/
	        		, DV.DLVR_NO		/*배송 번호*/
	        		, DV.HDC_CD		     /* 택배사 코드		    */
	        		, (SELECT DTL_NM FROM CODE_DETAIL CD WHERE GRP_CD = 'HDC' AND DTL_CD = DV.HDC_CD and SYS_DEL_YN != 'Y' and USE_YN = 'Y' ) as HDC_NM /* 택배사 명 */
	        		, DV.INV_NO		     /* 송장 번호		    */
	        		, ODM.DLVR_MEMO			/* 배송 매모 */
	        		, ODM.DLVR_DEMAND			/* 배송 요청 사항 */
	        		, DV.DLVR_CMD_DTM			/*배송 일자*/
				    , DV.DLVR_CPLT_DTM		/*배송 완료 일자*/
				    , MB.MKNG_RCV_YN		/* 회원 마케팅 수신동의 여부 */
				    , AB.CP_NM					/*쿠폰명*/
				    , AB.GOODS_CP_NM				/* 상품 쿠폰명*/
				    , AB.CART_CP_NM					/* 장바구니 쿠폰명*/
				    , ODM.MKI_GOODS_YN	/*제작상품여부*/
					, ODM.MKI_GOODS_OPT_CONTENT	/*제작상품옵션내용*/
 		FROM		(
					 SELECT	OB.ORD_NO
				                , OB.ST_ID
				                , OB.MBR_NO
				                , OB.ORD_STAT_CD
				                , OB.ORD_MDA_CD
				                , OB.CHNL_ID
				                , OB.ORD_NM
				                , OB.ORDR_ID
				                , OB.ORDR_TEL
				                , OB.ORDR_MOBILE
				                , OB.ORDR_EMAIL
				                , OB.ORD_ACPT_DTM
				                , OB.ORD_CPLT_DTM
				                , OB.OUTSIDE_ORD_NO
				                , OB.ORD_DTL_CNT
				                , OD.ORD_DTL_SEQ
								, OD.ORD_DTL_STAT_CD
								, OD.GOODS_ID
								, IF(OD.PAK_GOODS_ID IS NOT NULL, GB.GOODS_NM, OD.GOODS_NM) AS GOODS_NM
								, OD.ITEM_NO
								, OD.ITEM_NM
								, OD.ORD_QTY
								, OD.CNC_QTY
								, OD.RTN_QTY
								, OD.RMN_ORD_QTY
								, FN_GET_ORD_CLM_RTN_CPLT_QTY(OD.ORD_NO, OD.ORD_DTL_SEQ) AS RTN_CPLT_QTY /* 반품 완료 수량 */
								, OD.SALE_AMT
								, OD.PAY_AMT
								, OD.COMP_NO
								, CP.COMP_NM
								, CP.COMP_TP_CD
								, OD.COMP_GOODS_ID
								, OD.COMP_ITEM_ID
								, OD.DISP_CLSF_NO
								, FN_GET_ORDER_DLVR_NO(OD.ORD_NO, OD.ORD_DTL_SEQ, 'Y') AS DLVR_NO
								, OD.DLVRC_NO
								, OD.ORD_DLVRA_NO
				                , ODA.ADRS_NM
				                , ODA.TEL
				                , ODA.MOBILE
				                , ODA.ROAD_ADDR
				                , ODA.ROAD_DTL_ADDR
				                , ODA.POST_NO_NEW		/*수취인 우편번호*/
				                , DC.REAL_DLVR_AMT
				                , DC.ORG_DLVR_AMT
				                , DC.CP_NO					/* 쿠폰 번호 */
				                , DC.CP_DC_AMT AS DLVRC_CP_DC_AMT			/* 쿠폰 할인 금액 */
				                , OB.DLVR_PRCS_TP_CD
				                , OD.MKI_GOODS_YN
				                , OD.MKI_GOODS_OPT_CONTENT
				                , OD.RSV_GOODS_YN
				                , OD.PAK_GOODS_ID
				                , ODA.DLVR_MEMO			/* 배송 매모 */
				                , ODA.DLVR_DEMAND			/* 배송 요청사항 */
				                , CP.COMP_GB_CD
				                , (SELECT IFNULL(SUM(RMN_APL_AMT), 0) FROM APL_BNFT 
									WHERE APL_BNFT_GB_CD = '${@framework.common.constants.CommonConstants@APL_BNFT_GB_20}' AND APL_BNFT_TP_CD = '${@framework.common.constants.CommonConstants@APL_BNFT_TP_220}'
									  AND ORD_NO = OD.ORD_NO AND ORD_DTL_SEQ = OD.ORD_DTL_SEQ
				 				) AS CART_CP_DC_RMN_AMT
				 				, GP.SPL_AMT
				 				, GP.ORG_SALE_AMT
					FROM		ORDER_BASE OB
				                , ORDER_DETAIL OD
			                  	, ORDER_DLVRA ODA
			                  	, COMPANY_BASE CP
			                  	, DELIVERY_CHARGE DC
			                  	, GOODS_BASE GB
			                  	, GOODS_PRICE GP
					WHERE	OB.ORD_NO = OD.ORD_NO
			        AND    	OD.ORD_DLVRA_NO = ODA.ORD_DLVRA_NO
			        AND     OD.COMP_NO = CP.COMP_NO
			        AND     OD.DLVRC_NO = DC.DLVRC_NO
			        AND		OD.GOODS_PRC_NO = GP.GOODS_PRC_NO
			        AND     OD.GOODS_ID = GB.GOODS_ID
					<include refid="order.pageOrderOrgWhere" />
			        ORDER BY OB.ORD_ACPT_DTM DESC, OB.ORD_NO, OD.ORD_DTL_SEQ ASC
			        <include refid="bizCommon.pageSql" />
					) ODM
        			INNER JOIN ST_STD_INFO SSI ON ODM.ST_ID = SSI.ST_ID
        			INNER JOIN CHNL_STD_INFO CSI ON ODM.CHNL_ID = CSI.CHNL_ID
        			INNER JOIN (
						SELECT GB.*, 
									CAST(FN_SPLIT(FN_GET_GOODS_PRICE(GB.GOODS_ID, '1', '00'), '|', 1) AS UNSIGNED) AS SALE_AMT,
									CAST(FN_SPLIT(FN_GET_GOODS_PRICE(GB.GOODS_ID, '1', '00'), '|', 7) AS UNSIGNED) AS ORG_SALE_AMT,
									CAST(FN_SPLIT(FN_GET_GOODS_PRICE(GB.GOODS_ID, '1', '00'), '|', 8) AS UNSIGNED) AS SPL_AMT
						FROM GOODS_BASE GB
					) GB ON GB.GOODS_ID = ODM.GOODS_ID
        			LEFT OUTER JOIN BRAND_BASE BB ON BB.BND_NO   =GB.BND_NO
        			LEFT OUTER JOIN MEMBER_BASE MB ON (MB.MBR_NO != 0 AND MB.MBR_NO = ODM.MBR_NO) 
        			LEFT OUTER JOIN ITEM I ON (GB.GOODS_ID = I.GOODS_ID)
        			LEFT OUTER JOIN SKU_BASE S ON (I.SKU_CD = S.SKU_CD)
        			LEFT OUTER JOIN PAY_BASE PB ON (
                 			ODM.ORD_NO = PB.ORD_NO
                 			AND PB.PAY_GB_CD = '${@framework.common.constants.CommonConstants@PAY_GB_10}'
                 			AND PB.ORD_CLM_GB_CD = '${@framework.common.constants.CommonConstants@ORD_CLM_GB_10}'
                 			AND PB.PAY_STAT_CD = '${@framework.common.constants.CommonConstants@PAY_STAT_01}'
                 			AND PB.CNC_YN = '${@framework.common.constants.CommonConstants@COMM_YN_N}'
                 			AND PB.PAY_MEANS_CD != '${@framework.common.constants.CommonConstants@PAY_MEANS_80}'
                 			AND PB.PAY_MEANS_CD != '${@framework.common.constants.CommonConstants@PAY_MEANS_81}'
	                )
	                LEFT OUTER JOIN PAY_BASE GS_PNT ON (
                 			ODM.ORD_NO = GS_PNT.ORD_NO
                 			AND GS_PNT.PAY_GB_CD = '${@framework.common.constants.CommonConstants@PAY_GB_10}'
                 			AND GS_PNT.ORD_CLM_GB_CD = '${@framework.common.constants.CommonConstants@ORD_CLM_GB_10}'
                 			AND GS_PNT.PAY_STAT_CD = '${@framework.common.constants.CommonConstants@PAY_STAT_01}'
                 			AND GS_PNT.CNC_YN = '${@framework.common.constants.CommonConstants@COMM_YN_N}'
                 			AND GS_PNT.PAY_MEANS_CD = '${@framework.common.constants.CommonConstants@PAY_MEANS_80}'
	                )
	                LEFT OUTER JOIN PAY_BASE MP_PNT ON (
                 			ODM.ORD_NO = MP_PNT.ORD_NO
                 			AND MP_PNT.PAY_GB_CD = '${@framework.common.constants.CommonConstants@PAY_GB_10}'
                 			AND MP_PNT.ORD_CLM_GB_CD = '${@framework.common.constants.CommonConstants@ORD_CLM_GB_10}'
                 			AND MP_PNT.PAY_STAT_CD = '${@framework.common.constants.CommonConstants@PAY_STAT_01}'
                 			AND MP_PNT.CNC_YN = '${@framework.common.constants.CommonConstants@COMM_YN_N}'
                 			AND MP_PNT.PAY_MEANS_CD = '${@framework.common.constants.CommonConstants@PAY_MEANS_81}'
	                )
	                LEFT OUTER JOIN PAY_CASH_REFUND PCR ON PCR.PAY_NO = PB.PAY_NO		/* 현금 환불 */
	                LEFT OUTER JOIN DISPLAY_GOODS DG ON GB.GOODS_ID = DG.GOODS_ID AND DG.DLGT_DISP_YN = 'Y'
	                LEFT OUTER JOIN DELIVERY DV ON ODM.DLVR_NO = DV.DLVR_NO
	                LEFT OUTER JOIN (
                    	SELECT AB.ORD_NO,  AB.ORD_DTL_SEQ 
                    		, GROUP_CONCAT(CB.CP_NM) CP_NM
                    		, GROUP_CONCAT(IF(APL_BNFT_TP_CD = 210, CB.CP_NM, null)) AS GOODS_CP_NM
							, GROUP_CONCAT(IF(APL_BNFT_TP_CD = 220, CB.CP_NM, null)) AS CART_CP_NM 
				        FROM APL_BNFT AB 
				        LEFT JOIN COUPON_BASE CB  ON AB.APL_NO = CB.CP_NO 
				        WHERE AB.CNC_YN = 'N'
				        GROUP BY AB.ORD_NO,  AB.ORD_DTL_SEQ 
				     ) AB ON ODM.ORD_NO = AB.ORD_NO AND ODM.ORD_DTL_SEQ = AB.ORD_DTL_SEQ         
        ORDER BY ODM.ORD_ACPT_DTM DESC, ODM.ORD_NO, ODM.ORD_DTL_SEQ ASC
    </select>

    <select id="pageOrderOrgCount"     resultType="java.lang.Integer">
		<!--
			Query Name : order.pageOrderOrgCount
			Description : 주문 목록 Count 조회
		-->
		SELECT	COUNT(*)
		FROM		  ORDER_BASE OB /*! USE KEY (XIE1_ORDER_BASE_SRCH1) */,
 					  ORDER_DETAIL OD,
                      ORDER_DLVRA ODA,
 					  COMPANY_BASE CP,
  				      DELIVERY_CHARGE DC,
  				      GOODS_BASE GB
		WHERE	OB.ORD_NO = OD.ORD_NO
        AND    	OD.ORD_DLVRA_NO = ODA.ORD_DLVRA_NO
        AND     OD.COMP_NO = CP.COMP_NO
        AND     OD.DLVRC_NO = DC.DLVRC_NO
        AND   	OD.GOODS_ID = GB.GOODS_ID
		<include refid="order.pageOrderOrgWhere" />
    </select>
    
     <select id="orderOrgExcelCount"     resultType="java.lang.Integer">
		<!--
			Query Name : order.orderOrgExcelCount
			Description : 주문 엑셀 Count 조회
		-->
		SELECT	COUNT(*)
		FROM		ORDER_BASE OB
	                , ORDER_DETAIL OD
                  	, ORDER_DLVRA ODA
                  	, COMPANY_BASE CP
		WHERE	OB.ORD_NO = OD.ORD_NO
        AND    	OD.ORD_DLVRA_NO = ODA.ORD_DLVRA_NO
        AND     OD.COMP_NO = CP.COMP_NO
		<include refid="order.pageOrderOrgWhere" />
    </select>
    
    <select id="orderAdjustExcel" resultMap="orderOrgExcelMap">
		<!--
			Query Name : order.orderAdjustExcel
			Description : 원 주문 목록 엑셀 쿼리 조회
		-->
        SELECT 	/* order.orderAdjustExcel */
        			ODM.MBR_NO			/* 회원 번호 */
        			, ODM.ORD_NO
        			, ODM.ORD_DTL_SEQ
	                , ODM.GOODS_ID
	                , ODM.GOODS_NM
	                , (SELECT DTL_NM FROM CODE_DETAIL CD WHERE GRP_CD = 'GOODS_CSTRT_TP' AND DTL_CD = GB.GOODS_CSTRT_TP_CD and SYS_DEL_YN != 'Y' and USE_YN = 'Y' ) as GOODS_CSTRT_TP_NM /* 상품상태 */
	                , GB.SALE_AMT /* 판매가 */
	                , ODM.ORD_QTY
	                , (ODM.PAY_AMT * ODM.ORD_QTY) + ODM.RMN_PAY_AMT AS PAY_AMT		/* 결제 금액 */
	                , ODM.REAL_DLVR_AMT	AS		REAL_DLVR_AMT_STRING		/* 실배송비 */
	                , GB.SPL_AMT /* 매입가 */
	                , GB.SPL_AMT * ODM.ORD_QTY AS SPL_AMT_TOT
	                , ODM.CNC_QTY
	                , IFNULL(CD.EXC_QTY, 0) AS EXC_QTY
	                , 0 AS EXC_DLVR_AMT 
	                , ODM.RTN_QTY
	                , IFNULL(DC.RTN_DLVR_AMT,0)     AS RTN_DLVR_AMT  
	                , GB.SPL_AMT * (ODM.ORD_QTY - ODM.RTN_QTY) AS STL_AMT /* 정산금액 */
	                , GB.SPL_AMT * (ODM.ORD_QTY - ODM.RTN_QTY) - IFNULL(DC.RTN_DLVR_AMT,0) AS STL_AMT_TOT 		 /* 소계 */
	                , ODM.COMP_NM AS PHS_COMP_NM
	                , DV.OO_CPLT_DTM
	                , ODM.BIZ_NO
 		FROM		(
					 SELECT	OB.ORD_NO
				                , OB.ST_ID
				                , OB.MBR_NO
				                , OB.ORD_STAT_CD
				                , OB.ORD_MDA_CD
				                , OB.CHNL_ID
				                , OB.ORD_NM
				                , OB.ORDR_ID
				                , OB.ORDR_TEL
				                , OB.ORDR_MOBILE
				                , OB.ORDR_EMAIL
				                , OB.ORD_ACPT_DTM
				                , OB.ORD_CPLT_DTM
				                , OB.OUTSIDE_ORD_NO
				                , OB.ORD_DTL_CNT
				                , OD.ORD_DTL_SEQ
								, OD.ORD_DTL_STAT_CD
								, OD.GOODS_ID
								, IF(OD.PAK_GOODS_ID IS NOT NULL, GB.GOODS_NM, OD.GOODS_NM) AS GOODS_NM
								, OD.ITEM_NO
								, OD.ITEM_NM
								, OD.ORD_QTY
								, OD.CNC_QTY
								, OD.RTN_QTY
								, OD.RMN_ORD_QTY
								, FN_GET_ORD_CLM_RTN_CPLT_QTY(OD.ORD_NO, OD.ORD_DTL_SEQ) AS RTN_CPLT_QTY /* 반품 완료 수량 */
								, OD.SALE_AMT
								, OD.PAY_AMT
								, OD.COMP_NO
								, CP.COMP_NM
								, CP.COMP_TP_CD
								, CP.BIZ_NO
								, OD.COMP_GOODS_ID
								, OD.COMP_ITEM_ID
								, OD.DISP_CLSF_NO
								, OD.DLVR_NO
								, OD.DLVRC_NO
								, OD.ORD_DLVRA_NO
								, OD.RMN_PAY_AMT
				                , ODA.ADRS_NM
				                , ODA.TEL
				                , ODA.MOBILE
				                , ODA.ROAD_ADDR
				                , ODA.ROAD_DTL_ADDR
				                , ODA.POST_NO_NEW		/*수취인 우편번호*/
				                , CASE 
				                	WHEN ( DC.DLVRC_CDT_CD='20' AND OD.ORD_DTL_SEQ > 1 ) THEN '0'
				                	WHEN ( DC.DLVRC_STD_CD='10'  OR DC.REAL_DLVR_AMT = 0 ) THEN '' 
				                	ELSE DC.REAL_DLVR_AMT 
				                  END AS REAL_DLVR_AMT
				                , DC.ORG_DLVR_AMT
				                , DC.CP_NO					/* 쿠폰 번호 */
				                , DC.CP_DC_AMT AS DLVRC_CP_DC_AMT			/* 쿠폰 할인 금액 */
				                , DC.DLVRC_STD_CD			/* 배송비 기준 코드 - 10:무료 20:배송비 추가*/
				                , DC.DLVRC_CDT_CD		/* 배송비 조건 코드 - 10:개당 20: 주문당*/
				                , DC.DLVRC_CDT_STD_CD	/* 배송비 조건 기준 코드 - 10:유료 20:조건부무료(가격) 30:조건부무료(개당) */
				                , OB.DLVR_PRCS_TP_CD
				                , OD.MKI_GOODS_YN
				                , OD.RSV_GOODS_YN
				                , OD.PAK_GOODS_ID
				                , ODA.DLVR_MEMO			/* 배송 매모 */
				                , ODA.DLVR_DEMAND			/* 배송 요청사항 */
				                , CP.COMP_GB_CD
				                , (SELECT IFNULL(SUM(RMN_APL_AMT), 0) FROM APL_BNFT 
									WHERE APL_BNFT_GB_CD = '${@framework.common.constants.CommonConstants@APL_BNFT_GB_20}' AND APL_BNFT_TP_CD = '${@framework.common.constants.CommonConstants@APL_BNFT_TP_220}'
									  AND ORD_NO = OD.ORD_NO AND ORD_DTL_SEQ = OD.ORD_DTL_SEQ
				 				) AS CART_CP_DC_RMN_AMT
					FROM		ORDER_BASE OB
				                , ORDER_DETAIL OD
			                  	, ORDER_DLVRA ODA
			                  	, COMPANY_BASE CP
			                  	, DELIVERY_CHARGE DC
			                  	, GOODS_BASE GB
					WHERE	OB.ORD_NO = OD.ORD_NO
			        AND    	OD.ORD_DLVRA_NO = ODA.ORD_DLVRA_NO
			        AND     OD.COMP_NO = CP.COMP_NO
			        AND     OD.DLVRC_NO = DC.DLVRC_NO
			        AND     OD.GOODS_ID = GB.GOODS_ID
			        AND     OD.ORD_DTL_STAT_CD = '${@framework.common.constants.CommonConstants@ORD_DTL_STAT_170}'
			        AND     OD.ORD_QTY - CNC_QTY > 0 
					<include refid="order.pageOrderOrgWhere" />
			        ORDER BY OB.ORD_ACPT_DTM DESC, OB.ORD_NO, OD.ORD_DTL_SEQ ASC
			        <include refid="bizCommon.pageSql" />
					) ODM
					INNER JOIN (SELECT ORD_DTL_CSTRT_NO, ORD_NO, ORD_DTL_SEQ FROM ORD_DTL_CSTRT  GROUP BY ORD_NO, ORD_DTL_SEQ) ODC ON ODC.ORD_NO = ODM.ORD_NO AND ODC.ORD_DTL_SEQ = ODM.ORD_DTL_SEQ
        			INNER JOIN ST_STD_INFO SSI ON ODM.ST_ID = SSI.ST_ID
        			INNER JOIN CHNL_STD_INFO CSI ON ODM.CHNL_ID = CSI.CHNL_ID
        			INNER JOIN (
						SELECT GP.*, GB.GOODS_CSTRT_TP_CD
						FROM GOODS_PRICE GP
							JOIN GOODS_BASE GB ON GP.GOODS_ID = GB.GOODS_ID
						WHERE GP.DEL_YN = 'N'		
					) GB ON (GB.GOODS_ID = ODM.GOODS_ID AND ODM.ORD_ACPT_DTM BETWEEN GB.SALE_STRT_DTM AND GB.SALE_END_DTM)
        			LEFT OUTER JOIN ORD_DTL_CSTRT_DLVR_MAP ODCDM ON ODC.ORD_DTL_CSTRT_NO = ODCDM.ORD_DTL_CSTRT_NO AND DLGT_YN = 'Y'
	                LEFT OUTER JOIN DELIVERY DV ON ODCDM.DLVR_NO = DV.DLVR_NO
	                LEFT JOIN (
	                	SELECT SUM(REAL_DLVR_AMT) AS RTN_DLVR_AMT, CD.ORD_NO, CD.ORD_DTL_SEQ
						FROM DELIVERY_CHARGE DC
							JOIN (SELECT * FROM CLAIM_DETAIL
									   WHERE CLM_RSN_CD IN (SELECT DTL_CD FROM CODE_DETAIL WHERE GRP_CD = 'CLM_RSN' AND USR_DFN2_VAL = '20')) CD ON (CD.DLVRC_NO = DC.DLVRC_NO OR CD.RTN_DLVRC_NO = DC.DLVRC_NO)
						WHERE  CLM_DTL_TP_CD = '20'
						GROUP BY CD.ORD_NO, CD.ORD_DTL_SEQ
	                ) DC ON DC.ORD_NO = ODM.ORD_NO AND DC.ORD_DTL_SEQ = ODM.ORD_DTL_SEQ
	                LEFT JOIN (
	                	SELECT SUM(CLM_QTY) EXC_QTY, CD.ORD_NO, CD.ORD_DTL_SEQ
	                	FROM CLAIM_DETAIL CD
	                	WHERE CLM_DTL_TP_CD = '40'
	                	GROUP BY CD.ORD_NO, CD.ORD_DTL_SEQ
	                ) CD ON CD.ORD_NO = ODM.ORD_NO AND CD.ORD_DTL_SEQ = ODM.ORD_DTL_SEQ
        ORDER BY ODM.ORD_ACPT_DTM DESC, ODM.ORD_NO, ODM.ORD_DTL_SEQ ASC
    </select>
    
    <select id="orderAdjustExcelCount"     resultType="java.lang.Integer">
		<!--
			Query Name : order.orderAdjustExcelCount
			Description : 주문 엑셀 Count 조회
		-->
		SELECT	COUNT(*)
		FROM		ORDER_BASE OB
	                , ORDER_DETAIL OD
                  	, ORDER_DLVRA ODA
                  	, COMPANY_BASE CP
		WHERE	OB.ORD_NO = OD.ORD_NO
        AND    	OD.ORD_DLVRA_NO = ODA.ORD_DLVRA_NO
        AND     OD.COMP_NO = CP.COMP_NO
		<include refid="order.pageOrderOrgWhere" />
    </select>

	<sql id="pageOrderOrgWhere">
        AND     	OB.DATA_STAT_CD = '${@framework.common.constants.CommonConstants@DATA_STAT_01}' /* 활성건 기준 */
		<if test="payMeansCd != null and payMeansCd != ''">
		AND EXISTS (
					SELECT 	1
					  FROM 	PAY_BASE PB 
					 WHERE 	PB.ORD_NO = OB.ORD_NO
					 AND		PB.ORD_CLM_GB_CD = '${@framework.common.constants.CommonConstants@ORD_CLM_GB_10}'	/* 주문 결제 정보*/ 
					   AND PB.PAY_MEANS_CD = #{payMeansCd} 
					)
		</if>
		<if test="searchValueOrder == null or searchValueOrder == ''">
			<include refid="order.pageOrderOrgAnd" />
		</if>
		<if test="searchValueOrder != null and searchValueOrder != ''">
		    <choose>
		        <when test="searchKeyOrder == 'type01'">
		AND		OB.ORD_NO = #{searchValueOrder}
		        </when>
		        <when test="searchKeyOrder == 'type02'">
		        	<include refid="order.pageOrderOrgAnd" />
		AND 		OB.ORD_NM IN (#{searchValueOrder, jdbcType=VARCHAR, typeHandler=biz.common.typehandler.CryptoTypeHandler}, #{searchValueOrder})
		        </when>
		        <when test="searchKeyOrder == 'type03'">
		        	<include refid="order.pageOrderOrgAnd" />
		AND 		OB.ORDR_ID IN (#{searchValueOrder, jdbcType=VARCHAR, typeHandler=biz.common.typehandler.CryptoTypeHandler}, #{searchValueOrder})
		        </when>
		        <when test="searchKeyOrder == 'type04'">
		        	<include refid="order.pageOrderOrgAnd" />
		AND 		ODA.ADRS_NM IN (#{searchValueOrder, jdbcType=VARCHAR, typeHandler=biz.common.typehandler.CryptoTypeHandler}, #{searchValueOrder})
		        </when>
		        <when test="searchKeyOrder == 'type05'">
		        	<include refid="order.pageOrderOrgAnd" />
		AND 		(
					OB.ORDR_TEL IN (#{searchValueOrder, jdbcType=VARCHAR, typeHandler=biz.common.typehandler.CryptoTypeHandler}, #{searchValueOrder})
					OR OB.ORDR_MOBILE IN (#{searchValueOrder, jdbcType=VARCHAR, typeHandler=biz.common.typehandler.CryptoTypeHandler}, #{searchValueOrder})
					)
		        </when>
		    </choose>
		</if>
	</sql>

	<sql id="pageOrderOrgAnd">
		<if test="ordAcptDtmStart != null">
		AND 		OB.ORD_ACPT_DTM <![CDATA[>=]]> #{ordAcptDtmStart}
		</if>
		<if test="ordAcptDtmEnd != null">
		AND 		OB.ORD_ACPT_DTM <![CDATA[<=]]> DATE_ADD(#{ordAcptDtmEnd},INTERVAL 1 DAY)
		</if>
		<if test="stId != null and stId != ''">
		AND 		OB.ST_ID = #{stId}
		</if>
		<if test="ordMdaCd != null and ordMdaCd != ''">
		AND 		OB.ORD_MDA_CD = #{ordMdaCd}
		</if>
		<if test="arrOrdMdaCd != null and arrOrdMdaCd.length > 0">
		AND		OB.ORD_MDA_CD IN (
				    <foreach collection="arrOrdMdaCd" item="ordMdaCd" separator="," >
				   #{ordMdaCd}
				    </foreach>
				    )
		</if>
		<if test="arrOrdDtlStatCd != null and arrOrdDtlStatCd.length > 0">
		AND		OD.ORD_DTL_STAT_CD IN (
				    <foreach collection="arrOrdDtlStatCd" item="ordDtlStatCd" separator="," >
				    #{ordDtlStatCd}
				    </foreach>
				    )
		</if>
		<if test="arrPayMeansCd != null and arrPayMeansCd.length > 0">
		AND EXISTS (
					SELECT 	1
					  FROM 	PAY_BASE PB 
					 WHERE 	PB.ORD_NO = OB.ORD_NO
					 AND		PB.ORD_CLM_GB_CD = '${@framework.common.constants.CommonConstants@ORD_CLM_GB_10}'	/* 주문 결제 정보*/ 
					 AND PB.PAY_MEANS_CD IN(
						<foreach collection="arrPayMeansCd" item="payMeansCd" separator="," >
					   		#{payMeansCd}
					    </foreach>
					 	) 
					)
		</if>
		<if test='exOrdCancelYn != null and exOrdCancelYn.equals("Y")'>
		AND		OD.RMN_ORD_QTY > 0
		</if>
		<if test='preReserveYn != null and preReserveYn.equals("Y")'>
		AND		OD.RSV_GOODS_YN = 'Y'
		</if>
		<if test="searchValueGoods != null and searchValueGoods != ''">
		    <choose>
		        <when test="searchKeyGoods == 'type01'">
		AND	OD.GOODS_NM LIKE CONCAT( '%', #{searchValueGoods}, '%' )
		        </when>
		        <when test="searchKeyGoods == 'type02'">
		AND 	OD.GOODS_ID = #{searchValueGoods}
		        </when>
		    </choose>
		</if>
		<if test="arrDlvrPrcsTpCd != null and arrDlvrPrcsTpCd.length > 0">
			<foreach collection="arrDlvrPrcsTpCd" item="dlvrPrcsTpCd" separator="," open="AND (CASE WHEN CP.COMP_TP_CD = '20' THEN '10' ELSE OB.DLVR_PRCS_TP_CD END) IN (" close=" ) " >
			    #{dlvrPrcsTpCd}
		    </foreach>
		</if>
		<if test="arrCompTpCd != null and arrCompTpCd.length > 0">
			<foreach collection="arrCompTpCd" item="compTpCd" separator="," open="AND	CP.COMP_TP_CD IN (" close=" ) " >
				#{compTpCd}
			</foreach>
		</if>
		<if test='"Y" == showAllLowCompany'>
        AND CP.UP_COMP_NO = #{compNo}
        </if>
		<if test='"Y" != showAllLowCompany'>
		    <if test="lowCompNo != null and lowCompNo != ''">
		AND OD.COMP_NO = #{lowCompNo} AND CP.UP_COMP_NO = #{compNo}
		    </if>
		    <if test="lowCompNo == null or lowCompNo == ''">
		        <if test="compNo != null and compNo != ''">
		AND 	OD.COMP_NO = #{compNo}
		        </if>
		    </if>
		</if>
		
		<!-- 회원정보 > 거래내역에서 사용 -->
		<!-- 회원번호 -->
		<if test='mbrNo != null'>
		AND OB.MBR_NO = #{mbrNo}
		</if>
		<!-- 주문번호 -->
		<if test='ordNo != null and ordNo !=""'>
		AND OB.ORD_NO = #{ordNo}
		</if>
		<!-- 송장번호 -->
		<if test='invNo != null and invNo !=""'>
		AND OB.ORD_NO IN (
			SELECT
				OD.ORD_NO
			FROM
				DELIVERY D
			INNER JOIN ORDER_DLVRA OD ON
				D.ORD_DLVRA_NO = OD.ORD_DLVRA_NO
			WHERE
				INV_NO = #{invNo}
		)
		</if>
		<!-- 거래상태 / 주문상세상태 -->
		<if test='ordDtlStatCd != null and ordDtlStatCd !=""'>
		AND OD.ORD_DTL_STAT_CD = #{ordDtlStatCd}
		</if>
		<!-- 할인쿠폰 사용한 내역 -->
		<if test='(useCoupon != null and useCoupon !="") and mbrNo != null'>
		AND OB.ORD_NO IN (
			SELECT 
				AB.ORD_NO
			FROM APL_BNFT AB
			INNER JOIN MEMBER_COUPON MC ON AB.MBR_CP_NO = MC.MBR_CP_NO 
			WHERE MC.MBR_NO = #{mbrNo}
		)
		</if>
	</sql>

	<select id="pageOrderOrgInterface" resultType="biz.app.order.model.interfaces.OrderListVO">
		<!--
			Query Name : order.pageOrderOrgInterface
			Description : 원 주문 목록 페이징 조회 (API용)
		-->
        SELECT 	/* order.pageOrderOrgInterface */
        			ODM.ORD_NO
	                , ODM.ST_ID
	                , SSI.ST_NM
	                , ODM.MBR_NO
	                , ODM.ORD_STAT_CD
	                , ODM.ORD_MDA_CD
	                , ODM.CHNL_ID
	                , CSI.CHNL_NM
	                , ODM.ORD_NM
	                , ODM.ORDR_ID
	                , ODM.ORDR_TEL
	                , ODM.ORDR_MOBILE
	                , ODM.ORDR_EMAIL
	                , ODM.ORD_ACPT_DTM
	                , ODM.ORD_CPLT_DTM
	                , ODM.OUTSIDE_ORD_NO
	                , ODM.ORD_DTL_CNT
	                , ODM.ORD_DTL_SEQ
					, ODM.ORD_DTL_STAT_CD
					, IF(ODM.RMN_ORD_QTY = 0 AND ODM.CNC_QTY > 1, '주문취소', (SELECT DTL_NM FROM CODE_DETAIL WHERE GRP_CD = 'ORD_DTL_STAT' AND DTL_CD = ODM.ORD_DTL_STAT_CD)) ORD_DTL_STAT_CD_NM
					, ODM.GOODS_ID
					, ODM.GOODS_NM
					, ODM.ITEM_NO
					, ODM.ITEM_NM
					, ODM.ORD_QTY
					, ODM.CNC_QTY
					, ODM.RTN_QTY
					, ODM.RMN_ORD_QTY
					, FN_GET_ORDER_CLAIM_ING_YN(ODM.ORD_NO,  ODM.ORD_DTL_SEQ) AS CLM_ING_YN /* 클레임 진행 여부 */
					, ODM.SALE_AMT
					, ODM.PAY_AMT
					, ODM.RMN_ORD_QTY * ODM.PAY_AMT AS PAY_SUM_AMT
					, ODM.COMP_NO
					, ODM.COMP_GOODS_ID
					, ODM.COMP_ITEM_ID
					, ODM.DISP_CLSF_NO
					, ODM.DLVR_NO
					, ODM.DLVRC_NO
					, ODM.ORD_DLVRA_NO
	                , ODM.ADRS_NM
	                , ODM.TEL
	                , ODM.MOBILE
	                , ODM.ROAD_ADDR
	                , ODM.ROAD_DTL_ADDR
	                , ODM.FRB_ORD_DTL_SEQ
	                , ODM.FRB_GOODS_ID
	                , ODM.FRB_NO
                    , ODM.FRB_APL_QTY
                    , ODM.PAY_NO
                    , ODM.PAY_MEANS_CD
                    , ODM.PAY_CPLT_DTM
                    , ODM.PAY_AMT2
                    , ODM.APL_ORD_DTL_SEQ
                    , ODM.APL_BENEFIT_NO
                    , ODM.APL_BNFT_GB_CD
                    , ODM.APL_BNFT_TP_CD
                    , ODM.APL_BENEFIT_NM
                    , ODM.APL_AMT
                    , ODM.APL_COMP_BDN_AMT
 		FROM		(
					 SELECT	OB.ORD_NO
				                , OB.ST_ID
				                , OB.MBR_NO
				                , OB.ORD_STAT_CD
				                , OB.ORD_MDA_CD
				                , OB.CHNL_ID
				                , OB.ORD_NM
				                , OB.ORDR_ID
				                , OB.ORDR_TEL
				                , OB.ORDR_MOBILE
				                , OB.ORDR_EMAIL
				                , OB.ORD_ACPT_DTM
				                , OB.ORD_CPLT_DTM
				                , OB.OUTSIDE_ORD_NO
				                , OB.ORD_DTL_CNT
				                , OD.ORD_DTL_SEQ
								, OD.ORD_DTL_STAT_CD
								, OD.GOODS_ID
								, OD.GOODS_NM
								, OD.ITEM_NO
								, OD.ITEM_NM
								, OD.ORD_QTY
								, OD.CNC_QTY
								, OD.RTN_QTY
								, OD.RMN_ORD_QTY
								, OD.SALE_AMT
								, OD.PAY_AMT
								, OD.COMP_NO
								, OD.COMP_GOODS_ID
								, OD.COMP_ITEM_ID
								, OD.DISP_CLSF_NO
								, OD.DLVR_NO
								, OD.DLVRC_NO
								, OD.ORD_DLVRA_NO
				                , ODA.ADRS_NM
				                , ODA.TEL
				                , ODA.MOBILE
				                , ODA.ROAD_ADDR
				                , ODA.ROAD_DTL_ADDR
				                , OF.ORD_DTL_SEQ AS FRB_ORD_DTL_SEQ
				                , OF.GOODS_ID AS FRB_GOODS_ID
				                , OF.FRB_NO
                                , OF.APL_QTY AS FRB_APL_QTY
                                , PB.PAY_NO
                                , PB.PAY_MEANS_CD
                                , PB.PAY_CPLT_DTM
                                , PB.PAY_AMT AS PAY_AMT2
                                , AB.ORD_DTL_SEQ AS APL_ORD_DTL_SEQ
                                , AB.APL_BENEFIT_NO
                                , AB.APL_BNFT_GB_CD
                                , AB.APL_BNFT_TP_CD
                                , CASE WHEN AB.APL_BNFT_GB_CD = '${@framework.common.constants.CommonConstants@APL_BNFT_GB_10}' THEN PRB.PRMT_NM ELSE CPB.CP_NM END AS APL_BENEFIT_NM
                                , AB.APL_AMT
                                , AB.COMP_BDN_AMT AS APL_COMP_BDN_AMT
					FROM		ORDER_BASE OB
				                , ORDER_DETAIL OD
				                   LEFT OUTER JOIN DELIVERY DD ON ( OD.DLVR_NO = DD.DLVR_NO )
				                   LEFT OUTER JOIN ORDER_FREEBIE OF ON (
				                   			OD.ORD_NO = OF.ORD_NO
				                   			AND OD.ORD_DTL_SEQ = OF.ORD_DTL_SEQ
				                   			AND OD.GOODS_ID = OF.GOODS_ID
				                   			AND OF.ORD_CLM_GB_CD = '${@framework.common.constants.CommonConstants@ORD_CLM_GB_10}'
				                   )
				                   LEFT OUTER JOIN PAY_BASE PB ON (
				                   			OD.ORD_NO = PB.ORD_NO
				                   			AND PB.PAY_GB_CD = '${@framework.common.constants.CommonConstants@PAY_GB_10}'
				                   			AND PB.ORD_CLM_GB_CD = '${@framework.common.constants.CommonConstants@ORD_CLM_GB_10}'
				                   			AND PB.PAY_STAT_CD = '${@framework.common.constants.CommonConstants@PAY_STAT_01}'
				                   			AND PB.CNC_YN = '${@framework.common.constants.CommonConstants@COMM_YN_N}'
				                  )
				                  LEFT OUTER JOIN APL_BNFT AB ON (
				                  			OD.ORD_NO = AB.ORD_NO
				                  			AND OD.ORD_DTL_SEQ = AB.ORD_DTL_SEQ
				                  			AND AB.CNC_YN = '${@framework.common.constants.CommonConstants@COMM_YN_N}'
				                  )
				                  LEFT OUTER JOIN PROMOTION_BASE PRB ON ( AB.APL_NO = PRB.PRMT_NO )
                                  LEFT OUTER JOIN COUPON_BASE CPB ON ( AB.APL_NO = CPB.CP_NO )
			                  	, ORDER_DLVRA ODA
			                  	, COMPANY_BASE CP
					WHERE	OB.ORD_NO = OD.ORD_NO
			        AND    	OD.ORD_DLVRA_NO = ODA.ORD_DLVRA_NO
			        AND     OD.COMP_NO = CP.COMP_NO
					<include refid="order.pageOrderOrgInterfaceWhere" />
			        ORDER BY OB.ORD_ACPT_DTM DESC, OB.ORD_NO, OD.ORD_DTL_SEQ ASC
			        <include refid="bizCommon.pageSql" />
					) ODM
        			, ST_STD_INFO SSI
        			, CHNL_STD_INFO CSI
        WHERE	ODM.ST_ID = SSI.ST_ID
        AND		ODM.CHNL_ID = CSI.CHNL_ID
        ORDER BY ODM.ORD_ACPT_DTM DESC, ODM.ORD_NO, ODM.ORD_DTL_SEQ ASC
    </select>

    <select id="pageOrderOrgInterfaceCount"     resultType="java.lang.Integer">
		<!--
			Query Name : order.pageOrderOrgInterfaceCount
			Description : 주문 목록 Count 조회 (API용)
		-->
		SELECT	COUNT(*)
		FROM		ORDER_BASE OB
	                , ORDER_DETAIL OD
	                   LEFT OUTER JOIN DELIVERY DD ON ( OD.DLVR_NO = DD.DLVR_NO )
	                   LEFT OUTER JOIN ORDER_FREEBIE OF ON (
	                   			OD.ORD_NO = OF.ORD_NO
	                   			AND OD.ORD_DTL_SEQ = OF.ORD_DTL_SEQ
	                   			AND OD.GOODS_ID = OF.GOODS_ID
	                   			AND OF.ORD_CLM_GB_CD = '${@framework.common.constants.CommonConstants@ORD_CLM_GB_10}'
	                   )
	                   LEFT OUTER JOIN PAY_BASE PB ON (
	                   			OD.ORD_NO = PB.ORD_NO
	                   			AND PB.PAY_GB_CD = '${@framework.common.constants.CommonConstants@PAY_GB_10}'
	                   			AND PB.ORD_CLM_GB_CD = '${@framework.common.constants.CommonConstants@ORD_CLM_GB_10}'
	                   			AND PB.PAY_STAT_CD = '${@framework.common.constants.CommonConstants@PAY_STAT_01}'
	                   			AND PB.CNC_YN = '${@framework.common.constants.CommonConstants@COMM_YN_N}'
	                  )
	                  LEFT OUTER JOIN APL_BNFT AB ON (
	                  			OD.ORD_NO = AB.ORD_NO
	                  			AND OD.ORD_DTL_SEQ = AB.ORD_DTL_SEQ
	                  			AND AB.CNC_YN = '${@framework.common.constants.CommonConstants@COMM_YN_N}'
	                  )
	                  LEFT OUTER JOIN PROMOTION_BASE PRB ON ( AB.APL_NO = PRB.PRMT_NO )
                      LEFT OUTER JOIN COUPON_BASE CPB ON ( AB.APL_NO = CPB.CP_NO )
                  	, ORDER_DLVRA ODA
                  	, COMPANY_BASE CP
		WHERE	OB.ORD_NO = OD.ORD_NO
        AND    	OD.ORD_DLVRA_NO = ODA.ORD_DLVRA_NO
        AND     OD.COMP_NO = CP.COMP_NO
		<include refid="order.pageOrderOrgInterfaceWhere" />
    </select>

	<sql id="pageOrderOrgInterfaceWhere">
        AND     	OB.DATA_STAT_CD = '${@framework.common.constants.CommonConstants@DATA_STAT_01}' /* 활성건 기준 */
/*        AND     (OD.RMN_ORD_QTY - OD.RTN_QTY > 0)  */ /* 취소/반품은 제외함 */

		<if test="searchValueOrder == null or searchValueOrder == ''">
			<include refid="order.pageOrderOrgInterfaceAnd" />
		</if>

		<if test="searchValueOrder != null and searchValueOrder != ''">
		    <choose>
		        <when test="searchKeyOrder == 'type01'">
		AND		OB.ORD_NO = #{searchValueOrder}
		        </when>
		        <when test="searchKeyOrder == 'type02'">
		        	<include refid="order.pageOrderOrgInterfaceAnd" />
		AND 		OB.ORD_NM IN (#{searchValueOrder, jdbcType=VARCHAR, typeHandler=biz.common.typehandler.CryptoTypeHandler}, #{searchValueOrder})
		        </when>
		        <when test="searchKeyOrder == 'type03'">
		        	<include refid="order.pageOrderOrgInterfaceAnd" />
		AND 		OB.ORDR_ID IN (#{searchValueOrder, jdbcType=VARCHAR, typeHandler=biz.common.typehandler.CryptoTypeHandler}, #{searchValueOrder})
		        </when>
		        <when test="searchKeyOrder == 'type04'">
		        	<include refid="order.pageOrderOrgInterfaceAnd" />
		AND 		ODA.ADRS_NM IN (#{searchValueOrder, jdbcType=VARCHAR, typeHandler=biz.common.typehandler.CryptoTypeHandler}, #{searchValueOrder})
		        </when>
		    </choose>
		</if>
	</sql>

	<sql id="pageOrderOrgInterfaceAnd">
		<if test="dlvrCmdDtmStart != null">
		AND 		DD.DLVR_CMD_DTM <![CDATA[>=]]> #{dlvrCmdDtmStart}
		</if>
		<if test="dlvrCmdDtmEnd != null">
		AND 		DD.DLVR_CMD_DTM <![CDATA[<=]]> #{dlvrCmdDtmEnd}
		</if>

		<if test="stId != null and stId != ''">
		AND 		OB.ST_ID = #{stId}
		</if>
		<if test="arrOrdDtlStatCd != null and arrOrdDtlStatCd.length > 0">
		AND		OD.ORD_DTL_STAT_CD IN (
				    <foreach collection="arrOrdDtlStatCd" item="ordDtlStatCd" separator="," >
				    #{ordDtlStatCd}
				    </foreach>
				    )
		</if>
		<if test="searchValueGoods != null and searchValueGoods != ''">
		    <choose>
		        <when test="searchKeyGoods == 'type01'">
		AND	OD.GOODS_NM LIKE CONCAT( '%', #{searchValueGoods}, '%' )
		        </when>
		        <when test="searchKeyGoods == 'type02'">
		AND 	OD.GOODS_ID = #{searchValueGoods}
		        </when>
		        <when test="searchKeyGoods == 'type03'">
		AND 	OD.ITEM_NM LIKE CONCAT( '%', #{searchValueGoods}, '%' )
		        </when>
		        <when test="searchKeyGoods == 'type04'">
		AND 	OD.ITEM_NO = #{searchValueGoods}
		        </when>
		    </choose>
		</if>
		<if test='"Y" == showAllLowCompany'>
        AND CP.UP_COMP_NO = #{compNo}
        </if>
		<if test='"Y" != showAllLowCompany'>
		    <if test="lowCompNo != null and lowCompNo != ''">
		AND OD.COMP_NO = #{lowCompNo} AND CP.UP_COMP_NO = #{compNo}
		    </if>
		    <if test="lowCompNo == null or lowCompNo == ''">
		        <if test="compNo != null and compNo != ''">
		AND 	OD.COMP_NO = #{compNo}
		        </if>
		    </if>
		</if>
		<if test="compNoWithLowComp != null and compNoWithLowComp != ''">
			AND ( OD.COMP_NO = #{compNoWithLowComp} OR OD.UP_COMP_NO = #{compNoWithLowComp} )
		</if>
	</sql>

	<select id="getOrderPayInfo" resultType="biz.app.order.model.OrderPayVO">
			<!--
			Query Name : order.getOrderPayInfo
			Description : 주문 결제 총괄 정보 조회
		-->
		SELECT  	/* order.getOrderPayInfo */ 
		             ORD_GOODS.ORD_NO
					,ORD_GOODS.GOODS_TOTAL_AMT AS GOODS_AMT
			        ,ORD_GOODS.CP_DC_TOTAL_AMT AS CP_DC_AMT
			        ,ORD_GOODS.ORD_SVMN_TOTAL_AMT AS ORD_SVMN
			        ,PAY_SVMN.PAY_AMT AS SVMN_AMT
			        ,CLM_SVMN.PAY_AMT AS CLM_SVMN_AMT
			        ,FN_GET_ORDER_PAY_AMT(#{ordNo}) AS PAY_AMT
			        ,DLVR.REAL_DLVR_AMT AS DLVR_AMT
			        ,PAY_INFO.PAY_MEANS_CD
			        ,PAY_INFO.PAY_STAT_CD
			        ,PAY_INFO.PAY_CPLT_DTM
			        ,PAY_INFO.CFM_NO
			        ,PAY_INFO.CFM_DTM
			        ,PAY_INFO.CARDC_CD
					,PAY_INFO.CARD_NO
			        ,PAY_INFO.BANK_CD
			        ,PAY_INFO.ACCT_NO
			        ,PAY_INFO.OOA_NM
					,PAY_INFO.DPSTR_NM
					,PAY_INFO.DPST_SCHD_DT
					, PAY_INFO.INSTMNT_INFO
					, PAY_INFO.FINTR_YN
					, PAY_INFO.DEAL_NO			<!-- 추가  -->
					,CLMPAY.CLM_GOODS_AMT		<!-- 추가  -->
					,CLMPAY.CLM_ORG_DLVRC_AMT	<!-- 추가  -->
					,CLMPAY.CLM_CP_DC_AMT		<!-- 추가  -->
					,CLMPAY.CLM_NEW_RTN_ORG_DLVRC_AMT	<!-- 추가  -->
					,CLMPAY.CLM_DLVRC_AMT	<!-- 추가  -->
					,CLMPAY.CLM_PAY_AMT	<!-- 추가  -->
					,ORDPAYAMT.ORD_PAY_AMT	<!-- 추가  -->
					,DLVR_ORG.ORG_DLVR_AMT <!-- 추가  -->
					,ORD_GOODS.ORG_GOODS_TOTAL_AMT AS ORG_GOODS_AMT	<!-- 추가  -->
			        ,ORD_GOODS.ORG_CP_DC_TOTAL_AMT AS ORG_CP_DC_AMT	<!-- 추가  -->
		FROM    (
			        SELECT  	OD2.ORD_NO
				                ,SUM((OD2.SALE_AMT * OD2.VLD_QTY)) AS GOODS_TOTAL_AMT
				                ,SUM((OD2.CP_DC_AMT * OD2.VLD_QTY)+ (OD2.RMN_PAY_AMT * -1)) AS CP_DC_TOTAL_AMT
				                ,SUM(OD2.ISU_SCHD_PNT) AS ORD_SVMN_TOTAL_AMT
				                ,SUM((OD2.SALE_AMT * OD2.ORD_QTY)) AS ORG_GOODS_TOTAL_AMT	<!-- 추가  -->
				                ,SUM((OD2.CP_DC_AMT * OD2.ORD_QTY)+ (OD2.RMN_PAY_AMT * -1)) AS ORG_CP_DC_TOTAL_AMT	<!-- 추가  -->
			        FROM    (
			        			SELECT	ROD.ORD_NO
			        						,ROD.VLD_QTY
			        						,ROD.SALE_AMT
			        						,ROD.CP_DC_AMT
			        						,ROD.PAY_AMT
			        						,ROD.ORD_SVMN
			        						,ROD.RMN_PAY_AMT
			        						,ROD.ISU_SCHD_PNT
			        						,ROD.ORD_QTY	<!-- 추가  -->
			        			FROM		(
							                SELECT  	OD.ORD_NO
								                        , RMN_ORD_QTY - FN_GET_ORD_CLM_RTN_CPLT_QTY(OD.ORD_NO, OD.ORD_DTL_SEQ) AS VLD_QTY
								                        , OD.SALE_AMT - FN_GET_ORDER_DTL_PRMT_DC_AMT(OD.ORD_NO, OD.ORD_DTL_SEQ) AS SALE_AMT
								                        , FN_GET_ORDER_DTL_CP_DC_AMT(OD.ORD_NO, OD.ORD_DTL_SEQ) AS CP_DC_AMT
								                        , OD.PAY_AMT
								                        , OD.ORD_SVMN
								                        , OD.RMN_PAY_AMT
														, OD.ISU_SCHD_PNT
														, OD.ORD_QTY	<!-- 추가  -->
							                FROM    	ORDER_DETAIL OD
							                WHERE   	OD.ORD_NO = #{ordNo}
							                ) ROD
				               <!--  WHERE	ROD.VLD_QTY > 0  -->
				                ) OD2
			        GROUP BY OD2.ORD_NO
			        ) ORD_GOODS
			        LEFT OUTER JOIN (
				                          SELECT  ORD_NO
				                                  , PAY_MEANS_CD
				                                  , PAY_STAT_CD
				                                  , PAY_CPLT_DTM
				                                  , CFM_NO
				                                  , CFM_DTM
				                                  , CARDC_CD
												  , CARD_NO
				                                  , BANK_CD
				                                  , ACCT_NO
				                                  , OOA_NM
				                                  , DPSTR_NM
				                                  , DPST_SCHD_DT
												  , INSTMNT_INFO
												  , FINTR_YN
												  , DEAL_NO
				                          FROM    PAY_BASE
				                          WHERE   ORD_CLM_GB_CD = '${@framework.common.constants.CommonConstants@ORD_CLM_GB_10}'
				                          AND     PAY_MEANS_CD NOT IN ('${@framework.common.constants.CommonConstants@PAY_MEANS_50}', '${@framework.common.constants.CommonConstants@PAY_MEANS_80}', '${@framework.common.constants.CommonConstants@PAY_MEANS_81}')
				                          AND     ORD_NO  = #{ordNo}
				                          ) PAY_INFO ON PAY_INFO.ORD_NO = ORD_GOODS.ORD_NO
			        ,
			        (
			        SELECT  IFNULL(SUM(IF(PAY_GB_CD = '${@framework.common.constants.CommonConstants@PAY_GB_10}', PAY_AMT, PAY_AMT * -1)),0) AS PAY_AMT
			        FROM    PAY_BASE
			        WHERE   ORD_NO = #{ordNo}
			        AND     CNC_YN = '${@framework.common.constants.CommonConstants@COMM_YN_N}'
			        AND     PAY_MEANS_CD = '${@framework.common.constants.CommonConstants@PAY_MEANS_80}'
			        AND     (ORD_CLM_GB_CD = '10' OR (ORD_CLM_GB_CD = '20' AND CLM_NO IN (SELECT CLM_NO FROM CLAIM_BASE WHERE CLM_STAT_CD = '${@framework.common.constants.CommonConstants@CLM_STAT_30}')))
			        ) PAY_SVMN
			        ,
			        (
			        SELECT  IFNULL(SUM(IF(PAY_GB_CD = '10', PAY_AMT, PAY_AMT * -1)),0) AS PAY_AMT
			        FROM    PAY_BASE
			        WHERE   ORD_NO = #{ordNo}
			        AND     CNC_YN = '${@framework.common.constants.CommonConstants@COMM_YN_N}'
			        AND     PAY_MEANS_CD = '${@framework.common.constants.CommonConstants@PAY_MEANS_80}'
			        AND     ORD_CLM_GB_CD = '20'
			        ) CLM_SVMN
			        ,
			        (
					SELECT IFNULL(SUM(A.REAL_DLVR_AMT), 0) AS REAL_DLVR_AMT
					  FROM (SELECT A2.REAL_DLVR_AMT
					          FROM ORDER_DETAIL A1
					          JOIN DELIVERY_CHARGE A2 
					            ON A2.DLVRC_NO = A1.DLVRC_NO 
					           AND A2.CNC_YN = '${@framework.common.constants.CommonConstants@COMM_YN_N}'
					         WHERE A1.ORD_NO = #{ordNo}
					         UNION 
					        SELECT A3.REAL_DLVR_AMT
					          FROM CLAIM_BASE A1
					          JOIN CLAIM_DETAIL A2
					            ON A2.CLM_NO = A1.CLM_NO
					          JOIN DELIVERY_CHARGE A3 
					            ON A3.DLVRC_NO = A2.DLVRC_NO 
					           AND A3.CNC_YN = '${@framework.common.constants.CommonConstants@COMM_YN_N}'
					         WHERE A1.ORD_NO = #{ordNo}
					           AND A1.CLM_STAT_CD = '${@framework.common.constants.CommonConstants@CLM_STAT_30}'   
					         UNION
					        SELECT A3.REAL_DLVR_AMT
					          FROM CLAIM_BASE A1
					          JOIN CLAIM_DETAIL A2
					            ON A2.CLM_NO = A1.CLM_NO
					          JOIN DELIVERY_CHARGE A3 
					            ON A3.DLVRC_NO = A2.RTN_DLVRC_NO 
					           AND A3.CNC_YN = '${@framework.common.constants.CommonConstants@COMM_YN_N}'
					         WHERE A1.ORD_NO = #{ordNo}
					           AND A1.CLM_STAT_CD = '${@framework.common.constants.CommonConstants@CLM_STAT_30}'
					       ) A
			        ) DLVR
			        
			        <!-- 추가  -->
			        ,
			        (
		        	     SELECT   
                           IFNULL((SELECT IFNULL(SUM((SALE_AMT - FN_GET_ORDER_DTL_PRMT_DC_AMT(ORD_NO, ORD_DTL_SEQ)) * CLM_QTY), 0) FROM CLAIM_DETAIL WHERE CLM_NO = AA.CLM_NO), 0)AS CLM_GOODS_AMT /* 상품 합계 금액 */
                           ,IFNULL(SUM(ORG_DLVRC_AMT), 0)AS CLM_ORG_DLVRC_AMT
                           ,IFNULL(SUM(CP_DC_AMT), 0)AS CLM_CP_DC_AMT
                           ,IFNULL(SUM(NEW_RTN_ORG_DLVRC_AMT), 0)AS CLM_NEW_RTN_ORG_DLVRC_AMT
                           ,IFNULL(SUM(CLM_DLVRC_AMT), 0)AS CLM_DLVRC_AMT
                           ,IFNULL(SUM(PAY_AMT), 0)AS CLM_PAY_AMT
                        FROM
                        (   
                             SELECT   
                                    PB.CLM_NO
                                       , (SELECT IFNULL(SUM(REAL_DLVR_AMT), 0) FROM DELIVERY_CHARGE WHERE CNC_CLM_NO = PB.CLM_NO) AS ORG_DLVRC_AMT  /* 원 취소된 배송 금액 */
                                       , (SELECT IFNULL(SUM((FN_GET_ORDER_DTL_CP_DC_AMT(ORD_NO, ORD_DTL_SEQ) * CLM_QTY)+(RMN_PAY_AMT * -1)), 0) FROM CLAIM_DETAIL WHERE CLM_NO = PB.CLM_NO) AS CP_DC_AMT  /* 쿠폰 할인 금액 */
                                    , (SELECT IFNULL(SUM(REAL_DLVR_AMT), 0) FROM DELIVERY_CHARGE
                                       WHERE DLVRC_NO IN (SELECT RTN_DLVRC_NO FROM CLAIM_DETAIL WHERE CLM_NO = PB.CLM_NO)) AS NEW_RTN_ORG_DLVRC_AMT  /* 신규 반품/교한 회수 배송비 금액 */
                                    , (SELECT IFNULL(SUM(REAL_DLVR_AMT), 0) FROM DELIVERY_CHARGE
                                       WHERE DLVRC_NO IN (SELECT DLVRC_NO FROM CLAIM_DETAIL WHERE CLM_NO = PB.CLM_NO)
                                      ) AS CLM_DLVRC_AMT  /* 추가 배송비 */       
                                    , PB.PAY_AMT            /* 결제 금액 */
                                FROM    PAY_BASE PB /* 결제 기본 */
                                WHERE PB.CLM_NO in (SELECT CLM_NO FROM CLAIM_BASE WHERE ORD_NO = #{ordNo} AND CLM_STAT_CD = '${@framework.common.constants.CommonConstants@CLM_STAT_30}')
                        )AA
			        )CLMPAY
			        ,
			        (
				        SELECT  IFNULL(SUM(REAL_DLVR_AMT), 0) AS ORG_DLVR_AMT
				        FROM    DELIVERY_CHARGE
				        WHERE 	1=1  
				        AND     DLVRC_NO IN (
				                            SELECT  DLVRC_NO AS DLVRC_NO
				                            FROM    ORDER_DETAIL
				                            WHERE   ORD_NO = #{ordNo}			                           
				                            )
			        )DLVR_ORG
			        , 
			        (
				        select  IFNULL(SUM(IF(PAY_GB_CD = '${@framework.common.constants.CommonConstants@PAY_GB_10}', PAY_AMT, 0)),0)AS ORD_PAY_AMT  from pay_base pb 
						where ORD_NO = #{ordNo}
						and CNC_YN ='N'
						AND PAY_MEANS_CD NOT IN ('${@framework.common.constants.CommonConstants@PAY_MEANS_50}', '${@framework.common.constants.CommonConstants@PAY_MEANS_80}', '${@framework.common.constants.CommonConstants@PAY_MEANS_81}')  /* 적립금(50), GS 포인트(80), MP PNT 제외 */
						AND (ORD_CLM_GB_CD = '10' OR (ORD_CLM_GB_CD = '20' AND CLM_NO IN (SELECT CLM_NO FROM CLAIM_BASE WHERE CLM_STAT_CD = '${@framework.common.constants.CommonConstants@CLM_STAT_30}' AND ord_no = #{ordNo})))
					)ORDPAYAMT
			        <!-- 추가  -->
	</select>
	
	<select id="getFrontPayInfo" resultType="biz.app.order.model.OrderPayVO">
		<!--
			Query Name : order.getFrontPayInfo
			Description : 프론트 결제 정보 조회
		-->
		SELECT /* QUERYID(order.getFrontPayInfo) */
		       SUM(IF(A1.ORD_CLM_GB_CD = '10' AND A1.PAY_MEANS_CD != '80' AND A1.PAY_MEANS_CD != '81', PAY_AMT, 0)) AS ORG_PAY_AMT /* 최초결제금액 */
		     , (SELECT SUM(SALE_AMT * ORD_QTY) FROM ORDER_DETAIL WHERE ORD_NO = A1.ORD_NO) AS ORG_GOODS_AMT /* 최초 상품금액 */
		     , (SELECT SUM(IFNULL(X1.REAL_DLVR_AMT, 0) + IFNULL(X1.CP_DC_AMT , 0)) 
		          FROM DELIVERY_CHARGE X1 
		         WHERE X1.DLVRC_NO IN (SELECT DLVRC_NO FROM ORDER_DETAIL WHERE ORD_NO = A1.ORD_NO)) AS ORG_DLVR_AMT /* 최초 배송비 */
		     , IFNULL(((SELECT IFNULL(SUM(X2.APL_AMT * X1.ORD_QTY + X2.RMN_APL_AMT) * -1, 0)
		              FROM ORDER_DETAIL X1
		              JOIN APL_BNFT X2 ON X2.ORD_NO = X1.ORD_NO AND X2.ORD_DTL_SEQ = X1.ORD_DTL_SEQ AND X2.APL_BNFT_TP_CD IN ('210', '220')
		             WHERE X1.ORD_NO = A1.ORD_NO)
		           + 
		           (SELECT IFNULL(SUM(IFNULL(CP_DC_AMT, 0)) * -1, 0)
		              FROM DELIVERY_CHARGE X1 
		             WHERE X1.DLVRC_NO IN (SELECT DLVRC_NO FROM ORDER_DETAIL WHERE ORD_NO = A1.ORD_NO)
		               AND X1.CP_NO IS NOT NULL)
		           )
		      , 0) AS ORG_CP_DC_AMT /* 최초 쿠폰할인 */
		      , SUM(IF(A1.ORD_CLM_GB_CD = '10' AND A1.PAY_MEANS_CD = '80', PAY_AMT * -1, 0)) AS ORG_GS_PNT /* 최초 포인트 */
		      , IFNULL((SELECT IFNULL(USE_PNT * -1, 0) FROM MP_LNK_HIST WHERE ORD_NO = #{ordNo} AND CLM_NO IS NULL), 0) AS ORG_MP_PNT
		      , IFNULL((SELECT IFNULL(ADD_USE_PNT * -1, 0) FROM MP_LNK_HIST WHERE ORD_NO = #{ordNo} AND CLM_NO IS NULL), 0) AS ORG_ADD_MP_PNT
		      , SUM(IF(A1.ORD_CLM_GB_CD = '20' AND A1.PAY_MEANS_CD != '80' AND A1.PAY_MEANS_CD != '81', IF(A1.PAY_GB_CD = '10' OR A1.PAY_GB_CD = '30', PAY_AMT*-1, PAY_AMT), 0)) AS REFUND_AMT /* 환불금액 */
		      , IFNULL(SUM((SELECT IFNULL(SUM(IFNULL(X1.SALE_AMT * X1.CLM_QTY, 0)), 0) FROM CLAIM_DETAIL X1 JOIN CLAIM_BASE X2 ON X2.CLM_NO = X1.CLM_NO WHERE X1.CLM_NO = A1.CLM_NO AND X2.CLM_TP_CD != '30' AND X1.CLM_DTL_STAT_CD != '250' AND X2.CLM_STAT_CD != '40' AND A1.RNUM = 1)), 0) AS REFUND_CNCL_GOODS_AMT /* 환불 취소상품금액 */
		      , (
		         SUM(
		         IF((SELECT IFNULL(SUM(IFNULL(REAL_DLVR_AMT, 0)), 0) FROM DELIVERY_CHARGE WHERE CNC_CLM_NO = A1.CLM_NO AND A1.RNUM = 1) > (SELECT IFNULL(SUM(IFNULL(REAL_DLVR_AMT, 0)), 0) FROM DELIVERY_CHARGE WHERE DLVRC_NO IN (SELECT X1.DLVRC_NO FROM CLAIM_DETAIL X1 JOIN CLAIM_BASE X2 ON X2.CLM_NO = X1.CLM_NO WHERE X1.CLM_NO = A1.CLM_NO AND X1.CLM_DTL_STAT_CD != '250' AND X2.CLM_STAT_CD != '40' AND A1.RNUM = 1))
		         , (SELECT IFNULL(SUM(IFNULL(REAL_DLVR_AMT, 0)), 0) FROM DELIVERY_CHARGE WHERE CNC_CLM_NO = A1.CLM_NO AND A1.RNUM = 1) - (SELECT IFNULL(SUM(IFNULL(REAL_DLVR_AMT, 0)), 0) FROM DELIVERY_CHARGE WHERE DLVRC_NO IN (SELECT X1.DLVRC_NO FROM CLAIM_DETAIL X1 JOIN CLAIM_BASE X2 ON X2.CLM_NO = X1.CLM_NO WHERE X1.CLM_NO = A1.CLM_NO AND X1.CLM_DTL_STAT_CD != '250' AND X2.CLM_STAT_CD != '40' AND A1.RNUM = 1))
		         , 0)
		         )
		        ) AS REFUND_DLVR_AMT /* 환불 배송비 */
		      , IFNULL(SUM((SELECT IFNULL(SUM(IFNULL((FN_GET_ORDER_DTL_CP_DC_AMT(X1.ORD_NO, X1.ORD_DTL_SEQ) * X1.CLM_QTY) + (X1.RMN_PAY_AMT * -1), 0)), 0) FROM CLAIM_DETAIL X1 JOIN CLAIM_BASE X2 ON X2.CLM_NO = X1.CLM_NO WHERE X1.CLM_NO = A1.CLM_NO AND X1.CLM_DTL_STAT_CD != '250' AND X2.CLM_STAT_CD != '40' AND A1.RNUM = 1)), 0) * -1 AS REFUND_CP_DC_AMT /* 환불 쿠폰할인 */
		      , (
		         SUM(
		         IF(
		           (SELECT IFNULL(SUM(IFNULL(REAL_DLVR_AMT, 0)), 0) FROM DELIVERY_CHARGE WHERE DLVRC_NO IN (SELECT X1.RTN_DLVRC_NO FROM CLAIM_DETAIL X1 JOIN CLAIM_BASE X2 ON X2.CLM_NO = X1.CLM_NO WHERE X1.CLM_NO = A1.CLM_NO AND X1.CLM_DTL_STAT_CD != '250' AND X2.CLM_STAT_CD != '40' AND A1.RNUM = 1)) + (SELECT IFNULL(SUM(IFNULL(REAL_DLVR_AMT, 0)), 0) FROM DELIVERY_CHARGE WHERE DLVRC_NO IN (SELECT X1.DLVRC_NO FROM CLAIM_DETAIL X1 JOIN CLAIM_BASE X2 ON X2.CLM_NO = X1.CLM_NO WHERE X1.CLM_NO = A1.CLM_NO AND X1.CLM_DTL_STAT_CD != '250' AND X2.CLM_STAT_CD != '40' AND A1.RNUM = 1)) > 0
		            AND 
		           (SELECT IFNULL(SUM(IFNULL(REAL_DLVR_AMT, 0)), 0) FROM DELIVERY_CHARGE WHERE DLVRC_NO IN (SELECT X1.RTN_DLVRC_NO FROM CLAIM_DETAIL X1 JOIN CLAIM_BASE X2 ON X2.CLM_NO = X1.CLM_NO WHERE X1.CLM_NO = A1.CLM_NO AND X1.CLM_DTL_STAT_CD != '250' AND X2.CLM_STAT_CD != '40' AND A1.RNUM = 1)) + (SELECT IFNULL(SUM(IFNULL(REAL_DLVR_AMT, 0)), 0) FROM DELIVERY_CHARGE WHERE DLVRC_NO IN (SELECT X1.DLVRC_NO FROM CLAIM_DETAIL X1 JOIN CLAIM_BASE X2 ON X2.CLM_NO = X1.CLM_NO WHERE X1.CLM_NO = A1.CLM_NO AND X1.CLM_DTL_STAT_CD != '250' AND X2.CLM_STAT_CD != '40' AND A1.RNUM = 1)) > (SELECT IFNULL(SUM(IFNULL(REAL_DLVR_AMT, 0)), 0) FROM DELIVERY_CHARGE WHERE CNC_CLM_NO = A1.CLM_NO AND A1.RNUM = 1)
		         , (SELECT IFNULL(SUM(IFNULL(REAL_DLVR_AMT, 0)), 0) FROM DELIVERY_CHARGE WHERE DLVRC_NO IN (SELECT X1.RTN_DLVRC_NO FROM CLAIM_DETAIL X1 JOIN CLAIM_BASE X2 ON X2.CLM_NO = X1.CLM_NO WHERE X1.CLM_NO = A1.CLM_NO AND X1.CLM_DTL_STAT_CD != '250' AND X2.CLM_STAT_CD != '40' AND A1.RNUM = 1)) + (SELECT IFNULL(SUM(IFNULL(REAL_DLVR_AMT, 0)), 0) FROM DELIVERY_CHARGE WHERE DLVRC_NO IN (SELECT X1.DLVRC_NO FROM CLAIM_DETAIL X1 JOIN CLAIM_BASE X2 ON X2.CLM_NO = X1.CLM_NO WHERE X1.CLM_NO = A1.CLM_NO AND X1.CLM_DTL_STAT_CD != '250' AND X2.CLM_STAT_CD != '40' AND A1.RNUM = 1)) - (SELECT IFNULL(SUM(IFNULL(REAL_DLVR_AMT, 0)), 0) FROM DELIVERY_CHARGE WHERE CNC_CLM_NO = A1.CLM_NO AND A1.RNUM = 1)
		         , 0)
		         ) * -1
		        ) AS REFUND_ADD_DLVR_AMT /* 환불 추가배송비, 신규 반품/교한 회수 배송비 금액 */
		      , SUM(IF(A1.ORD_CLM_GB_CD = '20' AND A1.PAY_MEANS_CD = '80', PAY_AMT * -1, 0)) AS REFUND_GS_PNT /* 환불 GS 포인트 */
		      , (
		      	IFNULL((SELECT IFNULL(USE_PNT,0) FROM MP_LNK_HIST WHERE ORD_NO = #{ordNo} AND CLM_NO IS NULL), 0)
		      	- IFNULL((SELECT CASE WHEN MP_REAL_LNK_GB_CD = '${@framework.common.constants.CommonConstants@MP_REAL_LNK_GB_20}'
		      				THEN 0
		      				ELSE USE_PNT
		      			END FROM  MP_LNK_HIST WHERE MP_LNK_HIST_NO IN (SELECT MP_LNK_HIST_NO FROM ORDER_BASE WHERE ORD_NO = #{ordNo})
		      	), 0)
		      ) * -1 AS REFUND_MP_PNT
		      , (SUM(IF(A1.ORD_CLM_GB_CD = '20' AND A1.PAY_MEANS_CD = '81', PAY_AMT, 0)) - 
		      (
		      	IFNULL((SELECT IFNULL(USE_PNT,0) FROM MP_LNK_HIST WHERE ORD_NO = #{ordNo} AND CLM_NO IS NULL), 0)
		      	- IFNULL((SELECT CASE WHEN MP_REAL_LNK_GB_CD = '${@framework.common.constants.CommonConstants@MP_REAL_LNK_GB_20}'
		      				THEN 0
		      				ELSE USE_PNT
		      			END FROM  MP_LNK_HIST WHERE MP_LNK_HIST_NO IN (SELECT MP_LNK_HIST_NO FROM ORDER_BASE WHERE ORD_NO = #{ordNo})
		      	), 0)
		      )) * -1 AS REFUND_ADD_MP_PNT
		      , SUM(CASE WHEN A1.PAY_MEANS_CD != '80' AND  A1.PAY_MEANS_CD != '81' AND ( A1.PAY_GB_CD = '10' OR A1.PAY_GB_CD = '30') THEN A1.PAY_AMT 
		                 WHEN A1.PAY_MEANS_CD != 80 AND  A1.PAY_MEANS_CD != '81' AND ( A1.PAY_GB_CD = '20' OR A1.PAY_GB_CD = '40') THEN A1.PAY_AMT * -1
		                 ELSE 0
		            END 
		           ) AS FINAL_PAY_AMT /* 최종결제금액 (포인트제외)*/
	           , (SELECT SUM(IFNULL(ISU_SCHD_PNT, 0)) FROM ORDER_DETAIL WHERE ORD_NO = #{ordNo}) AS SUM_ISU_SCHD_PNT
		     , A1.ORD_NO
		  FROM (
		 		SELECT B.* 
		 			, ROW_NUMBER() OVER(PARTITION BY B.ORD_CLM_GB_CD, B.ORD_NO, B.CLM_NO ORDER BY B.ORD_CLM_GB_CD, B.ORD_NO, B.CLM_NO) AS RNUM
		 		  FROM (
			 		  	SELECT A.ORD_NO
			  			 , A.CLM_NO
			  			 , A.ORD_CLM_GB_CD
			  			 , A.PAY_MEANS_CD
			  			 , A.PAY_GB_CD
			  			 , A.PAY_AMT
					  FROM PAY_BASE A
					 WHERE A.ORD_NO = #{ordNo}
					   AND (A.CLM_NO IS NULL OR
					        A.CLM_NO IS NOT NULL AND EXISTS (SELECT 1 FROM CLAIM_BASE WHERE CLM_NO = A.CLM_NO AND CLM_STAT_CD != '40')
			   		       ) /* 클레임 접수 취소건 제외 */
			   		      AND ( 
			   		      		A.PAY_STAT_CD = IF(A.PAY_MEANS_CD = '30' AND (SELECT ORD_STAT_CD FROM ORDER_BASE WHERE ORD_NO = A.ORD_NO) = '10' AND IF((SELECT CLM_TP_CD FROM CLAIM_BASE WHERE ORD_NO = A.ORD_NO AND CLM_TP_CD = '10' AND CLM_STAT_CD = '30') IS NULL, true, false), '00', '01') /* 2021.04.28, ssmvf01, 가상계좌 입금대기에도 결제금액이 노출되도록 수정, 2021.06.11 가상계좌 미입금취소시 금액 노출 안함 추가 수정 */
			   		      		OR ( ( A.PAY_GB_CD = '30' OR A.PAY_GB_CD = '40' ) AND EXISTS ( SELECT 1 FROM CLAIM_BASE WHERE CLM_NO = A.CLM_NO AND CLM_STAT_CD = '30' ) ) 
		   		      		)
		   		      UNION ALL 
		   		      SELECT ORD_NO 
		   		      		, CLM_NO
		   		      		, '20'
		   		      		, NULL 
		   		      		, NULL
		   		      		, 0
		   		      FROM CLAIM_BASE WHERE ORD_NO = #{ordNo} AND CLM_STAT_CD = '30'
	 		  	) B
	   		 ) A1
	</select>

	<select id="getOrderRealPayAmt" resultType="Long">
		<!--
			Query Name : order.getOrderRealPayAmt
			Description : 주문 실 결제 금액 조회
			MP 포인트 적용
		-->
		SELECT	INFO.SALE_AMT + INFO.REAL_DLVRC_AMT - INFO.GS_PNT_AMT - INFO.MP_PNT_AMT
		FROM		(
					SELECT  (SELECT SUM((PAY_AMT * ORD_QTY) + RMN_PAY_AMT) FROM ORDER_DETAIL WHERE ORD_NO = #{ordNo}) AS SALE_AMT
					        ,(SELECT SUM(REAL_DLVR_AMT) FROM DELIVERY_CHARGE WHERE DLVRC_NO IN (SELECT DLVRC_NO FROM ORDER_DETAIL WHERE ORD_NO = #{ordNo})) AS REAL_DLVRC_AMT
					        ,IFNULL((SELECT PAY_AMT FROM PAY_BASE WHERE ORD_CLM_GB_CD='${@framework.common.constants.CommonConstants@ORD_CLM_GB_10}' AND ORD_NO = #{ordNo} AND PAY_MEANS_CD = '${@framework.common.constants.CommonConstants@PAY_MEANS_80}'), 0) AS GS_PNT_AMT
					        ,IFNULL((SELECT PAY_AMT FROM PAY_BASE WHERE ORD_CLM_GB_CD='${@framework.common.constants.CommonConstants@ORD_CLM_GB_10}' AND ORD_NO = #{ordNo} AND PAY_MEANS_CD = '${@framework.common.constants.CommonConstants@PAY_MEANS_81}'), 0) AS MP_PNT_AMT
					FROM DUAL
					) INFO
	</select>

	<resultMap type="biz.app.order.model.OrderDeliveryVO" id="orderListMap">
		<id     property="ordNo"			column="ORD_NO"/>			<!-- 주문 번호 -->
		<result property="stId"			column="ST_ID"/>			<!-- 사이트 ID -->
		<result property="ordAcptDtm"		column="ORD_ACPT_DTM"/>		<!-- 주문 접수 일시 -->
		<result property="ordCpltDtm"		column="ORD_CPLT_DTM"/>		<!-- 주문 완료 일시 -->
		<result property="mbrNo"			column="MBR_NO"/>			<!-- 회원 번호 -->
		<result property="ordStatCd"		column="ORD_STAT_CD"/>		<!-- 주문 상태 코드 -->
		<result property="cncPsbYn"			column="CNC_PSB_YN"/>		<!-- 주문 취소 가능 여부 -->
		<result property="payAmtTotal"		column="PAY_AMT_TOTAL"/>	<!-- 결제 금액 합계 -->




		<result property="stNm"		column="ST_NM"/>		<!-- 사이트 명 -->
		<result property="mbrNm"			column="MBR_NM"/>			<!-- 회원 명 -->
		<result property="ordDtlCnt"        column="ORD_DTL_CNT"/>      <!-- 주문상세 갯수 -->
		<result property="ordMdaCd"			column="ORD_MDA_CD"/>		<!-- 주문 매체 코드 -->
		<result property="chnlId"			column="CHNL_ID"/>		<!-- 채널 아이디-->
		<result property="mbrGrdCd"			column="MBR_GRD_CD"/>		<!-- 회원 등급 코드 -->
		<result property="ordNm"			column="ORD_NM"/>			<!-- 주문자 명 -->
		<result property="ordrId"			column="ORDR_ID"/>			<!-- 주문자 ID -->
		<result property="ordrEmail"		column="ORDR_EMAIL"/>		<!-- 주문자 이메일 -->
		<result property="ordrTel"			column="ORDR_TEL"/>			<!-- 주문자 전화 -->
		<result property="ordrMobile"		column="ORDR_MOBILE"/>		<!-- 주문자 휴대폰 -->
		<result property="ordrIp"			column="ORDR_IP"/>			<!-- 주문자 IP -->
		<result property="ordPrcsRstCd"   column="ORD_PRCS_RST_CD"/>		<!-- 주문  처리 결과코드 -->
		<result property="ordPrcsRstMsg"   column="ORD_PRCS_RST_MSG"/>		<!-- 주문  처리 결과메세지 -->
		<result property="dataStatCd"   column="DATA_STAT_CD"/>		<!-- 데이터 상태 코드 -->
		<result property="payMeansCd"		column="PAY_MEANS_CD"/>		<!-- 결제 수단 코드 -->
		<result property="rsvPayCpltDtm"		column="PAY_CPLT_DTM"/>		<!-- 결제일 -->
		<result property="rsvAdrsNm"		column="ADRS_NM"/>		<!-- 수령인 -->
		<result property="rsvTel"		column="TEL"/>		<!-- 수령인 전화번호 -->
		<result property="rsvMobile"		column="MOBILE"/>		<!-- 수령인 휴대폰 -->
		<result property="rsvRoadAddr"		column="ROAD_ADDR"/>		<!-- 수령인 주소 1 -->
		<result property="rsvRoadDtlAddr"		column="ROAD_DTL_ADDR"/>		<!-- 수령인 주소 1 -->
		<result property="clmAmtTotal"		column="CLM_AMT_TOTAL"/>	<!-- 결제 취소 금액 합계 -->
		<result property="cancelAll"		column="CANCEL_ALL"/>		<!-- 주문 전체 취소 -->
 		<result property="dealNo"		column="DEAL_NO"/>		<!-- 거래번호(결제) -->
 		<result property="cfmNo"		column="CFM_NO"/>		<!-- 승인번호(결제) -->
		<result property="refundBankCd"			column="REFUND_BANK_CD"/>			<!-- 환불 은행코드 -->
		<result property="refundAcctNo"			column="REFUND_ACCT_NO"/>			<!-- 환불 계좌번호 -->
		<result property="refundOoaNm"			column="REFUND_OOA_NM"/>			<!-- 환불 예금주 -->

		<collection property="orderDetailListVO" ofType="biz.app.order.model.OrderDetailVO">
			<id     property="ordDtlSeq"		column="ORD_DTL_SEQ"/>			<!-- 주문 상세 순번 -->
			<result property="ordDtlStatCd"		column="ORD_DTL_STAT_CD"/>		<!-- 주문 상세 상태 코드 -->
			<result property="goodsId"			column="GOODS_ID"/>				<!-- 상품 아이디 -->
			<result property="goodsNm"			column="GOODS_NM"/>				<!-- 상품 명 -->
			<result property="rtnPsbYn"			column="RTN_PSB_YN"/>				<!-- 반품 가능 여부 -->
			<result property="itemMngYn"			column="ITEM_MNG_YN"/>				<!-- 단품 관리 여부 -->
			<result property="itemNo"			column="ITEM_NO"/>				<!-- 단품 번호 -->
			<result property="itemNm"			column="ITEM_NM"/>				<!-- 단품 명 -->
			<result property="rmnOrdQty" 	column="RMN_ORD_QTY" />	<!--  주문 잔여수량  -->
			<result property="rtnQty"			column="RTN_QTY"/>				<!-- 반품 수량 -->
			<result property="rtnCpltQty"			column="RTN_CPLT_QTY"/>			<!-- 반품 완료 수량 -->
			<result property="clmExcQty" 		column="CLM_EXC_QTY" />	<!-- 교환 수량 -->
			<result property="clmExcIngQty" 	column="CLM_EXC_ING_QTY" />	<!-- 교환 진행 수량 -->
			<result property="clmIngYn"			column="CLM_ING_YN"/>				<!-- 클레임 진행 여부 -->
			<result property="saleAmt"			column="SALE_AMT"/>				<!-- 판매 금액 -->
			<result property="prmtDcAmt" 				column="PRMT_DC_AMT" />
			<result property="cpDcAmt" 				column="CP_DC_AMT" />
			<result property="payAmt"			column="PAY_AMT"/>				<!-- 결제 금액 -->
			<result property="dlvrNo"           column="DLVR_NO"/><!-- 배송  번호 -->
			<result property="compNo"			column="COMP_NO"/>				<!-- 업체 번호 -->
			<result property="compNm"			column="COMP_NM"/>				<!-- 업체 명 -->
			<result property="goodsEstmRegYn"	column="GOODS_ESTM_REG_YN"/>	<!-- 상품 평가 등록 여부 -->
			<result property="goodsEstmNo"	column="GOODS_ESTM_NO"/>	<!-- 상품 평가 등록 번호 -->
			
			<result property="bndNm"			column="BND_NM"/>				<!-- 브랜드명 국문 -->
		
			<result property="bndNmKo"		column="BND_NM_KO"/>	<!-- 브랜드명한글 -->
			<result property="imgSeq"		    column="IMG_SEQ"/>			    <!-- 상품 이미지 순번 -->
			<result property="imgPath"		    column="IMG_PATH"/>			    <!-- 상품 이미지 경로 -->
			<result property="rvsImgPath"		column="RVS_IMG_PATH"/>			<!-- 상품 반전 이미지 경로 -->
			<result property="rtnIngYn" 	column="RTN_ING_YN" />	<!--  반품 진행 여부  -->

			
			
			<result property="vldOrdQty" 	column="VLD_ORD_QTY" />	<!--  유효 잔여수량  -->
			<result property="ordQty"			column="ORD_QTY"/>				<!-- 주문 수량 -->
			<result property="ordDtlStatNm"		column="ORD_DTL_STAT_NM"/>		<!-- 주문 상세 상태 명 -->
			<result property="dealGoodsId"		column="DEAL_GOODS_ID"/>		<!-- 딜 상품 아이디 -->
			<result property="dispClsfNo"		column="DISP_CLSF_NO"/>			<!-- 전시 분류 번호 -->
			<result property="compGoodsNo"		column="COMP_GOODS_NO"/>		<!-- 업체 상품 번호 -->
			<result property="compItemNo"		column="COMP_ITEM_NO"/>			<!-- 업체 단품 번호 -->
			<result property="cms"			column="CMS"/>				<!-- 수수료-->
			<result property="goodsCmsnRt"		column="GOODS_CMSN_RT"/>		<!-- 상품수수료율 -->
			<result property="taxGbCd"		column="TAX_GB_CD"/>		<!-- 과세 구분 코드 -->
			<result property="ordSvmn" 		column="ORD_SVMN"/>		<!-- 부여적립금 -->
			<result property="dlvrcNo"			column="DLVRC_NO"/>				<!-- 배송비 번호 -->
			<result property="ordDlvraNo"			column="ORD_DLVRA_NO"/>				<!-- 주문 배송지 번호 -->
			<result property="upCompNo"			column="UP_COMP_NO"/>				<!-- 상위 업체 번호 -->
			<result property="outsideOrdDtlNo" column="OUTSIDE_ORD_DTL_NO" /> <!--  외부 주문 상세 번호 -->
			<result property="sysRegrNo"		column="SYS_REGR_NO"/>			<!-- 시스템 등록자 번호 -->
			<result property="sysRegDtm"		column="SYS_REG_DTM"/>			<!-- 시스템 등록 일시 -->
			<result property="sysUpdrNo"		column="SYS_UPDR_NO"/>			<!-- 시스템 수정자 번호 -->
			<result property="sysUpdDtm"		column="SYS_UPD_DTM"/>			<!-- 시스템 수정 일시 -->
			<result property="sysRegrNm"		column="SYS_REGR_NM"/>			<!-- 시스템 등록자 -->
			<result property="sysUpdrNm"		column="SYS_UPDR_NM"/>			<!-- 시스템 수정자 -->
			<result property="costTot"			column="COST_TOT"/>				<!-- 원가 합계 -->
			<result property="splTot"			column="SPL_TOT"/>				<!-- 공급 합계 -->
			<result property="netProfitRate"	column="NET_PROFIT_RATE"/>		<!-- 순 이익 율 -->
			<result property="netProfitAmt"		column="NET_PROFIT_AMT"/>		<!-- 순 이익 금액 -->
			<result property="compareDtmYn"		column="COMPARE_DTM_YN"/>		<!-- 배송완료일자+7일과 현재일자 비교 -->
			<result property="payMeansCd"		column="PAY_MEANS_CD"/>			<!-- 결제 수단 코드 -->
			<result property="acctNo"			column="ACCT_NO"/>				<!-- 계좌번호 -->
			<result property="bankCd"		    column="BANK_CD"/>			    <!-- 은행코드 -->
			<result property="ooaNm"			column="OOA_NM"/>				<!-- 예금주명 -->
			<result property="dlvrcPlcNo"			column="DLVRC_PLC_NO"/>				<!-- 배송비 정책 번호 -->
			<result property="addSaleAmt"			column="ADD_SALE_AMT"/>				<!-- 추가 판매 금액 -->
			
			<result property="clmDtlTpCd"			column="CLM_DTL_TP_CD"/>			
			<result property="clmTpStatDtlStatCd"	column="CLM_TP_STAT_DTL_STAT_CD"/>	
			<result property="clmDtlSeq"			column="CLM_DTL_SEQ"/>						
			<result property="dlvrPrcsTpCd"			column="DLVR_PRCS_TP_CD"/>				<!-- 배송처리유형코드 10:택배배송, 20:당일배송 , 21:새벽배송-->
			<result property="pakGoodsId"			column="PAK_GOODS_ID"/>					<!-- 묶음상품아이디-->
			<result property="ordrShowYn"			column="ORDR_SHOW_YN"/>					<!-- 주문 삭제 여부 Y 보이기-->
			<result property="dlvrInvNo"			column="DLVR_INV_NO"/>					<!-- 송장번호-->
			<result property="dlvrCmdDtm"			column="DLVR_CMD_DTM"/>					<!-- 배송지시일자-->
			<result property="dlvrCmdDtmWeek"		column="DLVR_CMD_DTM_WEEK"/>			<!-- 배송지시일자 요일-->
			<result property="dlvrCpltDtm"			column="DLVR_CPLT_DTM"/>				<!-- 배송완료일자-->
			<result property="dlvrCpltDtmWeek"		column="DLVR_CPLT_DTM_WEEK"/>			<!-- 배송완료일자 요일-->
			<result property="subGoodsNm"			column="SUB_GOODS_NM"/>					<!-- 사은품-->
			<result property="stkQty"				column="STK_QTY"/>						<!-- 재고갯수-->
			<result property="ordBankInfo"			column="ORD_BANK_INFO"/>				<!-- 입금대기 은행정보-->	
			<result property="ordDt"				column="ORD_DT"/>						<!-- 배송 예정 일자-->
			<result property="ordDtWeek"			column="ORD_DT_WEEK"/>					<!-- 배송 예정 일자 요일-->			
			<result property="compGbCd"			column="COMP_GB_CD"/>					
			<result property="mkiGoodsOptContent"			column="MKI_GOODS_OPT_CONTENT"/>	<!-- 각인문구 -->
			<result property="mkiGoodsYn"			column="MKI_GOODS_YN"/>		<!-- 각인문구 여부-->
			
			<result property="goodsCstrtTpCd"			column="GOODS_CSTRT_TP_CD"/>
			<result property="optGoodsNm"			column="OPT_GOODS_NM"/>
			<result property="pakItemNm"			column="PAK_ITEM_NM"/>	
			<result property="goodsEstmTp"			column="GOODS_ESTM_TP"/>			
			<result property="isuSchdPnt"			column="ISU_SCHD_PNT"/>		<!-- 발급예정 포인트-->

			
		</collection>
	</resultMap>

	<resultMap id="resultMapForClaim" type="biz.app.claim.model.ClaimDetailVO" autoMapping="true">
		<result property="clmNo"				column="CD_CLM_NO"              />
		<result property="clmDtlSeq"			column="CD_CLM_DTL_SEQ"         />
		<result property="clmDtlTpCd"			column="CD_CLM_DTL_TP_CD"       />
		<result property="clmDtlStatCd"			column="CD_CLM_DTL_STAT_CD"     />
		<result property="clmRsnCd"				column="CD_CLM_RSN_CD"          />
		<result property="clmRsnContent"		column="CD_CLM_RSN_CONTENT"     />
		<result property="clmDenyRsnContent"	column="CD_CLM_DENY_RSN_CONTENT"/>
		<result property="mbrNo"				column="CD_MBR_NO"              />
		<result property="ordNo"				column="CD_ORD_NO"              />
		<result property="ordDtlSeq"			column="CD_ORD_DTL_SEQ"         />
		<result property="orgClmNo"				column="CD_ORG_CLM_NO"          />
		<result property="orgClmDtlSeq"			column="CD_ORG_CLM_DTL_SEQ"     />
		<result property="goodsId"				column="CD_GOODS_ID"            />
		<result property="goodsNm"				column="CD_GOODS_NM"            />
		<result property="dealGoodsId"			column="CD_DEAL_GOODS_ID"       />
		<result property="pakGoodsId"			column="CD_PAK_GOODS_ID"        />
		<result property="dispClsfNo"			column="CD_DISP_CLSF_NO"        />
		<result property="compGoodsId"			column="CD_COMP_GOODS_ID"       />
		<result property="compItemId"			column="CD_COMP_ITEM_ID"        />
		<result property="goodsPrcNo"			column="CD_GOODS_PRC_NO"        />
		<result property="saleAmt"				column="CD_SALE_AMT"            />
		<result property="payAmt"				column="CD_PAY_AMT"             />
		<result property="rmnPayAmt"			column="CD_RMN_PAY_AMT"         />
		<result property="clmQty"				column="CD_CLM_QTY"             />
		<result property="cms"					column="CD_CMS"                 />
		<result property="goodsCmsnRt"			column="CD_GOODS_CMSN_RT"       />
		<result property="taxGbCd"				column="CD_TAX_GB_CD"           />
		<result property="dlvrcNo"				column="CD_DLVRC_NO"            />
		<result property="rtnDlvrcNo"			column="CD_RTN_DLVRC_NO"        />
		<result property="dlvraNo"				column="CD_DLVRA_NO"            />
		<result property="rtrnaNo"				column="CD_RTRNA_NO"            />
		<result property="dlvrNo"				column="CD_DLVR_NO"             />
		<result property="compNo"				column="CD_COMP_NO"             />
		<result property="upCompNo"				column="CD_UP_COMP_NO"          />
		<result property="clmCpltDtm"			column="CD_CLM_CPLT_DTM"        />
		<result property="rtnMtdCd"				column="CD_RTN_MTD_CD"          />
		<result property="outsideClmDtlNo"		column="CD_OUTSIDE_CLM_DTL_NO"  />
		<result property="stlNo"				column="CD_STL_NO"              />
		<result property="dlvrCpltPicUrl"		column="CD_DLVR_CPLT_PIC_URL"   />
		<result property="dlvrSms"				column="CD_DLVR_SMS"            />
		<result property="twcTckt"				column="CD_TWC_TCKT"            />
		<result property="dlvrCpltYn"			column="CD_DLVR_CPLT_YN"        />
		<result property="itemNm"				column="CD_ITEM_NM"				/>
		<result property="itemNo"				column="CD_ITEM_NO"				/>
		<result property="dispClsfNm"			column="CD_DISP_CLSF_NM"		/>
		<result property="cpDcAmt"				column="CD_CP_DC_AMT"			/>
		<result property="cartCpDcAmt"			column="CD_CART_CP_DC_AMT"		/>
		<result property="bndNmKo"				column="CD_BND_NM_KO"			/>
		<result property="subGoodsNm"			column="CD_SUB_GOODS_NM"		/>
		<result property="dlvrPrcsTpCd"			column="CD_DLVR_PRCS_TP_CD"		/>
		<association property="claimBaseVO" javaType="biz.app.claim.model.ClaimBaseVO" autoMapping="true">
		</association>
	</resultMap>
	<resultMap id="orderListMap2ndE" type="biz.app.order.model.OrderBaseVO" autoMapping="true"> 
		<id property="ordNo" column="ord_no" /> <!-- 주문번호별 -->
		<collection property="orderCompanyListVO" ofType="biz.app.order.model.OrderCompanyVO" autoMapping="true"> 
			<id property="compNo" column="comp_no" /> <!-- 회사번호별 -->
			<collection property="orderInvoiceListVO" ofType="biz.app.order.model.OrderInvoiceVO" autoMapping="true">
				<id property="dlvrInvNo" column="DLVR_INV_NO" /> <!-- 송장번호별 -->
				<id property="cdClmNo" column="CD_CLM_NO" />
				<collection property="orderDlvrStatListVO" ofType="biz.app.order.model.OrderDlvrStatVO" autoMapping="true"> 
					<id property="forceDtlStat" column="FORCE_DTL_STAT" /> <!-- 프로세스단계(odrdtlstat, clmtpcd) -->
					<result property="ordDtlStatCd" column="ORD_DTL_STAT_CD" />
					<result property="clmTpCd" column="CB_CLM_TP_CD" />
					<result property="clmStatCd" column="CB_CLM_STAT_CD" /> <!-- 2021.05.28, ssmvf01, 클레임 상태 추가 -->
					<result property="dlvrPrcsTpCd" column="DLVR_PRCS_TP_CD" />
					<result property="clmDtlStatCd" column="CD_CLM_DTL_STAT_CD" />
					<result property="compGbCd" column="COMP_GB_CD"/>
					<result property="dlvrInvNo" column="DLVR_INV_NO" />
					<result property="viewClmDtlStatCd" 	column="VIEW_CD_CLM_DTL_STAT_CD" />	
					<result property="dlvrCpltDtm"			column="DLVR_CPLT_DTM"/>				<!-- 배송완료일자-->
					<result property="dlvrCpltDtmWeek"		column="DLVR_CPLT_DTM_WEEK"/>			<!-- 배송완료일자 요일-->
					<result property="ordBankInfo"			column="ORD_BANK_INFO"/>				<!-- 입금대기 은행정보-->	
					<result property="ordDt"				column="ORD_DT"/>						<!-- 배송 예정 일자-->
					<result property="ordDtWeek"			column="ORD_DT_WEEK"/>					<!-- 배송 예정 일자 요일-->		
					<discriminator column="LIST_DELIMITER" javaType="String"> <!-- 쿼리로 LIST_DELIMITER 컬럼을 두어 리스트를 나눠담는다 -->
					<case value="DELIVERY">
						<collection property="orderDetailListVO" ofType="biz.app.order.model.OrderDetailVO" javaType="list" autoMapping="true">
						</collection>
					</case>
					<case value="CLAIM">
						<collection property="claimDetailListVO" ofType="biz.app.order.model.OrderDetailVO" autoMapping="true">
							<association property="claimDetailVO" resultMap="resultMapForClaim" autoMapping="true">
							</association>
						</collection>
					</case>
					</discriminator>
				</collection>
			</collection>
		</collection>
	</resultMap>
	<select id="pageOrderDeliveryList2ndE" resultMap="orderListMap2ndE">
		SELECT /* QUERYID(order.listOrderDetail2ndE) */
			LIST.*
		    , (SELECT PAY_MEANS_CD FROM PAY_BASE WHERE ORD_CLM_GB_CD ='10' AND CNC_YN ='N'  AND ORD_NO = LIST.ORD_NO ORDER BY PAY_MEANS_CD LIMIT 1) AS PAY_MEANS_CD
		    , (SELECT PAY_STAT_CD FROM PAY_BASE WHERE ORD_CLM_GB_CD ='10' AND CNC_YN ='N'  AND ORD_NO = LIST.ORD_NO ORDER BY PAY_MEANS_CD LIMIT 1) AS PAY_STAT_CD
		    , (SELECT CASE WHEN SUM(IF(FN_GET_ORDER_CLAIM_ING_YN(ORD_NO, ORD_DTL_SEQ)='Y', 1, 0)) = 0 
		                    AND SUM(IF(RMN_ORD_QTY - RTN_QTY - CLM_EXC_CPLT_QTY > 0, 1, 0)) = SUM(IF(RMN_ORD_QTY - RTN_QTY - CLM_EXC_CPLT_QTY > 0 AND ORD_DTL_STAT_CD = '170', 1, 0)) THEN 'Y'
		                   ELSE 'N'
		              END 		       
		         FROM ORDER_DETAIL
		        WHERE ORD_NO = LIST.ORD_NO
		      ) AS ORD_DELETE_FLG
		FROM (
			SELECT
				OBB.*
				, (SELECT IFNULL(SUM(CLM_QTY), 0) AS CLM_EXC_QTY FROM CLAIM_BASE CB ,CLAIM_DETAIL CD 
					WHERE CB.CLM_NO = CD.CLM_NO AND CB.CLM_TP_CD = '30' AND CB.CLM_STAT_CD IN ('30') AND CD.CLM_DTL_TP_CD = '40' AND CB.ORD_NO = OBB.ORD_NO AND CD.ORD_DTL_SEQ = OBB.ORD_DTL_SEQ 
				) AS CLM_EXC_CPLT_QTY
			FROM (
				SELECT  
					ORD_NO,
					ST_ID,
					ORD_STAT_CD,
					ORD_MDA_CD,
					MBR_NO,
					MBR_GRD_CD,
					ORD_NM,
					ORDR_ID,
					ORDR_EMAIL,
					ORDR_TEL,
					ORDR_MOBILE,
					ORDR_IP,
					ORD_ACPT_DTM,
					ORD_CPLT_DTM,
					OUTSIDE_ORD_NO,
					CHNL_ID,
					ORD_DTL_CNT,
					ORD_PRCS_RST_CD,
					ORD_PRCS_RST_MSG,
					DATA_STAT_CD,
					DLVR_PRCS_TP_CD, /* 일반택배일 경우 강제로 코드를 10으로 바꿔줌 */
					ORDR_SHOW_YN,
					PAY_AMT_TOTAL,		/* 결제 금액 */
					CNC_PSB_YN,			/* 취소 가능 여부 */
					ORD_DTL_SEQ,
					ORD_DTL_STAT_CD,
					GOODS_ID,
					ITEM_NO,
					ITEM_NM,
					DEAL_GOODS_ID,
					PAK_GOODS_ID,
					COMP_GOODS_ID,
					COMP_ITEM_ID,
					ORD_QTY,
					CNC_QTY,
					RTN_QTY,
					RMN_ORD_QTY,
					GOODS_PRC_NO,
					SALE_AMT,
					PAY_AMT,
					RMN_PAY_AMT,
					CMS,
					GOODS_CMSN_RT,
					TAX_GB_CD,
					ORD_SVMN,
					SVMN_VLD_PRD_CD,
					SVMN_VLD_PRD,
					FREE_DLVR_YN,
					HOT_DEAL_YN,
					DLVRC_NO,
					ORD_DLVRA_NO,
					COMP_NO,
					UP_COMP_NO,
					MD_USR_NO,
					GOODS_ESTM_NO,
					GOODS_ESTM_REG_YN,
					GOODS_ESTM_TP,
					OUTSIDE_ORD_DTL_NO,
					STL_NO,
					DISP_CLSF_NO,
					DLVR_CPLT_PIC_URL,
					DLVR_SMS,
					DLVR_CPLT_YN,
					MKI_GOODS_YN,
					MKI_GOODS_OPT_CONTENT,
					RSV_GOODS_YN,
					ISU_SCHD_PNT,
					RTN_PSB_YN,				/* 반품 가능 여부 */
					RTN_ING_YN,				/* 반품 진행 여무 */
					RTN_CPLT_QTY,			/* 반품 완료 수량 */
					CLM_EXC_ING_QTY,		/* 교환 진행 수량 */
					CLM_ING_YN,				/* 클레임 진행 여부 */
					PRMT_DC_AMT,			/* 프로모션 할인 금액 */
					CP_DC_AMT,				/* 쿠폰 할인 금액 */
					DLVR_NO,				/* 배송 번호 */
					STK_QTY,
					VLD_ORD_QTY,
					IMG_SEQ,
					IMG_PATH,
					RVS_IMG_PATH,
					COMP_NM,
					COMP_GB_CD, /* 업체 구분 코드 10:자사 */
					ITEM_MNG_YN,
					BND_NM, 			/* 노출 브랜드명 */
					BND_NM_KO,		/* 브랜드명 국문 */
					GOODS_CSTRT_TP_CD,
					PAK_ITEM_NM,
					CASE WHEN DLVR_NO &lt; 0 AND ADDDATE((SELECT DLVR_CPLT_DTM FROM DELIVERY WHERE DLVR_NO = OBB.DLVR_NO),7) &lt; SYSDATE() THEN 'N' ELSE 'Y' END AS COMPARE_DTM_YN,
					(
						SELECT
							GROUP_CONCAT( GB.GOODS_NM )
						FROM GOODS_BASE GB
						WHERE GB.GOODS_ID IN (
							SELECT ODC.CSTRT_GOODS_ID
							FROM ORD_DTL_CSTRT ODC
							INNER JOIN ORDER_DETAIL OD ON ODC.ORD_NO = OBB.ORD_NO AND ODC.ORD_DTL_SEQ = OBB.ORD_DTL_SEQ
							WHERE ODC.ORD_NO  = OBB.ORD_NO AND ODC.CSTRT_GOODS_GB_CD = '30'
							ORDER BY OBB.ORD_DTL_SEQ ASC
						)
					)AS SUB_GOODS_NM,		/*사은품명*/
					( SELECT ODAM.ORD_DT FROM ORD_DLVR_AREA_MAP ODAM WHERE ODAM.ORD_NO = OBB.ORD_NO AND ODAM.DEL_YN ='N') AS ORD_DT,
					( SELECT WEEKDAY(DATE_FORMAT(ODAM.ORD_DT, '%Y%m%d')) FROM ORD_DLVR_AREA_MAP ODAM WHERE ODAM.ORD_NO = OBB.ORD_NO AND ODAM.DEL_YN ='N') AS ORD_DT_WEEK,
					( SELECT DLVR_CPLT_DTM FROM DELIVERY DV WHERE DV.DLVR_NO = OBB.DLVR_NO AND DV.ORD_CLM_GB_CD ='10') as DLVR_CPLT_DTM,		/*배송 완료 일시*/
					( SELECT WEEKDAY(DATE_FORMAT(DLVR_CPLT_DTM, '%Y%m%d')) FROM DELIVERY DV WHERE DV.DLVR_NO = OBB.DLVR_NO AND DV.ORD_CLM_GB_CD ='10') as DLVR_CPLT_DTM_WEEK,	/*배송 완료 일시 요일*/
					IFNULL((SELECT INV_NO FROM DELIVERY DV WHERE DV.DLVR_NO = OBB.DLVR_NO), '') AS DLVR_INV_NO,
					(
						SELECT CONCAT_WS('|', if(BANK_CD='', null, BANK_CD) , if(ACCT_NO='', null, ACCT_NO), if(DPST_SCHD_DT='', null, DPST_SCHD_DT))
						FROM PAY_BASE PB
						WHERE PB.ORD_CLM_GB_CD ='10' AND PB.PAY_MEANS_CD IN('10', '20', '30') AND CNC_YN ='N'  AND PB.ORD_NO = OBB.ORD_NO
					) AS ORD_BANK_INFO,
					(CASE WHEN PAK_GOODS_ID IS null THEN GOODS_NM ELSE PAK_GOODS_NM END) AS GOODS_NM,     /* 상품 명 */
					(CASE WHEN GOODS_CSTRT_TP_CD = 'PAK' THEN GOODS_NM ELSE NULL END) AS OPT_GOODS_NM,
					CD_CLM_NO,
					CD_CLM_DTL_SEQ,
					CD_CLM_DTL_TP_CD,
					CD_CLM_DTL_STAT_CD,
					CD_CLM_RSN_CD,
					CD_CLM_RSN_CONTENT,
					CD_CLM_DENY_RSN_CONTENT,
					CD_MBR_NO,
					CD_ORD_NO,
					CD_ORD_DTL_SEQ,
					CD_ORG_CLM_NO,
					CD_ORG_CLM_DTL_SEQ,
					CD_GOODS_ID,
					CD_GOODS_NM,
					CD_DEAL_GOODS_ID,
					CD_PAK_GOODS_ID,
					CD_DISP_CLSF_NO,
					CD_COMP_GOODS_ID,
					CD_COMP_ITEM_ID,
					CD_GOODS_PRC_NO,
					CD_SALE_AMT,
					CD_PAY_AMT,
					CD_RMN_PAY_AMT,
					CD_CLM_QTY,
					CD_CMS,
					CD_GOODS_CMSN_RT,
					CD_TAX_GB_CD,
					CD_DLVRC_NO,
					CD_RTN_DLVRC_NO,
					CD_DLVRA_NO,
					CD_RTRNA_NO,
					CD_DLVR_NO,
					CD_COMP_NO,
					CD_UP_COMP_NO,
					CD_CLM_CPLT_DTM,
					CD_RTN_MTD_CD,
					CD_OUTSIDE_CLM_DTL_NO,
					CD_STL_NO,
					CD_DLVR_CPLT_PIC_URL,
					CD_DLVR_SMS,
					CD_TWC_TCKT,
					CD_DLVR_CPLT_YN,
					CD_STK_QTY,
					CD_RFD_PAY_TOT_AMT,
					CB_ST_ID,
					CB_CLM_TP_CD,
					CB_CLM_STAT_CD,
					CB_ORD_MDA_CD,
					CB_CHNL_ID,
					CB_SWAP_YN,
					CB_ACPT_DTM,
					CB_CNC_DTM,
					CB_CPLT_DTM,
					CB_ACPTR_NO,
					CB_CNCR_NO,
					CB_CPLTR_NO,
					CB_OUTSIDE_CLM_NO,
					CB_ORDR_SHOW_YN,
					CD_ITEM_NM,
					CD_ITEM_NO,
					CD_DISP_CLSF_NM,
					CD_CP_DC_AMT,		/* 상품 쿠폰 할인 금액 */
					CD_CART_CP_DC_AMT,	/** 장바구니 쿠폰 할인 금액 */
					CD_BND_NM_KO,		/* 브랜드명 국문 */
					CD_SUB_GOODS_NM,	/*사은품명*/
					CD_DLVR_PRCS_TP_CD,
					CASE WHEN CLM_DTL_STAT_ASC IS NULL OR ((ORD_QTY - CNC_QTY - RTN_QTY) > 0) THEN CONCAT('1ORD', ORD_DTL_STAT_CD)
					WHEN (CLM_DTL_STAT_ASC IS NOT NULL AND ((ORD_QTY - CNC_QTY - RTN_QTY) > 0)) THEN CONCAT('2CLM', CLM_DTL_STAT_ASC)
					ELSE CONCAT('2CLM', CLM_DTL_STAT_ASC)
					END AS FORCE_DTL_STAT, /* 주문과 클레임을 구분하여 리스트에 담기위한 구분자 */
					CASE WHEN CLM_DTL_STAT_ASC IS NULL OR ((ORD_QTY - CNC_QTY - RTN_QTY) > 0) THEN 'DELIVERY'
					WHEN (CLM_DTL_STAT_ASC IS NOT NULL AND ((ORD_QTY - CNC_QTY - RTN_QTY) > 0)) THEN 'CLAIM'
					ELSE 'CLAIM'
					END AS LIST_DELIMITER, /* 주문과 클레임을 구분하여 리스트에 담기위한 구분자 */
					CLM_DTL_SEQ_ORDER,
					CASE WHEN CB_CLM_TP_CD != '30' 
						 THEN CD_CLM_DTL_STAT_CD
						 WHEN CLM_DTL_STAT_ASC = '31'
				         THEN '410'
					     WHEN CLM_DTL_STAT_ASC = '32'
					     THEN '330'
					     <!-- 교환 거부 순서 변경 -->
					     WHEN CLM_DTL_STAT_ASC = '50'
					     THEN '350'
					     WHEN CLM_DTL_STAT_ASC = '45'
					     THEN '450'
					     ELSE CD_CLM_DTL_STAT_CD
			     	  END AS VIEW_CD_CLM_DTL_STAT_CD
				FROM (
					SELECT
						OB.ORD_NO,
						OB.ST_ID,
						OB.ORD_STAT_CD,
						OB.ORD_MDA_CD,
						OB.MBR_NO,
						OB.MBR_GRD_CD,
						OB.ORD_NM,
						OB.ORDR_ID,
						OB.ORDR_EMAIL,
						OB.ORDR_TEL,
						OB.ORDR_MOBILE,
						OB.ORDR_IP,
						OB.ORD_ACPT_DTM,
						OB.ORD_CPLT_DTM,
						OB.OUTSIDE_ORD_NO,
						OB.CHNL_ID,
						OB.ORD_DTL_CNT,
						OB.ORD_PRCS_RST_CD,
						OB.ORD_PRCS_RST_MSG,
						OB.DATA_STAT_CD,
						(
							CASE WHEN COMP_GB_CD='10' THEN OB.DLVR_PRCS_TP_CD
							ELSE '10' END
						) AS DLVR_PRCS_TP_CD,
						OB.ORDR_SHOW_YN,
						FN_GET_ORDER_PAY_AMT(OB.ORD_NO) AS PAY_AMT_TOTAL,		/* 결제 금액 */
						FN_GET_ORDER_CANCEL_PSB_YN(OB.ORD_NO) AS CNC_PSB_YN,	/* 취소 가능 여부 */
						OD.ORD_DTL_SEQ,
						OD.ORD_DTL_STAT_CD,
						OD.GOODS_ID,
						OD.ITEM_NO,
						OD.ITEM_NM,
						OD.DEAL_GOODS_ID,
						OD.PAK_GOODS_ID,
						OD.COMP_GOODS_ID,
						OD.COMP_ITEM_ID,
						OD.ORD_QTY,
						OD.CNC_QTY,
						OD.RTN_QTY,
						OD.RMN_ORD_QTY,
						OD.GOODS_PRC_NO,
						OD.SALE_AMT,
						OD.PAY_AMT,
						OD.RMN_PAY_AMT,
						OD.CMS,
						OD.GOODS_CMSN_RT,
						OD.TAX_GB_CD,
						OD.ORD_SVMN,
						OD.SVMN_VLD_PRD_CD,
						OD.SVMN_VLD_PRD,
						OD.FREE_DLVR_YN,
						OD.HOT_DEAL_YN,
						OD.DLVRC_NO,
						OD.ORD_DLVRA_NO,
						OD.COMP_NO,
						OD.UP_COMP_NO,
						OD.MD_USR_NO,
						OD.GOODS_ESTM_NO,
						OD.GOODS_ESTM_REG_YN,
						CASE WHEN OD.GOODS_ESTM_REG_YN  = 'Y' THEN (SELECT GOODS_ESTM_TP FROM GOODS_COMMENT GC WHERE GC.GOODS_ESTM_NO = OD.GOODS_ESTM_NO) END AS GOODS_ESTM_TP,
						OD.OUTSIDE_ORD_DTL_NO,
						OD.STL_NO,
						OD.DISP_CLSF_NO,
						OD.DLVR_CPLT_PIC_URL,
						OD.DLVR_SMS,
						OD.DLVR_CPLT_YN,
						OD.MKI_GOODS_YN,
						OD.MKI_GOODS_OPT_CONTENT,
						OD.RSV_GOODS_YN,
						OD.ISU_SCHD_PNT,
						(SELECT RTN_PSB_YN FROM GOODS_BASE WHERE GOODS_ID = OD.GOODS_ID) AS RTN_PSB_YN,	/* 반품 가능 여부 */
						FN_GET_ORDER_CLAIM_ING_RTN_YN(OD.ORD_NO, OD.ORD_DTL_SEQ) AS RTN_ING_YN,			/* 반품 진행 여무 */
						FN_GET_ORD_CLM_RTN_CPLT_QTY(OD.ORD_NO, OD.ORD_DTL_SEQ)  AS RTN_CPLT_QTY,		/* 반품 완료 수량 */
						FN_GET_ORDER_CLAIM_EXC_QTY(OD.ORD_NO, OD.ORD_DTL_SEQ)  AS CLM_EXC_ING_QTY,		/* 교환 진행 수량 */
						FN_GET_ORDER_CLAIM_ING_YN(OD.ORD_NO, OD.ORD_DTL_SEQ) AS CLM_ING_YN,				/* 클레임 진행 여부 */
						FN_GET_ORDER_DTL_PRMT_DC_AMT(OB.ORD_NO, OD.ORD_DTL_SEQ) AS PRMT_DC_AMT,			/* 프로모션 할인 금액 */
						FN_GET_ORDER_DTL_CP_DC_AMT(OB.ORD_NO, OD.ORD_DTL_SEQ) AS CP_DC_AMT,				/* 쿠폰 할인 금액 */
						FN_GET_ORDER_DLVR_NO(OD.ORD_NO, OD.ORD_DTL_SEQ, 'Y') AS DLVR_NO,				/* 배송 번호 */
						FN_GET_GOODS_STOCK(OD.GOODS_ID, OD.ITEM_NO) AS STK_QTY,
						OD.RMN_ORD_QTY -  FN_GET_ORD_CLM_RTN_CPLT_QTY(OD.ORD_NO, OD.ORD_DTL_SEQ) AS VLD_ORD_QTY, /* 유효 주문 수량 */
						GI.IMG_SEQ,
						GI.IMG_PATH,
						GI.RVS_IMG_PATH,
						CP.COMP_NM,
						CP.COMP_GB_CD, /* 업체 구분 코드 10:자사 */
						GB.ITEM_MNG_YN,
						GB.GOODS_NM,
						FN_GET_BRAND_NAME(GB.BND_NO) AS BND_NM, 			/* 노출 브랜드명 */
						FN_GET_BRAND_NAME_KO(GB.BND_NO) AS BND_NM_KO,		/* 브랜드명 국문 */
						(SELECT GOODS_NM FROM GOODS_BASE WHERE GOODS_ID = OD.PAK_GOODS_ID) AS PAK_GOODS_NM,
						CASE WHEN OD.PAK_GOODS_ID IS NULL THEN GB.GOODS_CSTRT_TP_CD
						ELSE (SELECT GOODS_CSTRT_TP_CD FROM GOODS_BASE WHERE GOODS_ID = OD.PAK_GOODS_ID)
						END AS GOODS_CSTRT_TP_CD,
						CASE WHEN OD.PAK_GOODS_ID IS NOT NULL THEN
						(
							SELECT GROUP_CONCAT(CONCAT_WS(' : ', GOG.SHOW_NM , AV.ATTR_VAL) ORDER BY GOG.DISP_PRIOR_RANK SEPARATOR '|')
							FROM GOODS_BASE GB,ITEM IT, GOODS_OPT_GRP GOG, GOODS_ATTRIBUTE GA, ITEM_ATTRIBUTE_VALUE IAV, ATTRIBUTE_VALUE AV
							WHERE GB.GOODS_ID = IT.GOODS_ID AND GA.GOODS_ID = GB.GOODS_ID
								AND GA.ATTR_NO = AV.ATTR_NO AND GOG.ATTR_NO = GA.ATTR_NO
								AND GOG.ATTR_NO = AV.ATTR_NO AND IAV.ITEM_NO = IT.ITEM_NO
								AND IAV.ATTR_NO = AV.ATTR_NO AND AV.ATTR_VAL_NO = IAV.ATTR_VAL_NO
								AND GB.GOODS_ID = OD.GOODS_ID AND GOG.GOODS_ID = OD.PAK_GOODS_ID
						)
						END AS PAK_ITEM_NM,
						CD.ORD_NO					AS	CD_CLM_NO,
						CD.CLM_DTL_SEQ				AS	CD_CLM_DTL_SEQ,
						CD.CLM_DTL_TP_CD			AS	CD_CLM_DTL_TP_CD,
						CD.CLM_DTL_STAT_CD			AS	CD_CLM_DTL_STAT_CD,
						(SELECT USR_DFN3_VAL FROM CODE_DETAIL WHERE GRP_CD = 'CLM_DTL_STAT' AND DTL_CD = CD.CLM_DTL_STAT_CD) AS CLM_DTL_STAT_ASC,
						CD.CLM_RSN_CD				AS	CD_CLM_RSN_CD,
						CD.CLM_RSN_CONTENT			AS	CD_CLM_RSN_CONTENT,
						CD.CLM_DENY_RSN_CONTENT		AS	CD_CLM_DENY_RSN_CONTENT,
						CD.MBR_NO					AS	CD_MBR_NO,
						CD.ORD_NO					AS	CD_ORD_NO,
						CD.ORD_DTL_SEQ				AS	CD_ORD_DTL_SEQ,
						CD.ORG_CLM_NO				AS	CD_ORG_CLM_NO,
						CD.ORG_CLM_DTL_SEQ			AS	CD_ORG_CLM_DTL_SEQ,
						CD.GOODS_ID					AS	CD_GOODS_ID,
						CD.GOODS_NM					AS	CD_GOODS_NM,
						CD.DEAL_GOODS_ID			AS	CD_DEAL_GOODS_ID,
						CD.PAK_GOODS_ID				AS	CD_PAK_GOODS_ID,
						CD.DISP_CLSF_NO				AS	CD_DISP_CLSF_NO,
						CD.COMP_GOODS_ID			AS	CD_COMP_GOODS_ID,
						CD.COMP_ITEM_ID				AS	CD_COMP_ITEM_ID,
						CD.GOODS_PRC_NO				AS	CD_GOODS_PRC_NO,
						CD.SALE_AMT					AS	CD_SALE_AMT,
						CD.PAY_AMT					AS	CD_PAY_AMT,
						CD.RMN_PAY_AMT				AS	CD_RMN_PAY_AMT,
						CD.CLM_QTY					AS	CD_CLM_QTY,
						CD.CMS						AS	CD_CMS,
						CD.GOODS_CMSN_RT			AS	CD_GOODS_CMSN_RT,
						CD.TAX_GB_CD				AS	CD_TAX_GB_CD,
						CD.DLVRC_NO					AS	CD_DLVRC_NO,
						CD.RTN_DLVRC_NO				AS	CD_RTN_DLVRC_NO,
						CD.DLVRA_NO					AS	CD_DLVRA_NO,
						CD.RTRNA_NO					AS	CD_RTRNA_NO,
						CD.DLVR_NO						CD_DLVR_NO,
						CD.COMP_NO					AS	CD_COMP_NO,
						CD.UP_COMP_NO				AS	CD_UP_COMP_NO,
						CD.CLM_CPLT_DTM				AS	CD_CLM_CPLT_DTM,
						CD.RTN_MTD_CD				AS	CD_RTN_MTD_CD,
						CD.OUTSIDE_CLM_DTL_NO		AS	CD_OUTSIDE_CLM_DTL_NO,
						CD.STL_NO					AS	CD_STL_NO,
						CD.DLVR_CPLT_PIC_URL		AS	CD_DLVR_CPLT_PIC_URL,
						CD.DLVR_SMS					AS	CD_DLVR_SMS,
						CD.TWC_TCKT					AS	CD_TWC_TCKT,
						CD.DLVR_CPLT_YN				AS	CD_DLVR_CPLT_YN,
						FN_GET_GOODS_STOCK(OD.GOODS_ID, OD.ITEM_NO) AS CD_STK_QTY,
						(CD.PAY_AMT * CD.CLM_QTY) + CD.RMN_PAY_AMT AS CD_RFD_PAY_TOT_AMT,
						CB.ST_ID					AS	CB_ST_ID,
						CB.CLM_TP_CD				AS	CB_CLM_TP_CD,
						CB.CLM_STAT_CD				AS	CB_CLM_STAT_CD,
						CB.ORD_MDA_CD				AS	CB_ORD_MDA_CD,
						CB.CHNL_ID					AS	CB_CHNL_ID,
						CB.SWAP_YN					AS	CB_SWAP_YN,
						CB.ACPT_DTM					AS	CB_ACPT_DTM,
						CB.CNC_DTM					AS	CB_CNC_DTM,
						CB.CPLT_DTM					AS	CB_CPLT_DTM,
						CB.ACPTR_NO					AS	CB_ACPTR_NO,
						CB.CNCR_NO					AS	CB_CNCR_NO,
						CB.CPLTR_NO					AS	CB_CPLTR_NO,
						CB.OUTSIDE_CLM_NO			AS	CB_OUTSIDE_CLM_NO,
						CB.ORDR_SHOW_YN				AS	CB_ORDR_SHOW_YN,
						CASE
							WHEN CB.CLM_TP_CD = '30'
							THEN ( SELECT CDT.ITEM_NM FROM CLAIM_DETAIL CDT WHERE CDT.CLM_NO = CD.CLM_NO ORDER BY CDT.CLM_DTL_SEQ DESC LIMIT 1)
							ELSE CD.ITEM_NM
						END AS CD_ITEM_NM,
						CASE
							WHEN CB.CLM_TP_CD = '30'
							THEN ( SELECT CDT.ITEM_NO FROM CLAIM_DETAIL CDT WHERE CDT.CLM_NO = CD.CLM_NO ORDER BY CDT.CLM_DTL_SEQ DESC LIMIT 1)
							ELSE CD.ITEM_NO
						END AS CD_ITEM_NO,
						(SELECT DISP_CLSF_NM FROM DISPLAY_CATEGORY WHERE DISP_CLSF_NO = CD.DISP_CLSF_NO) AS CD_DISP_CLSF_NM,
						(
							SELECT IFNULL(SUM(APL_AMT), 0)
							FROM APL_BNFT AB
							WHERE AB.ORD_NO = OD.ORD_NO AND AB.ORD_DTL_SEQ = OD.ORD_DTL_SEQ AND AB.APL_BNFT_GB_CD = '20' AND AB.APL_BNFT_TP_CD  = '210'
						) AS CD_CP_DC_AMT,		/* 상품 쿠폰 할인 금액 */
						(
							SELECT	IFNULL(SUM(APL_AMT), 0)
							FROM APL_BNFT AB
							WHERE	AB.ORD_NO = OD.ORD_NO AND AB.ORD_DTL_SEQ = OD.ORD_DTL_SEQ AND AB.APL_BNFT_GB_CD = '20' AND AB.APL_BNFT_TP_CD  = '220'
						) AS CD_CART_CP_DC_AMT,	/** 장바구니 쿠폰 할인 금액 */
						(SELECT BND_NM_KO FROM BRAND_BASE WHERE BND_NO = (SELECT BND_NO FROM GOODS_BASE WHERE GOODS_ID = CD.GOODS_ID)) AS CD_BND_NM_KO,	/* 브랜드명 국문 */
						(
							 SELECT GROUP_CONCAT( GB.GOODS_NM, ',')
							 FROM GOODS_BASE GB
							 WHERE GB.GOODS_ID IN (
								SELECT ODC.CSTRT_GOODS_ID
								FROM ORD_DTL_CSTRT ODC
								INNER JOIN ORDER_DETAIL ODD ON ODC.ORD_NO = ODD.ORD_NO AND ODC.ORD_DTL_SEQ = ODD.ORD_DTL_SEQ
								WHERE ODC.ORD_NO  = OD.ORD_NO AND ODC.CSTRT_GOODS_GB_CD = '30'
								ORDER BY ODD.ORD_DTL_SEQ ASC
							)
						) AS CD_SUB_GOODS_NM, /*사은품명*/
						CASE WHEN (SELECT COMP_GB_CD FROM COMPANY_BASE CB WHERE CB.COMP_NO = CD.COMP_NO) = '20' THEN '10'
						ELSE (SELECT DLVR_PRCS_TP_CD FROM ORDER_BASE X1 WHERE X1.ORD_NO = CD.ORD_NO)
						END CD_DLVR_PRCS_TP_CD,
						ROW_NUMBER() OVER(PARTITION BY OD.ORD_NO, OD.ORD_DTL_SEQ ORDER BY OD.ORD_DTL_SEQ DESC) AS CLM_DTL_SEQ_ORDER
					FROM (
						SELECT
							ORD_NO,
							ST_ID,
							ORD_STAT_CD,
							ORD_MDA_CD,
							MBR_NO,
							MBR_GRD_CD,
							ORD_NM,
							ORDR_ID,
							ORDR_EMAIL,
							ORDR_TEL,
							ORDR_MOBILE,
							ORDR_IP,
							ORD_ACPT_DTM,
							ORD_CPLT_DTM,
							OUTSIDE_ORD_NO,
							CHNL_ID,
							ORD_DTL_CNT,
							ORD_PRCS_RST_CD,
							ORD_PRCS_RST_MSG,
							DATA_STAT_CD,
							DLVR_PRCS_TP_CD,
							ORDR_SHOW_YN
						FROM
							ORDER_BASE OB
						<trim prefix="WHERE" prefixOverrides="AND |OR ">
						<include refid="order.pageOrderDeliveryListCondition" />
						</trim>
						ORDER BY ORD_ACPT_DTM DESC
						<include refid="bizCommon.pageSql" />
					) OB
					INNER JOIN ORDER_DETAIL OD ON (OB.ORD_NO = OD.ORD_NO)
					INNER JOIN GOODS_BASE GB ON (OD.GOODS_ID = GB.GOODS_ID)
					INNER JOIN GOODS_IMG GI ON (OD.GOODS_ID = GI.GOODS_ID AND GI.DLGT_YN = 'Y')
					INNER JOIN COMPANY_BASE CP ON (OD.COMP_NO = CP.COMP_NO )
					LEFT JOIN CLAIM_DETAIL CD ON (OD.ORD_NO = CD.ORD_NO AND OD.ORD_DTL_SEQ = CD.ORD_DTL_SEQ)
					LEFT JOIN CLAIM_BASE CB ON CB.CLM_NO = CD.CLM_NO AND CB.CLM_STAT_CD &lt;> '40'
				) OBB
			)OBB
			WHERE 
				OBB.LIST_DELIMITER = 'DELIVERY'
				AND CLM_DTL_SEQ_ORDER = 1
			UNION ALL
			SELECT 
				OBB.*
				, (SELECT IFNULL(SUM(CLM_QTY), 0) AS CLM_EXC_QTY FROM CLAIM_BASE CB ,CLAIM_DETAIL CD 
					WHERE CB.CLM_NO = CD.CLM_NO AND CB.CLM_TP_CD = '30' AND CB.CLM_STAT_CD IN ('30') AND CD.CLM_DTL_TP_CD = '40' AND CB.ORD_NO = OBB.ORD_NO AND CD.ORD_DTL_SEQ = OBB.ORD_DTL_SEQ 
				) AS CLM_EXC_CPLT_QTY
			FROM (
				SELECT
					ORD_NO,
					ST_ID,
					ORD_STAT_CD,
					ORD_MDA_CD,
					MBR_NO,
					MBR_GRD_CD,
					ORD_NM,
					ORDR_ID,
					ORDR_EMAIL,
					ORDR_TEL,
					ORDR_MOBILE,
					ORDR_IP,
					ORD_ACPT_DTM,
					ORD_CPLT_DTM,
					OUTSIDE_ORD_NO,
					CHNL_ID,
					ORD_DTL_CNT,
					ORD_PRCS_RST_CD,
					ORD_PRCS_RST_MSG,
					DATA_STAT_CD,
					DLVR_PRCS_TP_CD, /* 일반택배일 경우 강제로 코드를 10으로 바꿔줌 */
					ORDR_SHOW_YN,
					PAY_AMT_TOTAL,		/* 결제 금액 */
					CNC_PSB_YN,			/* 취소 가능 여부 */
					ORD_DTL_SEQ,
					ORD_DTL_STAT_CD,
					GOODS_ID,
					ITEM_NO,
					ITEM_NM,
					DEAL_GOODS_ID,
					PAK_GOODS_ID,
					COMP_GOODS_ID,
					COMP_ITEM_ID,
					ORD_QTY,
					CNC_QTY,
					RTN_QTY,
					RMN_ORD_QTY,
					GOODS_PRC_NO,
					SALE_AMT,
					PAY_AMT,
					RMN_PAY_AMT,
					CMS,
					GOODS_CMSN_RT,
					TAX_GB_CD,
					ORD_SVMN,
					SVMN_VLD_PRD_CD,
					SVMN_VLD_PRD,
					FREE_DLVR_YN,
					HOT_DEAL_YN,
					DLVRC_NO,
					ORD_DLVRA_NO,
					COMP_NO,
					UP_COMP_NO,
					MD_USR_NO,
					GOODS_ESTM_NO,
					GOODS_ESTM_REG_YN,
					GOODS_ESTM_TP,
					OUTSIDE_ORD_DTL_NO,
					STL_NO,
					DISP_CLSF_NO,
					DLVR_CPLT_PIC_URL,
					DLVR_SMS,
					DLVR_CPLT_YN,
					MKI_GOODS_YN,
					MKI_GOODS_OPT_CONTENT,
					RSV_GOODS_YN,
					ISU_SCHD_PNT,
					RTN_PSB_YN,				/* 반품 가능 여부 */
					RTN_ING_YN,				/* 반품 진행 여무 */
					RTN_CPLT_QTY,			/* 반품 완료 수량 */
					CLM_EXC_ING_QTY,		/* 교환 진행 수량 */
					CLM_ING_YN,				/* 클레임 진행 여부 */
					PRMT_DC_AMT,			/* 프로모션 할인 금액 */
					CP_DC_AMT,				/* 쿠폰 할인 금액 */
					DLVR_NO,				/* 배송 번호 */
					STK_QTY,
					VLD_ORD_QTY,
					IMG_SEQ,
					IMG_PATH,
					RVS_IMG_PATH,
					COMP_NM,
					COMP_GB_CD, /* 업체 구분 코드 10:자사 */
					ITEM_MNG_YN,
					BND_NM, 			/* 노출 브랜드명 */
					BND_NM_KO,		/* 브랜드명 국문 */
					GOODS_CSTRT_TP_CD,
					PAK_ITEM_NM,
					CASE WHEN DLVR_NO &lt; 0 AND ADDDATE((SELECT DLVR_CPLT_DTM FROM DELIVERY WHERE DLVR_NO = OBB.DLVR_NO),7) &lt; SYSDATE() THEN 'N' ELSE 'Y' END AS COMPARE_DTM_YN,
					(
						SELECT
							GROUP_CONCAT( GB.GOODS_NM )
						FROM GOODS_BASE GB
						WHERE GB.GOODS_ID IN (
							SELECT ODC.CSTRT_GOODS_ID
							FROM ORD_DTL_CSTRT ODC
							INNER JOIN ORDER_DETAIL OD ON ODC.ORD_NO = OBB.ORD_NO AND ODC.ORD_DTL_SEQ = OBB.ORD_DTL_SEQ
							WHERE ODC.ORD_NO  = OBB.ORD_NO AND ODC.CSTRT_GOODS_GB_CD = '30'
							ORDER BY OBB.ORD_DTL_SEQ ASC
						)
					)AS SUB_GOODS_NM,		/*사은품명*/
					( SELECT ODAM.ORD_DT FROM ORD_DLVR_AREA_MAP ODAM WHERE ODAM.ORD_NO = OBB.ORD_NO AND ODAM.DEL_YN ='N') AS ORD_DT,
					( SELECT WEEKDAY(DATE_FORMAT(ODAM.ORD_DT, '%Y%m%d')) FROM ORD_DLVR_AREA_MAP ODAM WHERE ODAM.ORD_NO = OBB.ORD_NO AND ODAM.DEL_YN ='N') AS ORD_DT_WEEK,
					( SELECT DLVR_CPLT_DTM FROM DELIVERY DV WHERE DV.DLVR_NO = OBB.DLVR_NO AND DV.ORD_CLM_GB_CD ='10') as DLVR_CPLT_DTM,		/*배송 완료 일시*/
					( SELECT WEEKDAY(DATE_FORMAT(DLVR_CPLT_DTM, '%Y%m%d')) FROM DELIVERY DV WHERE DV.DLVR_NO = OBB.DLVR_NO AND DV.ORD_CLM_GB_CD ='10') as DLVR_CPLT_DTM_WEEK,	/*배송 완료 일시 요일*/
					IFNULL((SELECT INV_NO FROM DELIVERY DV WHERE DV.DLVR_NO = OBB.DLVR_NO), '') AS DLVR_INV_NO,
					(
						SELECT CONCAT_WS('|', if(BANK_CD='', null, BANK_CD) , if(ACCT_NO='', null, ACCT_NO), if(DPST_SCHD_DT='', null, DPST_SCHD_DT))
						FROM PAY_BASE PB
						WHERE PB.ORD_CLM_GB_CD ='10' AND PB.PAY_MEANS_CD IN('10', '20', '30') AND CNC_YN ='N'  AND PB.ORD_NO = OBB.ORD_NO
					) AS ORD_BANK_INFO,
					(CASE WHEN PAK_GOODS_ID IS null THEN GOODS_NM ELSE PAK_GOODS_NM END) AS GOODS_NM,     /* 상품 명 */
					(CASE WHEN GOODS_CSTRT_TP_CD = 'PAK' THEN GOODS_NM ELSE NULL END) AS OPT_GOODS_NM,
					CD_CLM_NO,
					CD_CLM_DTL_SEQ,
					CD_CLM_DTL_TP_CD,
					CD_CLM_DTL_STAT_CD,
					CD_CLM_RSN_CD,
					CD_CLM_RSN_CONTENT,
					CD_CLM_DENY_RSN_CONTENT,
					CD_MBR_NO,
					CD_ORD_NO,
					CD_ORD_DTL_SEQ,
					CD_ORG_CLM_NO,
					CD_ORG_CLM_DTL_SEQ,
					CD_GOODS_ID,
					CD_GOODS_NM,
					CD_DEAL_GOODS_ID,
					CD_PAK_GOODS_ID,
					CD_DISP_CLSF_NO,
					CD_COMP_GOODS_ID,
					CD_COMP_ITEM_ID,
					CD_GOODS_PRC_NO,
					CD_SALE_AMT,
					CD_PAY_AMT,
					CD_RMN_PAY_AMT,
					CD_CLM_QTY,
					CD_CMS,
					CD_GOODS_CMSN_RT,
					CD_TAX_GB_CD,
					CD_DLVRC_NO,
					CD_RTN_DLVRC_NO,
					CD_DLVRA_NO,
					CD_RTRNA_NO,
					CD_DLVR_NO,
					CD_COMP_NO,
					CD_UP_COMP_NO,
					CD_CLM_CPLT_DTM,
					CD_RTN_MTD_CD,
					CD_OUTSIDE_CLM_DTL_NO,
					CD_STL_NO,
					CD_DLVR_CPLT_PIC_URL,
					CD_DLVR_SMS,
					CD_TWC_TCKT,
					CD_DLVR_CPLT_YN,
					CD_STK_QTY,
					CD_RFD_PAY_TOT_AMT,
					CB_ST_ID,
					CB_CLM_TP_CD,
					CB_CLM_STAT_CD,
					CB_ORD_MDA_CD,
					CB_CHNL_ID,
					CB_SWAP_YN,
					CB_ACPT_DTM,
					CB_CNC_DTM,
					CB_CPLT_DTM,
					CB_ACPTR_NO,
					CB_CNCR_NO,
					CB_CPLTR_NO,
					CB_OUTSIDE_CLM_NO,
					CB_ORDR_SHOW_YN,
					CD_ITEM_NM,
					CD_ITEM_NO,
					CD_DISP_CLSF_NM,
					CD_CP_DC_AMT,		/* 상품 쿠폰 할인 금액 */
					CD_CART_CP_DC_AMT,	/** 장바구니 쿠폰 할인 금액 */
					CD_BND_NM_KO,		/* 브랜드명 국문 */
					CD_SUB_GOODS_NM,	/*사은품명*/
					CD_DLVR_PRCS_TP_CD,
					CASE WHEN CLM_DTL_STAT_ASC IS NULL THEN CONCAT('1ORD', ORD_DTL_STAT_CD)
					WHEN (CLM_DTL_STAT_ASC IS NOT NULL AND ((ORD_QTY - CNC_QTY - RTN_QTY) > 0)) THEN CONCAT('2CLM', CLM_DTL_STAT_ASC)
					ELSE CONCAT('2CLM', CLM_DTL_STAT_ASC)
					END AS FORCE_DTL_STAT, /* 주문과 클레임을 구분하여 리스트에 담기위한 구분자 */
					CASE WHEN CLM_DTL_STAT_ASC IS NULL THEN 'DELIVERY'
					WHEN (CLM_DTL_STAT_ASC IS NOT NULL AND ((ORD_QTY - CNC_QTY - RTN_QTY) > 0)) THEN 'CLAIM'
					ELSE 'CLAIM'
					END AS LIST_DELIMITER, /* 주문과 클레임을 구분하여 리스트에 담기위한 구분자 */
					CLM_DTL_SEQ_ORDER,
					CASE WHEN CB_CLM_TP_CD != '30' 
						 THEN CD_CLM_DTL_STAT_CD
						 WHEN CLM_DTL_STAT_ASC = '31'
				         THEN '410'
					     WHEN CLM_DTL_STAT_ASC = '32'
					     THEN '330'
					    <!-- 교환 거부 순서 변경 -->
					     WHEN CLM_DTL_STAT_ASC = '50'
					     THEN '350'
					     WHEN CLM_DTL_STAT_ASC = '45'
					     THEN '450'
					     ELSE CD_CLM_DTL_STAT_CD
			     	  END AS VIEW_CD_CLM_DTL_STAT_CD
				FROM (
					SELECT
						OB.ORD_NO,
						OB.ST_ID,
						OB.ORD_STAT_CD,
						OB.ORD_MDA_CD,
						OB.MBR_NO,
						OB.MBR_GRD_CD,
						OB.ORD_NM,
						OB.ORDR_ID,
						OB.ORDR_EMAIL,
						OB.ORDR_TEL,
						OB.ORDR_MOBILE,
						OB.ORDR_IP,
						OB.ORD_ACPT_DTM,
						OB.ORD_CPLT_DTM,
						OB.OUTSIDE_ORD_NO,
						OB.CHNL_ID,
						OB.ORD_DTL_CNT,
						OB.ORD_PRCS_RST_CD,
						OB.ORD_PRCS_RST_MSG,
						OB.DATA_STAT_CD,
						(
							CASE WHEN COMP_GB_CD='10' THEN OB.DLVR_PRCS_TP_CD
							ELSE '10' END
						) AS DLVR_PRCS_TP_CD,
						OB.ORDR_SHOW_YN,
						FN_GET_ORDER_PAY_AMT(OB.ORD_NO) AS PAY_AMT_TOTAL,		/* 결제 금액 */
						FN_GET_ORDER_CANCEL_PSB_YN(OB.ORD_NO) AS CNC_PSB_YN,	/* 취소 가능 여부 */
						OD.ORD_DTL_SEQ,
						OD.ORD_DTL_STAT_CD,
						OD.GOODS_ID,
						OD.ITEM_NO,
						OD.ITEM_NM,
						OD.DEAL_GOODS_ID,
						OD.PAK_GOODS_ID,
						OD.COMP_GOODS_ID,
						OD.COMP_ITEM_ID,
						OD.ORD_QTY,
						OD.CNC_QTY,
						OD.RTN_QTY,
						OD.RMN_ORD_QTY,
						OD.GOODS_PRC_NO,
						OD.SALE_AMT,
						OD.PAY_AMT,
						OD.RMN_PAY_AMT,
						OD.CMS,
						OD.GOODS_CMSN_RT,
						OD.TAX_GB_CD,
						OD.ORD_SVMN,
						OD.SVMN_VLD_PRD_CD,
						OD.SVMN_VLD_PRD,
						OD.FREE_DLVR_YN,
						OD.HOT_DEAL_YN,
						OD.DLVRC_NO,
						OD.ORD_DLVRA_NO,
						OD.COMP_NO,
						OD.UP_COMP_NO,
						OD.MD_USR_NO,
						OD.GOODS_ESTM_NO,
						OD.GOODS_ESTM_REG_YN,
						CASE WHEN OD.GOODS_ESTM_REG_YN  = 'Y' THEN (SELECT GOODS_ESTM_TP FROM GOODS_COMMENT GC WHERE GC.GOODS_ESTM_NO = OD.GOODS_ESTM_NO) END AS GOODS_ESTM_TP,
						OD.OUTSIDE_ORD_DTL_NO,
						OD.STL_NO,
						OD.DISP_CLSF_NO,
						OD.DLVR_CPLT_PIC_URL,
						OD.DLVR_SMS,
						OD.DLVR_CPLT_YN,
						OD.MKI_GOODS_YN,
						OD.MKI_GOODS_OPT_CONTENT,
						OD.RSV_GOODS_YN,
						OD.ISU_SCHD_PNT,
						(SELECT RTN_PSB_YN FROM GOODS_BASE WHERE GOODS_ID = OD.GOODS_ID) AS RTN_PSB_YN,	/* 반품 가능 여부 */
						FN_GET_ORDER_CLAIM_ING_RTN_YN(OD.ORD_NO, OD.ORD_DTL_SEQ) AS RTN_ING_YN,			/* 반품 진행 여무 */
						FN_GET_ORD_CLM_RTN_CPLT_QTY(OD.ORD_NO, OD.ORD_DTL_SEQ)  AS RTN_CPLT_QTY,		/* 반품 완료 수량 */
						FN_GET_ORDER_CLAIM_EXC_QTY(OD.ORD_NO, OD.ORD_DTL_SEQ)  AS CLM_EXC_ING_QTY,		/* 교환 진행 수량 */
						FN_GET_ORDER_CLAIM_ING_YN(OD.ORD_NO, OD.ORD_DTL_SEQ) AS CLM_ING_YN,				/* 클레임 진행 여부 */
						FN_GET_ORDER_DTL_PRMT_DC_AMT(OB.ORD_NO, OD.ORD_DTL_SEQ) AS PRMT_DC_AMT,			/* 프로모션 할인 금액 */
						FN_GET_ORDER_DTL_CP_DC_AMT(OB.ORD_NO, OD.ORD_DTL_SEQ) AS CP_DC_AMT,				/* 쿠폰 할인 금액 */
						<!-- FN_GET_ORDER_DLVR_NO(OD.ORD_NO, OD.ORD_DTL_SEQ, 'Y') AS DLVR_NO,				/* 배송 번호 */ -->
						FN_GET_CLM_DLVR_NO(CD.CLM_NO, MAX(CD.CLM_DTL_SEQ) OVER(PARTITION BY CD.CLM_NO, CD.ORD_NO, CD.ORD_DTL_SEQ), 'Y') AS DLVR_NO,	/*배송번호 - 교환배송쪽 배송번호를 가져오도록 수정 - 2021.05.17 by kek01*/
						FN_GET_GOODS_STOCK(OD.GOODS_ID, OD.ITEM_NO) AS STK_QTY,
						OD.RMN_ORD_QTY -  FN_GET_ORD_CLM_RTN_CPLT_QTY(OD.ORD_NO, OD.ORD_DTL_SEQ) AS VLD_ORD_QTY, /* 유효 주문 수량 */
						GI.IMG_SEQ,
						GI.IMG_PATH,
						GI.RVS_IMG_PATH,
						CP.COMP_NM,
						CP.COMP_GB_CD, /* 업체 구분 코드 10:자사 */
						GB.ITEM_MNG_YN,
						GB.GOODS_NM,
						FN_GET_BRAND_NAME(GB.BND_NO) AS BND_NM, 			/* 노출 브랜드명 */
						FN_GET_BRAND_NAME_KO(GB.BND_NO) AS BND_NM_KO,		/* 브랜드명 국문 */
						(SELECT GOODS_NM FROM GOODS_BASE WHERE GOODS_ID = OD.PAK_GOODS_ID) AS PAK_GOODS_NM,
						CASE WHEN OD.PAK_GOODS_ID IS NULL THEN GB.GOODS_CSTRT_TP_CD
						ELSE (SELECT GOODS_CSTRT_TP_CD FROM GOODS_BASE WHERE GOODS_ID = OD.PAK_GOODS_ID)
						END AS GOODS_CSTRT_TP_CD,
						CASE WHEN OD.PAK_GOODS_ID IS NOT NULL THEN
						(
							SELECT GROUP_CONCAT(CONCAT_WS(' : ', GOG.SHOW_NM , AV.ATTR_VAL) ORDER BY GOG.DISP_PRIOR_RANK SEPARATOR '|')
							FROM GOODS_BASE GB,ITEM IT, GOODS_OPT_GRP GOG, GOODS_ATTRIBUTE GA, ITEM_ATTRIBUTE_VALUE IAV, ATTRIBUTE_VALUE AV
							WHERE GB.GOODS_ID = IT.GOODS_ID AND GA.GOODS_ID = GB.GOODS_ID
								AND GA.ATTR_NO = AV.ATTR_NO AND GOG.ATTR_NO = GA.ATTR_NO
								AND GOG.ATTR_NO = AV.ATTR_NO AND IAV.ITEM_NO = IT.ITEM_NO
								AND IAV.ATTR_NO = AV.ATTR_NO AND AV.ATTR_VAL_NO = IAV.ATTR_VAL_NO
								AND GB.GOODS_ID = OD.GOODS_ID AND GOG.GOODS_ID = OD.PAK_GOODS_ID
						)
						END AS PAK_ITEM_NM,
						CD.CLM_NO					AS	CD_CLM_NO,
						<!-- CD.CLM_DTL_SEQ				AS	CD_CLM_DTL_SEQ, -->
						<!-- CD.CLM_DTL_STAT_CD			AS	CD_CLM_DTL_STAT_CD, -->
						<!-- CD.CLM_QTY					AS	CD_CLM_QTY, -->
						CD.CLM_DTL_SEQ				AS	ORG_CD_CLM_DTL_SEQ,
						MIN(CD.CLM_DTL_SEQ) OVER(PARTITION BY CD.CLM_NO, CD.ORD_NO, CD.ORD_DTL_SEQ, CD.CLM_DTL_TP_CD) AS	CD_CLM_DTL_SEQ,
						MIN(CD.CLM_DTL_STAT_CD) OVER(PARTITION BY CD.CLM_NO, CD.ORD_NO, CD.ORD_DTL_SEQ, CD.CLM_DTL_TP_CD) AS	CD_CLM_DTL_STAT_CD,
						<!-- 2021-06-09 교환일 경우 배송쪽 남은수량 합 -->
						CASE
							WHEN CB.CLM_TP_CD = '30'
							THEN (SELECT SUM(RMN_CLM_QTY) FROM CLAIM_DETAIL 
								   WHERE CLM_NO = CD.CLM_NO AND ORD_NO = OD.ORD_NO AND ORD_DTL_SEQ = CD.ORD_DTL_SEQ AND CLM_DTL_TP_CD = '40')
							ELSE SUM(CD.RMN_CLM_QTY) OVER(PARTITION BY CD.CLM_NO, CD.ORD_NO, CD.ORD_DTL_SEQ, CD.CLM_DTL_TP_CD )
						END AS CD_CLM_QTY,
						CD.CLM_DTL_TP_CD			AS	CD_CLM_DTL_TP_CD,
						(SELECT USR_DFN3_VAL FROM CODE_DETAIL WHERE GRP_CD = 'CLM_DTL_STAT' AND DTL_CD = CD.CLM_DTL_STAT_CD) AS CLM_DTL_STAT_ASC,
						CD.CLM_RSN_CD				AS	CD_CLM_RSN_CD,
						CD.CLM_RSN_CONTENT			AS	CD_CLM_RSN_CONTENT,
						CD.CLM_DENY_RSN_CONTENT		AS	CD_CLM_DENY_RSN_CONTENT,
						CD.MBR_NO					AS	CD_MBR_NO,
						CD.ORD_NO					AS	CD_ORD_NO,
						CD.ORD_DTL_SEQ				AS	CD_ORD_DTL_SEQ,
						CD.ORG_CLM_NO				AS	CD_ORG_CLM_NO,
						CD.ORG_CLM_DTL_SEQ			AS	CD_ORG_CLM_DTL_SEQ,
						CD.GOODS_ID					AS	CD_GOODS_ID,
						CD.GOODS_NM					AS	CD_GOODS_NM,
						CD.DEAL_GOODS_ID			AS	CD_DEAL_GOODS_ID,
						CD.PAK_GOODS_ID				AS	CD_PAK_GOODS_ID,
						CD.DISP_CLSF_NO				AS	CD_DISP_CLSF_NO,
						CD.COMP_GOODS_ID			AS	CD_COMP_GOODS_ID,
						CD.COMP_ITEM_ID				AS	CD_COMP_ITEM_ID,
						CD.GOODS_PRC_NO				AS	CD_GOODS_PRC_NO,
						CD.SALE_AMT					AS	CD_SALE_AMT,
						CD.PAY_AMT					AS	CD_PAY_AMT,
						CD.RMN_PAY_AMT				AS	CD_RMN_PAY_AMT,
						CD.CMS						AS	CD_CMS,
						CD.GOODS_CMSN_RT			AS	CD_GOODS_CMSN_RT,
						CD.TAX_GB_CD				AS	CD_TAX_GB_CD,
						CD.DLVRC_NO					AS	CD_DLVRC_NO,
						CD.RTN_DLVRC_NO				AS	CD_RTN_DLVRC_NO,
						CD.DLVRA_NO					AS	CD_DLVRA_NO,
						CD.RTRNA_NO					AS	CD_RTRNA_NO,
						CD.DLVR_NO						CD_DLVR_NO,
						CD.COMP_NO					AS	CD_COMP_NO,
						CD.UP_COMP_NO				AS	CD_UP_COMP_NO,
						CD.CLM_CPLT_DTM				AS	CD_CLM_CPLT_DTM,
						CD.RTN_MTD_CD				AS	CD_RTN_MTD_CD,
						CD.OUTSIDE_CLM_DTL_NO		AS	CD_OUTSIDE_CLM_DTL_NO,
						CD.STL_NO					AS	CD_STL_NO,
						CD.DLVR_CPLT_PIC_URL		AS	CD_DLVR_CPLT_PIC_URL,
						CD.DLVR_SMS					AS	CD_DLVR_SMS,
						CD.TWC_TCKT					AS	CD_TWC_TCKT,
						CD.DLVR_CPLT_YN				AS	CD_DLVR_CPLT_YN,
						FN_GET_GOODS_STOCK(OD.GOODS_ID, OD.ITEM_NO) AS CD_STK_QTY,
						(CD.PAY_AMT * CD.CLM_QTY) + CD.RMN_PAY_AMT AS CD_RFD_PAY_TOT_AMT,
						CB.ST_ID					AS	CB_ST_ID,
						CB.CLM_TP_CD				AS	CB_CLM_TP_CD,
						CB.CLM_STAT_CD				AS	CB_CLM_STAT_CD,
						CB.ORD_MDA_CD				AS	CB_ORD_MDA_CD,
						CB.CHNL_ID					AS	CB_CHNL_ID,
						CB.SWAP_YN					AS	CB_SWAP_YN,
						CB.ACPT_DTM					AS	CB_ACPT_DTM,
						CB.CNC_DTM					AS	CB_CNC_DTM,
						CB.CPLT_DTM					AS	CB_CPLT_DTM,
						CB.ACPTR_NO					AS	CB_ACPTR_NO,
						CB.CNCR_NO					AS	CB_CNCR_NO,
						CB.CPLTR_NO					AS	CB_CPLTR_NO,
						CB.OUTSIDE_CLM_NO			AS	CB_OUTSIDE_CLM_NO,
						CB.ORDR_SHOW_YN				AS	CB_ORDR_SHOW_YN,
						CASE
							WHEN CB.CLM_TP_CD = '30'
							THEN ( SELECT CDT.ITEM_NM FROM CLAIM_DETAIL CDT WHERE CDT.CLM_NO = CD.CLM_NO ORDER BY CDT.CLM_DTL_SEQ DESC LIMIT 1)
							ELSE CD.ITEM_NM
						END AS CD_ITEM_NM,
						CASE
							WHEN CB.CLM_TP_CD = '30'
							THEN ( SELECT CDT.ITEM_NO FROM CLAIM_DETAIL CDT WHERE CDT.CLM_NO = CD.CLM_NO ORDER BY CDT.CLM_DTL_SEQ DESC LIMIT 1)
							ELSE CD.ITEM_NO
						END AS CD_ITEM_NO,
						(SELECT DISP_CLSF_NM FROM DISPLAY_CATEGORY WHERE DISP_CLSF_NO = CD.DISP_CLSF_NO) AS CD_DISP_CLSF_NM,
						(
							SELECT IFNULL(SUM(APL_AMT), 0)
							FROM APL_BNFT AB
							WHERE AB.ORD_NO = OD.ORD_NO AND AB.ORD_DTL_SEQ = OD.ORD_DTL_SEQ AND AB.APL_BNFT_GB_CD = '20' AND AB.APL_BNFT_TP_CD  = '210'
						) AS CD_CP_DC_AMT,		/* 상품 쿠폰 할인 금액 */
						(
							SELECT	IFNULL(SUM(APL_AMT), 0)
							FROM APL_BNFT AB
							WHERE	AB.ORD_NO = OD.ORD_NO AND AB.ORD_DTL_SEQ = OD.ORD_DTL_SEQ AND AB.APL_BNFT_GB_CD = '20' AND AB.APL_BNFT_TP_CD  = '220'
						) AS CD_CART_CP_DC_AMT,	/** 장바구니 쿠폰 할인 금액 */
						(SELECT BND_NM_KO FROM BRAND_BASE WHERE BND_NO = (SELECT BND_NO FROM GOODS_BASE WHERE GOODS_ID = CD.GOODS_ID)) AS CD_BND_NM_KO,	/* 브랜드명 국문 */
						(
							 SELECT GROUP_CONCAT( GB.GOODS_NM, ',')
							 FROM GOODS_BASE GB
							 WHERE GB.GOODS_ID IN (
								SELECT ODC.CSTRT_GOODS_ID
								FROM ORD_DTL_CSTRT ODC
								INNER JOIN ORDER_DETAIL ODD ON ODC.ORD_NO = ODD.ORD_NO AND ODC.ORD_DTL_SEQ = ODD.ORD_DTL_SEQ
								WHERE ODC.ORD_NO  = OD.ORD_NO AND ODC.CSTRT_GOODS_GB_CD = '30'
								ORDER BY ODD.ORD_DTL_SEQ ASC
							)
						) AS CD_SUB_GOODS_NM, /*사은품명*/
						CASE WHEN (SELECT COMP_GB_CD FROM COMPANY_BASE CB WHERE CB.COMP_NO = CD.COMP_NO) = '20' THEN '10'
						ELSE (SELECT DLVR_PRCS_TP_CD FROM ORDER_BASE X1 WHERE X1.ORD_NO = CD.ORD_NO)
						END CD_DLVR_PRCS_TP_CD,
						ROW_NUMBER() OVER(PARTITION BY OD.ORD_NO, OD.ORD_DTL_SEQ, CD.CLM_NO ORDER BY CD.CLM_DTL_SEQ DESC) AS CLM_DTL_SEQ_ORDER,
						CASE WHEN CD.CLM_DTL_TP_CD IN ('10', '20') THEN 'Y'
						     WHEN CD.CLM_DTL_TP_CD = '30' 
						     THEN CASE WHEN MIN(CD.CLM_DTL_STAT_CD) OVER(PARTITION BY CD.CLM_NO, CD.ORD_NO, CD.ORD_DTL_SEQ) = '310'
						     		   THEN CASE WHEN MAX(CD.CLM_DTL_STAT_CD) OVER(PARTITION BY CD.CLM_NO, CD.ORD_NO, CD.ORD_DTL_SEQ) = 410
						     		   			 THEN 'N'
						     		   			 ELSE 'Y'
						     		   		 END
						     		   WHEN MIN(CD.CLM_DTL_STAT_CD) OVER(PARTITION BY CD.CLM_NO, CD.ORD_NO, CD.ORD_DTL_SEQ) = '360'
						     		   THEN CASE WHEN MAX(CD.CLM_DTL_STAT_CD) OVER(PARTITION BY CD.CLM_NO, CD.ORD_NO, CD.ORD_DTL_SEQ) = 410
						     		   			 THEN 'Y'
						     		   			 ELSE 'N'
						     		   		 END
						     		   WHEN MIN(CD.CLM_DTL_STAT_CD) OVER(PARTITION BY CD.CLM_NO, CD.ORD_NO, CD.ORD_DTL_SEQ) = '350'
						     		   THEN 'Y'
						     		   ELSE 'Y'
						     	   END
						     WHEN CD.CLM_DTL_TP_CD = '40' 
						     THEN CASE WHEN MIN(CD.CLM_DTL_STAT_CD) OVER(PARTITION BY CD.CLM_NO, CD.ORD_NO, CD.ORD_DTL_SEQ) = '310'
						     		   THEN CASE WHEN MAX(CD.CLM_DTL_STAT_CD) OVER(PARTITION BY CD.CLM_NO, CD.ORD_NO, CD.ORD_DTL_SEQ) = 410
						     		   			 THEN 'Y'
						     		   			 ELSE 'N'
						     		   		 END
				     		   		   WHEN MIN(CD.CLM_DTL_STAT_CD) OVER(PARTITION BY CD.CLM_NO, CD.ORD_NO, CD.ORD_DTL_SEQ) = '360'
						     		   THEN CASE WHEN MAX(CD.CLM_DTL_STAT_CD) OVER(PARTITION BY CD.CLM_NO, CD.ORD_NO, CD.ORD_DTL_SEQ) = 410
						     		   			 THEN 'N'
						     		   			 ELSE 'Y'
						     		   		 END
						     		   WHEN MIN(CD.CLM_DTL_STAT_CD) OVER(PARTITION BY CD.CLM_NO, CD.ORD_NO, CD.ORD_DTL_SEQ) = '350'
						     		   THEN 'N'
						     		   ELSE 'N'
						     	   END
						     ELSE 'N'
						END AS VIEW_CLM_YN
					FROM (
						SELECT
							ORD_NO,
							ST_ID,
							ORD_STAT_CD,
							ORD_MDA_CD,
							MBR_NO,
							MBR_GRD_CD,
							ORD_NM,
							ORDR_ID,
							ORDR_EMAIL,
							ORDR_TEL,
							ORDR_MOBILE,
							ORDR_IP,
							ORD_ACPT_DTM,
							ORD_CPLT_DTM,
							OUTSIDE_ORD_NO,
							CHNL_ID,
							ORD_DTL_CNT,
							ORD_PRCS_RST_CD,
							ORD_PRCS_RST_MSG,
							DATA_STAT_CD,
							DLVR_PRCS_TP_CD,
							ORDR_SHOW_YN
						FROM
							ORDER_BASE OB
						<trim prefix="WHERE" prefixOverrides="AND |OR ">
						<include refid="order.pageOrderDeliveryListCondition" />
						</trim>
						ORDER BY ORD_ACPT_DTM DESC
						<include refid="bizCommon.pageSql" />
					) OB
					INNER JOIN ORDER_DETAIL OD ON (OB.ORD_NO = OD.ORD_NO)
					INNER JOIN GOODS_BASE GB ON (OD.GOODS_ID = GB.GOODS_ID)
					INNER JOIN GOODS_IMG GI ON (OD.GOODS_ID = GI.GOODS_ID AND GI.DLGT_YN = 'Y')
					INNER JOIN COMPANY_BASE CP ON (OD.COMP_NO = CP.COMP_NO )
					INNER JOIN CLAIM_DETAIL CD ON (OD.ORD_NO = CD.ORD_NO AND OD.ORD_DTL_SEQ = CD.ORD_DTL_SEQ)
					LEFT JOIN CLAIM_BASE CB ON CB.CLM_NO = CD.CLM_NO AND CB.CLM_STAT_CD &lt;> '40'
				) OBB
				WHERE OBB.VIEW_CLM_YN = 'Y'
				  AND OBB.CD_CLM_QTY <![CDATA[>]]> 0
				  AND OBB.ORG_CD_CLM_DTL_SEQ = CD_CLM_DTL_SEQ
			)OBB
			WHERE 
				LIST_DELIMITER = 'CLAIM'
		) LIST
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="arrOrdDtlStatCd != null and arrOrdDtlStatCd.length > 0">
			AND ORD_DTL_STAT_CD IN (
				<foreach collection="arrOrdDtlStatCd" item="ordDtlStatCd" separator="," >
				#{ordDtlStatCd}
				</foreach>
			 )    /* 주문상태코드 */
			</if>
		</trim>
		ORDER BY ORD_ACPT_DTM DESC, COMP_GB_CD, COMP_NO, IF(CD_CLM_NO = ORD_NO, 'Z00000000000000000', CD_CLM_NO) DESC, FORCE_DTL_STAT,  ORD_DTL_SEQ
	</select>

	<select id="pageOrderDeliveryList2ndECount" resultType="java.lang.Integer">
		SELECT  /* QUERYID(order.pageOrderDeliveryListCount) */
					COUNT(*)
		FROM		ORDER_BASE OB
		WHERE 1=1
		<include refid="order.pageOrderDeliveryListCondition" />
	</select>
	
    <select id="pageOrderDeliveryList" resultMap="orderListMap">
        <!--
            Query Name : order.pageOrderDeliveryList
            Description : Front 마이페이지 주문/배송 조회 목록
        -->
SELECT /* QUERYID(order.pageOrderDeliveryList) */
	 ORD_NO					/* 주문번호 */
    , ST_ID					/* 사이트 아이디 */
    , ORD_ACPT_DTM			/* 접수 일자 */
    , ORD_CPLT_DTM			/* 완료 일자 */
    , MBR_NO					/* 회원 번호 */
    , ORD_STAT_CD			/* 주문 상태 */
    , PAY_AMT_TOTAL		/* 결제 금액 */
    , CNC_PSB_YN	/* 취소 가능 여부 */
    , ORD_DTL_SEQ			/* 주문 상세 순번 */
    , ORD_DTL_STAT_CD	 	/* 주문 상세 상태 코드 */
    , GOODS_ID				/* 상품 아이디 */    
    , RTN_PSB_YN	/* 반품 가능 여부 */
    , ITEM_MNG_YN
    , ITEM_NO				/* 단품 번호 */
    , ITEM_NM				/* 단품 명 */
    , RMN_ORD_QTY			/* 잔여 주문 수량 */
    , RTN_QTY				/* 반품 수량 */
    , ORD_QTY				/* 주문 수량 */
    , RTN_ING_YN /* 반품 진행 여무 */
    , RTN_CPLT_QTY 	/* 반품 완료 수량 */
    , CLM_EXC_ING_QTY		/* 교환 진행 수량 */
    , CLM_ING_YN 			/* 클레임 진행 여부 */
    , SALE_AMT				/* 판매 금액 */
	, PRMT_DC_AMT		/* 프로모션 할인 금액 */
	, CP_DC_AMT			/* 쿠폰 할인 금액 */
    , PAY_AMT				/* 결제 금액 */
   	, DLVR_NO
    , COMP_NO
    , COMP_NM
    , COMP_GB_CD			/* 업체 구분 코드 10:자사 */
    , GOODS_ESTM_REG_YN
    , GOODS_ESTM_NO
    , GOODS_ESTM_TP			
    , BND_NM 				/* 노출 브랜드명 */
	, BND_NM_KO /* 브랜드명 국문 */
    , IMG_SEQ
    , IMG_PATH
    , RVS_IMG_PATH
    , CASE WHEN DLVR_NO &lt; 0 AND ADDDATE((SELECT DLVR_CPLT_DTM FROM DELIVERY WHERE DLVR_NO = OBB.DLVR_NO),7) &lt; SYSDATE() THEN 'N' ELSE 'Y' END AS COMPARE_DTM_YN  
    , PAK_GOODS_ID
    , VLD_ORD_QTY /* 유효 주문 수량 */
    ,(
		 SELECT 
		  	group_concat( if(GB.GOODS_NM='', null, GB.GOODS_NM), ',') 
		  FROM GOODS_BASE GB    	
		  	WHERE GB.GOODS_ID IN  
		  	(					                   
				SELECT ODC.CSTRT_GOODS_ID 
				  FROM ORD_DTL_CSTRT ODC
				       INNER JOIN ORDER_DETAIL OD 
				       ON ODC.ORD_NO = OBB.ORD_NO
				       AND ODC.ORD_DTL_SEQ = OBB.ORD_DTL_SEQ	       
				 WHERE ODC.ORD_NO  = OBB.ORD_NO 
				 AND ODC.CSTRT_GOODS_GB_CD = '30'
				 ORDER BY OBB.ORD_DTL_SEQ ASC
			)	
	)AS SUB_GOODS_NM		/*사은품명*/        		
	,( SELECT DLVR_PRCS_TP_CD FROM DELIVERY DV where DV.DLVR_NO = OBB.DLVR_NO) as DLVR_PRCS_TP_CD									/*배송 처리 유형 코드*/	
	,( SELECT ODAM.ORD_DT FROM ORD_DLVR_AREA_MAP ODAM WHERE ODAM.ORD_NO = OBB.ORD_NO AND ODAM.DEL_YN ='N') as ORD_DT
	,( SELECT WEEKDAY(DATE_FORMAT(ODAM.ORD_DT, '%Y%m%d')) FROM ORD_DLVR_AREA_MAP ODAM WHERE ODAM.ORD_NO = OBB.ORD_NO AND ODAM.DEL_YN ='N') as ORD_DT_WEEK
	,( SELECT DLVR_CPLT_DTM FROM DELIVERY DV where DV.DLVR_NO = OBB.DLVR_NO and dv.ORD_CLM_GB_CD ='${@framework.common.constants.CommonConstants@ORD_CLM_GB_10}') as DLVR_CPLT_DTM		/*배송 완료 일시*/
	,( SELECT WEEKDAY(DATE_FORMAT(DLVR_CPLT_DTM, '%Y%m%d')) FROM DELIVERY DV where DV.DLVR_NO = OBB.DLVR_NO and dv.ORD_CLM_GB_CD ='10') as DLVR_CPLT_DTM_WEEK	/*배송 완료 일시 요일*/
	,(
	  	CASE 
	       WHEN (SELECT DLVR_PRCS_TP_CD FROM DELIVERY DV where DV.DLVR_NO = OBB.DLVR_NO) = '${@framework.common.constants.CommonConstants@DLVR_PRCS_TP_10}' THEN 
	       (SELECT INV_NO FROM DELIVERY DV where DV.DLVR_NO = OBB.DLVR_NO)        				
	    ELSE      					
	    	(SELECT CIS_INV_NO FROM DELIVERY DV where DV.DLVR_NO = OBB.DLVR_NO)		 
	  	END
	)AS DLVR_INV_NO	
	,STK_QTY
	,(
		SELECT CONCAT_WS('|', if(BANK_CD='', null, BANK_CD) , if(ACCT_NO='', null, ACCT_NO), if(DPST_SCHD_DT='', null, DPST_SCHD_DT)) FROM PAY_BASE PB WHERE PB.ORD_CLM_GB_CD ='${@framework.common.constants.CommonConstants@ORD_CLM_GB_10}' 
	 	AND PB.PAY_MEANS_CD IN('${@framework.common.constants.CommonConstants@PAY_MEANS_10}', '${@framework.common.constants.CommonConstants@PAY_MEANS_20}', '${@framework.common.constants.CommonConstants@PAY_MEANS_30}') 
		AND CNC_YN ='N'  AND PB.ORD_NO = OBB.ORD_NO
	) AS ORD_BANK_INFO
	,MKI_GOODS_YN
	,MKI_GOODS_OPT_CONTENT
	,GOODS_CSTRT_TP_CD   
    ,CASE WHEN PAK_GOODS_ID IS null THEN GOODS_NM
		   ELSE PAK_GOODS_NM
	 END AS GOODS_NM     /* 상품 명 */
    ,CASE WHEN GOODS_CSTRT_TP_CD = 'PAK' THEN GOODS_NM
	   ELSE NULL
	  END AS OPT_GOODS_NM		  
	,PAK_ITEM_NM	
FROM
( 		
        		SELECT  	
		            OB.ORD_NO					/* 주문번호 */
		            , OB.ST_ID					/* 사이트 아이디 */
		            , OB.ORD_ACPT_DTM			/* 접수 일자 */
		            , OB.ORD_CPLT_DTM			/* 완료 일자 */
		            , OB.MBR_NO					/* 회원 번호 */
		            , OB.ORD_STAT_CD			/* 주문 상태 */
		            , FN_GET_ORDER_PAY_AMT(OB.ORD_NO) AS PAY_AMT_TOTAL		/* 결제 금액 */
		            , FN_GET_ORDER_CANCEL_PSB_YN(OB.ORD_NO) AS CNC_PSB_YN	/* 취소 가능 여부 */
		            , OD.ORD_DTL_SEQ			/* 주문 상세 순번 */
		            , OD.ORD_DTL_STAT_CD	 	/* 주문 상세 상태 코드 */
		            , OD.GOODS_ID				/* 상품 아이디 */
		            , OD.GOODS_NM				/* 상품 명 */
		            , (SELECT RTN_PSB_YN FROM GOODS_BASE WHERE GOODS_ID = OD.GOODS_ID) AS RTN_PSB_YN	/* 반품 가능 여부 */
		            , GB.ITEM_MNG_YN
		            , OD.ITEM_NO				/* 단품 번호 */
		            , OD.ITEM_NM				/* 단품 명 */
		            , OD.RMN_ORD_QTY			/* 잔여 주문 수량 */
		            , OD.RTN_QTY				/* 반품 수량 */
		            , OD.ORD_QTY				/* 주문 수량 */
		            , FN_GET_ORDER_CLAIM_ING_RTN_YN(OD.ORD_NO, OD.ORD_DTL_SEQ) AS RTN_ING_YN /* 반품 진행 여무 */
		            , FN_GET_ORD_CLM_RTN_CPLT_QTY(OD.ORD_NO, OD.ORD_DTL_SEQ)  AS RTN_CPLT_QTY 	/* 반품 완료 수량 */
		            , FN_GET_ORDER_CLAIM_EXC_QTY(OD.ORD_NO, OD.ORD_DTL_SEQ)  AS CLM_EXC_ING_QTY		/* 교환 진행 수량 */
		            , FN_GET_ORDER_CLAIM_ING_YN(OD.ORD_NO, OD.ORD_DTL_SEQ) AS CLM_ING_YN 			/* 클레임 진행 여부 */
		            , OD.SALE_AMT				/* 판매 금액 */
					, FN_GET_ORDER_DTL_PRMT_DC_AMT(OB.ORD_NO, OD.ORD_DTL_SEQ) AS PRMT_DC_AMT		/* 프로모션 할인 금액 */
					, FN_GET_ORDER_DTL_CP_DC_AMT(OB.ORD_NO, OD.ORD_DTL_SEQ) AS CP_DC_AMT			/* 쿠폰 할인 금액 */
		            , OD.PAY_AMT				/* 결제 금액 */
		            , FN_GET_ORDER_DLVR_NO(OD.ORD_NO, OD.ORD_DTL_SEQ, 'Y') AS DLVR_NO				/* 배송 번호 */
		            , OD.COMP_NO
		            , CP.COMP_NM
		            , CP.COMP_GB_CD			/* 업체 구분 코드 10:자사 */
		            , OD.GOODS_ESTM_REG_YN
		            , OD.GOODS_ESTM_NO	
		            , case when OD.GOODS_ESTM_REG_YN  = 'Y' then (select GOODS_ESTM_TP from GOODS_COMMENT GC where GC.GOODS_ESTM_NO = OD.GOODS_ESTM_NO) end as GOODS_ESTM_TP		
		            , FN_GET_BRAND_NAME(GB.BND_NO) AS BND_NM 				/* 노출 브랜드명 */
		    		, FN_GET_BRAND_NAME_KO(GB.BND_NO) AS BND_NM_KO /* 브랜드명 국문 */
		            , GI.IMG_SEQ
		            , GI.IMG_PATH
		            , GI.RVS_IMG_PATH		            
		            , OD.PAK_GOODS_ID
		            , (SELECT GOODS_NM FROM GOODS_BASE WHERE GOODS_ID = OD.PAK_GOODS_ID) AS PAK_GOODS_NM
		            , CASE WHEN OD.PAK_GOODS_ID IS null THEN GB.GOODS_CSTRT_TP_CD
						   ELSE (SELECT GOODS_CSTRT_TP_CD FROM GOODS_BASE WHERE GOODS_ID = OD.PAK_GOODS_ID)
					  END AS GOODS_CSTRT_TP_CD
		            , OD.RMN_ORD_QTY -  FN_GET_ORD_CLM_RTN_CPLT_QTY(OD.ORD_NO, OD.ORD_DTL_SEQ) AS VLD_ORD_QTY /* 유효 주문 수량 */	        		
	        		, FN_GET_GOODS_STOCK(OD.GOODS_ID, OD.ITEM_NO) AS STK_QTY
	        		, OD.MKI_GOODS_YN
	        		, OD.MKI_GOODS_OPT_CONTENT
	        		,CASE WHEN OD.PAK_GOODS_ID is NOT null 
						THEN
					    (
					   	SELECT GROUP_CONCAT(CONCAT_WS(' : ', GOG.SHOW_NM , AV.ATTR_VAL) ORDER BY GOG.DISP_PRIOR_RANK SEPARATOR '|')  
						  FROM GOODS_BASE GB,
							   ITEM IT,
							   GOODS_OPT_GRP GOG,
							   GOODS_ATTRIBUTE GA,
							   ITEM_ATTRIBUTE_VALUE IAV,
							   ATTRIBUTE_VALUE AV
					     WHERE GB.GOODS_ID = IT.GOODS_ID 
						   AND GA.GOODS_ID = GB.GOODS_ID
						   AND GA.ATTR_NO = AV.ATTR_NO 
						   AND GOG.ATTR_NO = GA.ATTR_NO
						   AND GOG.ATTR_NO = AV.ATTR_NO
						   AND IAV.ITEM_NO = IT.ITEM_NO 
						   AND IAV.ATTR_NO = AV.ATTR_NO
						   AND AV.ATTR_VAL_NO = IAV.ATTR_VAL_NO
						   AND GB.GOODS_ID = OD.GOODS_ID
						   AND GOG.GOODS_ID = OD.PAK_GOODS_ID
					   )
				   END AS PAK_ITEM_NM   		        		  
        FROM
		            (SELECT 	ORD_NO
		            			, ST_ID
		            			, ORD_ACPT_DTM		/* 접수 일자 */
					            , ORD_CPLT_DTM			/* 완료 일자 */
					            , MBR_NO					/* 회원 번호 */
					            , ORD_STAT_CD			/* 주문 상태 */
					            , DLVR_PRCS_TP_CD		/* 배송 처리 유형 코드 */					           
					FROM		ORDER_BASE OB
					WHERE	1=1
					<include refid="order.pageOrderDeliveryListCondition" />
					ORDER BY ORD_ACPT_DTM DESC
					<include refid="bizCommon.pageSql" />
					) OB
		            JOIN ORDER_DETAIL OD ON (OB.ORD_NO = OD.ORD_NO)
		            JOIN GOODS_BASE GB ON (OD.GOODS_ID = GB.GOODS_ID)
		            JOIN COMPANY_BASE CP ON (OD.COMP_NO = CP.COMP_NO)
		            LEFT JOIN GOODS_IMG GI ON (OD.GOODS_ID = GI.GOODS_ID AND GI.DLGT_YN = 'Y')
        WHERE 1=1                      
        <if test="arrOrdDtlStatCd != null and arrOrdDtlStatCd.length > 0">
        AND 	OD.RMN_ORD_QTY - OD.RTN_QTY - FN_GET_ORDER_CLAIM_EXC_QTY(OD.ORD_NO, OD.ORD_DTL_SEQ) &gt; 0        
		AND		OD.ORD_DTL_STAT_CD IN (
				    <foreach collection="arrOrdDtlStatCd" item="ordDtlStatCd" separator="," >
				    #{ordDtlStatCd}
				    </foreach>
				    )
		</if>       
       <!-- ORDER BY OB.ORD_ACPT_DTM DESC, OB.ORD_NO DESC, OD.COMP_NO, OD.ORD_DTL_SEQ -->
       ORDER BY OB.ORD_ACPT_DTM DESC, OB.ORD_NO DESC, OD.COMP_NO, OD.ORD_DTL_STAT_CD
 )OBB       
    </select>

    <select id="pageOrderDeliveryListCount" resultType="java.lang.Integer">
        <!--
            Query Name : order.pageOrderDeliveryListCount
            Description : Front 마이페이지 주문/배송조회 리스트 count
        -->
        SELECT  /* QUERYID(order.pageOrderDeliveryListCount) */
		            COUNT(*)
        FROM		ORDER_BASE OB
        WHERE 1=1
		<include refid="order.pageOrderDeliveryListCondition" />
    </select>

	<sql id="pageOrderDeliveryListCondition">
        <!--
            Query Name : order.pageOrderDeliveryListCondition
            Description : Front 마이페이지 주문/배송조회 리스트 조건절
        -->
            AND 	DATA_STAT_CD = '${@framework.common.constants.CommonConstants@DATA_STAT_01}'
            AND 	ORD_NO IN (
            					SELECT ORD_NO FROM ORDER_DETAIL OD 
            					WHERE 1=1 
            				<if test="arrOrdDtlStatCd != null and arrOrdDtlStatCd.length > 0">	
            					AND OD.RMN_ORD_QTY - OD.RTN_QTY - FN_GET_ORDER_CLAIM_EXC_QTY(OD.ORD_NO, OD.ORD_DTL_SEQ) &gt; 0
            				</if>	 
            					AND OD.ORD_NO = OB.ORD_NO            				
            		)
            <if test="ordrShowYn != null and ordrShowYn != ''">
            AND ORDR_SHOW_YN = #{ordrShowYn}    /* 회원번호 */
            </if>		
			<if test="ordAcptDtmStart != null">
			AND 	ORD_ACPT_DTM <![CDATA[>=]]> #{ordAcptDtmStart}
			</if>
			<if test="ordAcptDtmEnd != null">
			AND 	ORD_ACPT_DTM <![CDATA[<=]]> #{ordAcptDtmEnd}
			</if>
            <if test="mbrNo != null and mbrNo != ''">
            AND MBR_NO = #{mbrNo}    /* 회원번호 */
            </if>
            <if test="ordNo != null and ordNo != ''">
            AND ORD_NO = #{ordNo}    /* 주문번호 */
            </if>
            <if test="arrOrdDtlStatCd != null and arrOrdDtlStatCd.length > 0">
            AND ORD_NO IN (
            	SELECT ORD_NO FROM ORDER_DETAIL 
            	WHERE ORD_DTL_STAT_CD IN(
            		 <foreach collection="arrOrdDtlStatCd" item="ordDtlStatCd" separator="," >
					    #{ordDtlStatCd}
					    </foreach>
            		)
             )    /* 주문상태코드 */
            </if>       
            
	</sql>


	<select id="pageBeforeGoodsComment" resultType="biz.app.order.model.OrderDetailVO">
		<!--
			Query Name : order.pageBeforeGoodsComment
			Description : 작성가능한 상품평 리스트 조회
		-->
		SELECT	/* QUERYID(order.pageBeforeGoodsComment) */
			OB.ORD_NO		/* 주문 번호 */
				,OD.ORD_DTL_SEQ	/* 주문 상세 순번 */
				,OD.GOODS_ID	/* 상품 아이디 */
				,OD.GOODS_NM	/* 상품 명 */
				,OD.ITEM_NO		/* 단품 번호 */
				,OD.ITEM_NM		/* 단품 명 */
				,OD.SALE_AMT	/* 판매 금액 */
				,OD.ORD_QTY	/* 주문 수량 */
				,(SELECT FN_GET_BRAND_NAME_KO((SELECT BND_NO FROM GOODS_BASE WHERE GOODS_ID = OD.GOODS_ID))) AS BND_NM_KO /* 브랜드명 국문 */
				,(SELECT IMG_SEQ FROM GOODS_IMG WHERE GOODS_ID = OD.GOODS_ID AND DLGT_YN = '${@framework.common.constants.CommonConstants@COMM_YN_Y}') AS IMG_SEQ /* 상품 대표이미지 순번 */
				,(SELECT IMG_PATH FROM GOODS_IMG WHERE GOODS_ID = OD.GOODS_ID AND DLGT_YN = '${@framework.common.constants.CommonConstants@COMM_YN_Y}') AS IMG_PATH /* 상품 대표이미지 경로 */
		FROM ORDER_BASE OB
		LEFT OUTER JOIN ORDER_DETAIL OD ON OB.ORD_NO = OD.ORD_NO
		WHERE 1 = 1
		<include refid="order.pageBeforeGoodsCommentCondition" />
		ORDER BY OB.${sidx} ${sord}
		<include refid="bizCommon.pageSql" />
	</select>

	<select id="pageBeforeGoodsCommentCount" resultType="java.lang.Integer">
		<!--
			Query Name : order.pageBeforeGoodsCommentCount
			Description : 작성가능한 상품평 리스트 조회 카운트
		-->
		SELECT	/* QUERYID(order.pageBeforeGoodsCommentCount) */
				COUNT(*)
		FROM ORDER_BASE OB
		LEFT OUTER JOIN ORDER_DETAIL OD ON OB.ORD_NO = OD.ORD_NO
		WHERE 1 = 1
		<include refid="order.pageBeforeGoodsCommentCondition" />
	</select>

	<sql id="pageBeforeGoodsCommentCondition">
		<!--
			Query Name : order.pageBeforeGoodsCommentCondition
			Description : 작성가능한 상품평 리스트 조회 Where절
		-->
		AND OB.DATA_STAT_CD = '${@framework.common.constants.CommonConstants@DATA_STAT_01}' /* 활성건 기준 */
		AND OB.MBR_NO = #{mbrNo}	/* 회원번호 */
		AND OB.ORD_STAT_CD = '${@framework.common.constants.CommonConstants@ORD_STAT_20}' /* 주문 상태 코드 : 주문완료 */
		AND OD.ORD_DTL_STAT_CD = '${@framework.common.constants.CommonConstants@ORD_DTL_STAT_170}' /* 주문 상세 상태 코드 : 구매완료 */
		AND OD.GOODS_ESTM_REG_YN = '${@framework.common.constants.CommonConstants@COMM_YN_N}'  /* 상품 평가 등록 여부 : N */
	</sql>


    <resultMap type="biz.app.order.model.OrderClaimVO" id="orderClaimListMap">
        <id     property="ordNo"            column="ORD_NO"/>           <!-- 주문 번호 -->
        <result property="stId"             column="ST_ID"/>            <!-- 사이트 ID -->
        <result property="stNm"             column="ST_NM"/>            <!-- 사이트 명 -->
        <result property="mbrNo"            column="MBR_NO"/>           <!-- 회원 번호 -->
        <result property="mbrNm"            column="MBR_NM"/>           <!-- 회원 명 -->
        <result property="ordDtlCnt"        column="ORD_DTL_CNT"/>      <!-- 주문상세 갯수 -->
        <result property="ordStatCd"        column="ORD_STAT_CD"/>      <!-- 주문 상태 코드 -->
        <result property="ordMdaCd"         column="ORD_MDA_CD"/>       <!-- 주문 매체 코드 -->
        <result property="chnlId"           column="CHNL_ID"/>          <!-- 채널 아이디-->
        <result property="mbrGrdCd"         column="MBR_GRD_CD"/>       <!-- 회원 등급 코드 -->
        <result property="ordNm"            column="ORD_NM"/>           <!-- 주문자 명 -->
        <result property="ordrId"           column="ORDR_ID"/>          <!-- 주문자 ID -->
        <result property="ordrEmail"        column="ORDR_EMAIL"/>       <!-- 주문자 이메일 -->
        <result property="ordrTel"          column="ORDR_TEL"/>         <!-- 주문자 전화 -->
        <result property="ordrMobile"       column="ORDR_MOBILE"/>      <!-- 주문자 휴대폰 -->
        <result property="ordrIp"           column="ORDR_IP"/>          <!-- 주문자 IP -->
        <result property="ordAcptDtm"       column="ORD_ACPT_DTM"/>     <!-- 주문 접수 일시 -->
        <result property="ordCpltDtm"       column="ORD_CPLT_DTM"/>     <!-- 주문 완료 일시 -->
        <result property="ordPrcsRstCd"     column="ORD_PRCS_RST_CD"/>  <!-- 주문  처리 결과코드 -->
        <result property="ordPrcsRstMsg"    column="ORD_PRCS_RST_MSG"/> <!-- 주문  처리 결과메세지 -->
        <result property="dataStatCd"       column="DATA_STAT_CD"/>     <!-- 데이터 상태 코드 -->
        <result property="payMeansCd"       column="PAY_MEANS_CD"/>     <!-- 결제 수단 코드 -->
        <result property="rsvPayCpltDtm"    column="PAY_CPLT_DTM"/>     <!-- 결제일 -->
        <result property="payAmtTotal"      column="PAY_AMT_TOTAL"/>    <!-- 결제 금액 합계 -->
        <result property="rsvAdrsNm"        column="ADRS_NM"/>          <!-- 수령인 -->
        <result property="rsvTel"           column="TEL"/>              <!-- 수령인 전화번호 -->
        <result property="rsvMobile"        column="MOBILE"/>           <!-- 수령인 휴대폰 -->
        <result property="rsvRoadAddr"      column="ROAD_ADDR"/>        <!-- 수령인 주소 1 -->
        <result property="rsvRoadDtlAddr"   column="ROAD_DTL_ADDR"/>    <!-- 수령인 주소 2 -->

        <result property="clmAmtTotal"      column="CLM_AMT_TOTAL"/>    <!-- 결제 취소 금액 합계 -->
        <result property="cancelAll"        column="CANCEL_ALL"/>       <!-- 주문 전체 취소 -->

        <result property="ordCancelPsbYn"			column="ORD_CANCEL_PSB_YN"/>			<!-- 취소 가능 여부 -->

        <collection property="orderClaimDetailList" ofType="biz.app.order.model.OrderClaimDetailVO">
            <id     property="ordDtlSeq"        column="ORD_DTL_SEQ"/>          <!-- 주문 상세 순번 -->
            <result property="ordDtlStatCd"     column="ORD_DTL_STAT_CD"/>      <!-- 주문 상세 상태 코드 -->
            <result property="ordDtlStatNm"     column="ORD_DTL_STAT_NM"/>      <!-- 주문 상세 상태 명 -->
            <result property="goodsId"          column="GOODS_ID"/>             <!-- 상품 아이디 -->
            <result property="goodsNm"          column="GOODS_NM"/>             <!-- 상품 명 -->
            <result property="itemNo"           column="ITEM_NO"/>              <!-- 단품 번호 -->
            <result property="itemNm"           column="ITEM_NM"/>              <!-- 단품 명 -->
            <result property="dealGoodsId"      column="DEAL_GOODS_ID"/>        <!-- 딜 상품 아이디 -->
            <result property="saleAmt"          column="SALE_AMT"/>             <!-- 판매 금액 -->
            <result property="ordQty"           column="ORD_QTY"/>              <!-- 주문 수량 -->
            <result property="rtnQty"           column="RTN_QTY"/>              <!-- 반품 수량 -->
            <result property="rmnOrdQty"        column="RMN_ORD_QTY" />         <!-- 주문 잔여수량  -->
            <result property="payAmt"           column="PAY_AMT"/>              <!-- 결제 금액 -->
            <result property="saleAmt"          column="SALE_AMT"/>             <!-- 판매 금액 -->
            <result property="dlvrcNo"          column="DLVRC_NO"/>             <!-- 배송비 번호 -->
            <result property="dlvrNo"           column="DLVR_NO"/>              <!-- 배송  번호 -->
            <result property="ordDlvraNo"       column="ORD_DLVRA_NO"/>         <!-- 주문 배송지 번호 -->
            <result property="compNo"           column="COMP_NO"/>              <!-- 업체 번호 -->
            <result property="compNm"           column="COMP_NM"/>              <!-- 업체 명 -->
            <result property="upCompNo"         column="UP_COMP_NO"/>           <!-- 상위 업체 번호 -->

            <result property="outsideOrdDtlNo" column="OUTSIDE_ORD_DTL_NO" /> <!--  외부 주문 상세 번호 -->

            <result property="bndNmKo"          column="BND_NM_KO"/>            <!-- 브랜드명 국문 -->

            <result property="imgSeq"           column="IMG_SEQ"/>              <!-- 상품 이미지 순번 -->
            <result property="imgPath"          column="IMG_PATH"/>             <!-- 상품 이미지 경로 -->
            <result property="rvsImgPath"       column="RVS_IMG_PATH"/>         <!-- 상품 반전 이미지 경로 -->
            <result property="compareDtmYn"     column="COMPARE_DTM_YN"/>       <!-- 배송완료일자+7일과 현재일자 비교 -->

            <result property="sysRegrNo"        column="SYS_REGR_NO"/>          <!-- 시스템 등록자 번호 -->
            <result property="sysRegDtm"        column="SYS_REG_DTM"/>          <!-- 시스템 등록 일시 -->
            <result property="sysUpdrNo"        column="SYS_UPDR_NO"/>          <!-- 시스템 수정자 번호 -->
            <result property="sysUpdDtm"        column="SYS_UPD_DTM"/>          <!-- 시스템 수정 일시 -->
            <result property="sysRegrNm"        column="SYS_REGR_NM"/>          <!-- 시스템 등록자 -->
            <result property="sysUpdrNm"        column="SYS_UPDR_NM"/>          <!-- 시스템 수정자 -->

            <result property="clmQty"           column="CLM_QTY"/>              <!-- 클래임 접수 수량 -->
            <result property="clmReqQty"        column="CLM_REQ_QTY"/>          <!-- 클래임 요청 가능 수량 -->
			<result property="clmExcIngQty" 	column="CLM_EXC_ING_QTY" />	<!-- 교환 진행 수량 -->
        	<result property="allClaimIngRtnYn"			column="ALL_CLAIM_ING_RTN_YN"/>			<!-- 반품 진행 중 여부 -->
			<result property="rtnPsbYn"			column="RTN_PSB_YN"/>				<!-- 반품 가능 여부 -->

        </collection>
    </resultMap>
    
    <select id="pageClaimRequestList" resultMap="orderClaimListMap">
		SELECT /* QUERYID(order.pageClaimRequestList) */
		    MYORDER.*,
		    CP.COMP_NM,
		    (SELECT BND_NM_KO FROM BRAND_BASE WHERE BND_NO = (SELECT BND_NO FROM GOODS_BASE WHERE GOODS_ID = MYORDER.GOODS_ID)) AS BND_NM_KO,
		    ODA.ADRS_NM,
		    ODA.MOBILE,
		    GI.IMG_SEQ,
		    GI.IMG_PATH,
		    GI.RVS_IMG_PATH,
		    CASE WHEN ADDDATE((SELECT DLVR_CPLT_DTM FROM DELIVERY WHERE DLVR_NO = MYORDER.DLVR_NO),7) &lt; SYSDATE() THEN 'N' ELSE 'Y' END AS COMPARE_DTM_YN
            , FN_GET_ORDER_CANCEL_PSB_YN(MYORDER.ORD_NO) AS ORD_CANCEL_PSB_YN	/* 취소 가능 여부 */
		FROM
		    (SELECT
		        ORD.ORD_NO,
		        ORD.ST_ID,
		        ORD.MBR_NO,
		        ORD.ORD_DTL_CNT,
		        ORD.ORD_STAT_CD,
		        ORD.ORD_MDA_CD,
		        ORD.ORD_ACPT_DTM,
		        ORD.ORD_CPLT_DTM,
		        ORD.ORD_DTL_SEQ,
		        ORD.ORD_DTL_STAT_CD,
		        ORD.GOODS_ID,
		        ORD.GOODS_NM,
		        ORD.ITEM_NO,
		        ORD.ITEM_NM,
		        ORD.ORD_QTY,
		        ORD.CNC_QTY,
		        ORD.RMN_ORD_QTY,
		        ORD.RTN_QTY,
		        ORD.RMN_ORD_QTY - ORD.RTN_QTY - IFNULL(CLM.CLM_QTY, 0) AS CLM_REQ_QTY,
		    	FN_GET_ORDER_CLAIM_EXC_QTY(ORD.ORD_NO, ORD.ORD_DTL_SEQ) AS CLM_EXC_ING_QTY, 	/* 클레임 진행 수량 */
		    	FN_GET_ORDER_CLAIM_ING_RTN_YN(ORD.ORD_NO, ORD.ORD_DTL_SEQ)  AS ALL_CLAIM_ING_RTN_YN, 	/* 반품 진행 중 여부 */
		        ORD.SALE_AMT,
		        ORD.PAY_AMT,
		        ORD.COMP_NO,
		        ORD.DLVRC_NO,
		        ORD.ORD_DLVRA_NO,
		        ORD.DLVR_NO,
		        CLM.CLM_NO,
		        CLM.CLM_DTL_SEQ,
		        IFNULL(CLM.CLM_QTY, 0) CLM_QTY,
		        CLM.CLM_DTL_STAT_CD,
		        CLM.CLM_DTL_TP_CD
	            , (SELECT RTN_PSB_YN FROM GOODS_BASE WHERE GOODS_ID = ORD.GOODS_ID) AS RTN_PSB_YN	/* 반품 가능 여부 */
		    FROM
		        (SELECT
		            OD.ORD_NO,
		            OD.ORD_DTL_SEQ,
		            OD.ORD_DTL_STAT_CD,
		            OD.GOODS_ID,
		            OD.GOODS_NM,
		            OD.ITEM_NO,
		            OD.ITEM_NM,
		            OD.ORD_QTY,
		            OD.CNC_QTY,
		            OD.RTN_QTY,
		            OD.RMN_ORD_QTY,
		            OD.SALE_AMT,
		            OD.PAY_AMT,
		            OD.DLVRC_NO,
		            OD.ORD_DLVRA_NO,
		            OD.DLVR_NO,
		            OD.COMP_NO,
		            OB.ORD_ACPT_DTM,
		            OB.ORD_CPLT_DTM,
		            OB.ST_ID,
		            OB.MBR_NO,
		            OB.ORD_DTL_CNT,
		            OB.ORD_STAT_CD,
		            OB.ORD_MDA_CD
		        FROM
		            ORDER_BASE OB
		            JOIN ORDER_DETAIL OD ON (OB.ORD_NO = OD.ORD_NO)
		        WHERE
		            OB.DATA_STAT_CD = '${@framework.common.constants.CommonConstants@DATA_STAT_01}'
		            AND OD.ORD_DTL_STAT_CD IN ('${@framework.common.constants.CommonConstants@ORD_DTL_STAT_110}', '${@framework.common.constants.CommonConstants@ORD_DTL_STAT_120}', '${@framework.common.constants.CommonConstants@ORD_DTL_STAT_160}')
		            AND OD.RMN_ORD_QTY - OD.RTN_QTY - FN_GET_ORDER_CLAIM_EXC_QTY(OD.ORD_NO, OD.ORD_DTL_SEQ) &gt; 0
		            AND OB.MBR_NO =  #{mbrNo} /* 회원번호 */
		            <if test="ordNo != null and ordNo != ''">
                    AND OB.ORD_NO = #{ordNo} /* 주문번호 */
                    </if>
                    <if test="ordAcptDtmStart != null and ordAcptDtmStart != '' and ordAcptDtmEnd != null and ordAcptDtmEnd != ''">
                    AND OB.ORD_ACPT_DTM BETWEEN #{ordAcptDtmStart} AND #{ordAcptDtmEnd} /* 주문접수일시 : ORD_ACPT_DTM  최근 한달*/
                    </if>
		        ) ORD
		        LEFT JOIN
		        (SELECT
		            CLAIM.CLM_NO,
		            CLAIM.ORD_NO,
		            CLAIM.ORD_DTL_SEQ,
		            MIN(CLAIM.MBR_NO) AS MBR_NO,
		            MIN(CLAIM.CLM_DTL_SEQ) AS CLM_DTL_SEQ,
		            MIN(CLAIM.CLM_QTY) AS CLM_QTY,
		            MIN(CLAIM.CLM_DTL_STAT_CD) AS CLM_DTL_STAT_CD,
		            MIN(CLAIM.CLM_DTL_TP_CD) AS CLM_DTL_TP_CD
		        FROM
		            (SELECT
		                CD.MBR_NO,
		                CD.CLM_NO,
		                CD.CLM_DTL_SEQ,
		                CD.CLM_QTY,
		                CD.ORD_NO,
		                CD.ORD_DTL_SEQ,
		                CD.CLM_DTL_STAT_CD,
		                CD.CLM_DTL_TP_CD
		            FROM
		                CLAIM_BASE CB
		                JOIN CLAIM_DETAIL CD ON (CB.CLM_NO = CD.CLM_NO)
		            WHERE
		                CB.CLM_TP_CD IN ('${@framework.common.constants.CommonConstants@CLM_TP_30}')
		                AND CD.CLM_DTL_TP_CD IN ('${@framework.common.constants.CommonConstants@CLM_DTL_TP_30}', '${@framework.common.constants.CommonConstants@CLM_DTL_TP_40}')
		                AND CD.CLM_DTL_STAT_CD IN ('${@framework.common.constants.CommonConstants@CLM_DTL_STAT_310}', '${@framework.common.constants.CommonConstants@CLM_DTL_STAT_320}', '${@framework.common.constants.CommonConstants@CLM_DTL_STAT_330}', '${@framework.common.constants.CommonConstants@CLM_DTL_STAT_340}', '${@framework.common.constants.CommonConstants@CLM_DTL_STAT_350}', '${@framework.common.constants.CommonConstants@CLM_DTL_STAT_360}', '${@framework.common.constants.CommonConstants@CLM_DTL_STAT_410}', '${@framework.common.constants.CommonConstants@CLM_DTL_STAT_420}', '${@framework.common.constants.CommonConstants@CLM_DTL_STAT_430}', '${@framework.common.constants.CommonConstants@CLM_DTL_STAT_440}')
		                AND CB.MBR_NO =  #{mbrNo} /* 회원번호 */
		                AND CB.CLM_STAT_CD != '${@framework.common.constants.CommonConstants@CLM_STAT_40}'
		                AND FN_GET_ORDER_CLAIM_EXC_QTY(CD.ORD_NO, CD.ORD_DTL_SEQ) > 0	/* 클레임 진행 수량 */
		            ) CLAIM
		        GROUP BY
		            CLAIM.CLM_NO DESC, CLAIM.ORD_NO, CLAIM.ORD_DTL_SEQ
		        ) CLM ON (ORD.ORD_NO = CLM.ORD_NO AND ORD.ORD_DTL_SEQ = CLM.ORD_DTL_SEQ)
		    WHERE
		        ORD.RMN_ORD_QTY - ORD.RTN_QTY - IFNULL(CLM.CLM_QTY, 0) &gt; 0
		    ) MYORDER
		    JOIN COMPANY_BASE CP ON (MYORDER.COMP_NO = CP.COMP_NO)
		    JOIN ORDER_DLVRA ODA ON (MYORDER.ORD_DLVRA_NO = ODA.ORD_DLVRA_NO)
		    LEFT OUTER JOIN GOODS_IMG GI ON (MYORDER.GOODS_ID = GI.GOODS_ID AND GI.DLGT_YN = 'Y')
		ORDER BY
		    MYORDER.ORD_ACPT_DTM DESC
		<include refid="bizCommon.pageSql" />
    </select>

    <select id="pageClaimRequestListCount" resultType="java.lang.Integer">
		SELECT /* QUERYID(order.pageClaimRequestListCount) */
		    COUNT(*)
		FROM
		    (SELECT
		        ORD.COMP_NO,
		        ORD.ORD_DLVRA_NO
		    FROM
		        (SELECT
		            OD.ORD_NO,
		            OD.ORD_DTL_SEQ,
		            OD.ORD_DTL_STAT_CD,
		            OD.GOODS_ID,
		            OD.GOODS_NM,
		            OD.ITEM_NO,
		            OD.ITEM_NM,
		            OD.ORD_QTY,
		            OD.CNC_QTY,
		            OD.RTN_QTY,
		            OD.RMN_ORD_QTY,
		            OD.SALE_AMT,
		            OD.PAY_AMT,
		            OD.DLVRC_NO,
		            OD.ORD_DLVRA_NO,
		            OD.DLVR_NO,
		            OD.COMP_NO,
		            OB.ORD_ACPT_DTM,
		            OB.ORD_CPLT_DTM,
		            OB.ST_ID,
		            OB.MBR_NO,
		            OB.ORD_DTL_CNT,
		            OB.ORD_STAT_CD,
		            OB.ORD_MDA_CD
		        FROM
		            ORDER_BASE OB
		            JOIN ORDER_DETAIL OD ON (OB.ORD_NO = OD.ORD_NO)
		        WHERE
		            OB.DATA_STAT_CD = '${@framework.common.constants.CommonConstants@DATA_STAT_01}'
                    AND OD.ORD_DTL_STAT_CD IN ('${@framework.common.constants.CommonConstants@ORD_DTL_STAT_110}', '${@framework.common.constants.CommonConstants@ORD_DTL_STAT_120}', '${@framework.common.constants.CommonConstants@ORD_DTL_STAT_160}')
		            AND OD.RMN_ORD_QTY - OD.RTN_QTY - FN_GET_ORDER_CLAIM_EXC_QTY(OD.ORD_NO, OD.ORD_DTL_SEQ) &gt; 0
		            AND OB.MBR_NO =  #{mbrNo} /* 회원번호 */
		            <if test="ordNo != null and ordNo != ''">
		            AND OB.ORD_NO = #{ordNo} /* 주문번호 */
		            </if>
		            <if test="ordAcptDtmStart != null and ordAcptDtmStart != '' and ordAcptDtmEnd != null and ordAcptDtmEnd != ''">
                    AND OB.ORD_ACPT_DTM BETWEEN #{ordAcptDtmStart} AND #{ordAcptDtmEnd} /* 주문접수일시 : ORD_ACPT_DTM  최근 한달*/
                    </if>
		        ) ORD
		        LEFT JOIN
		        (SELECT
		            CLAIM.CLM_NO,
		            CLAIM.ORD_NO,
		            CLAIM.ORD_DTL_SEQ,
		            MIN(CLAIM.MBR_NO) AS MBR_NO,
		            MIN(CLAIM.CLM_DTL_SEQ) AS CLM_DTL_SEQ,
		            MIN(CLAIM.CLM_QTY) AS CLM_QTY,
		            MIN(CLAIM.CLM_DTL_STAT_CD) AS CLM_DTL_STAT_CD,
		            MIN(CLAIM.CLM_DTL_TP_CD) AS CLM_DTL_TP_CD
		        FROM
		            (SELECT
		                CD.MBR_NO,
		                CD.CLM_NO,
		                CD.CLM_DTL_SEQ,
		                CD.CLM_QTY,
		                CD.ORD_NO,
		                CD.ORD_DTL_SEQ,
		                CD.CLM_DTL_STAT_CD,
		                CD.CLM_DTL_TP_CD
		            FROM
		                CLAIM_BASE CB
		                JOIN CLAIM_DETAIL CD ON (CB.CLM_NO = CD.CLM_NO)
		            WHERE
		                CB.CLM_TP_CD IN ('${@framework.common.constants.CommonConstants@CLM_TP_30}')
                        AND CD.CLM_DTL_TP_CD IN ('${@framework.common.constants.CommonConstants@CLM_DTL_TP_30}', '${@framework.common.constants.CommonConstants@CLM_DTL_TP_40}')
                        AND CD.CLM_DTL_STAT_CD IN ('${@framework.common.constants.CommonConstants@CLM_DTL_STAT_310}', '${@framework.common.constants.CommonConstants@CLM_DTL_STAT_320}', '${@framework.common.constants.CommonConstants@CLM_DTL_STAT_330}', '${@framework.common.constants.CommonConstants@CLM_DTL_STAT_340}', '${@framework.common.constants.CommonConstants@CLM_DTL_STAT_350}', '${@framework.common.constants.CommonConstants@CLM_DTL_STAT_360}', '${@framework.common.constants.CommonConstants@CLM_DTL_STAT_410}', '${@framework.common.constants.CommonConstants@CLM_DTL_STAT_420}', '${@framework.common.constants.CommonConstants@CLM_DTL_STAT_430}', '${@framework.common.constants.CommonConstants@CLM_DTL_STAT_440}')
		                AND CB.MBR_NO =  #{mbrNo} /* 회원번호 */
		                AND CB.CLM_STAT_CD != '${@framework.common.constants.CommonConstants@CLM_STAT_40}'
		                AND FN_GET_ORDER_CLAIM_EXC_QTY(CD.ORD_NO, CD.ORD_DTL_SEQ) > 0	/* 클레임 진행 수량 */
		            ) CLAIM
		        GROUP BY
		            CLAIM.CLM_NO DESC, CLAIM.ORD_NO, CLAIM.ORD_DTL_SEQ
		        ) CLM ON (ORD.ORD_NO = CLM.ORD_NO AND ORD.ORD_DTL_SEQ = CLM.ORD_DTL_SEQ)
		    WHERE
		        ORD.RMN_ORD_QTY - ORD.RTN_QTY - IFNULL(CLM.CLM_QTY, 0) &gt; 0
		    ) MYORDER
		    JOIN COMPANY_BASE CP ON (MYORDER.COMP_NO = CP.COMP_NO)
		    JOIN ORDER_DLVRA ODA ON (MYORDER.ORD_DLVRA_NO = ODA.ORD_DLVRA_NO)
    </select>

	<select id="listCancelDetail" resultMap="orderListMap">
		<!--
			Query Name : order.listOrderDetailList
			Description : Front 마이페이지 취소 조회 리스트
		-->
		SELECT 				
		ORD_NO
		, ORD_DTL_SEQ				/* 주문 상세 순번 */
		, ORD_DTL_STAT_CD		/* 주문 상세 상태 코드 */
		, ORD_DTL_STAT_NM /* 주문 상태 코드명 */
		, GOODS_ID				/* 상품 아이디 */	
		, ITEM_NO				/* 단품 번호 */
		, ITEM_NM				/* 단품 명 */
		, DISP_CLSF_NO			/* 전시 분류 번호 */
		, SALE_AMT				/* 판매 금액 */
		, ORD_QTY				/* 주문 수량 */
		, PAY_AMT				/* 결제 금액 */
		, GOODS_CMSN_RT			/* 상품수수료율 */
		, DLVRC_NO				/* 배송비 번호 */
		, DLVR_NO				/* 배송 번호 */
		, COMP_NO				/* 업체 번호 */
		, COMP_NM				/* 업체 명 */
		, GOODS_ESTM_REG_YN		/* 상품 평가 등록 여부 */
		, SYS_REGR_NO			/* 시스템 등록자 번호 */
		, SYS_REG_DTM			/* 시스템 등록 일시 */
		, SYS_UPDR_NO			/* 시스템 수정자 번호 */
		, SYS_UPD_DTM			/* 시스템 수정 일시 */
		, RMN_ORD_QTY	        /* 주문 잔여수량 */
		, SYS_REGR_NM	/* 시스템 등록자 */
		, SYS_UPDR_NM	/* 시스템 수정자 */
		, BND_NM_KO	/* 브랜드명 국문 */
		, CMS					/* 수수료 */
		, COMP_GB_CD  /* 업체 구분 코드 */
		, REAL_DLVR_AMT  /*실 배송비*/
		, IMG_SEQ	   /* 상품 이미지 SEQ  */
		, IMG_PATH	   /* 상품 이미지 PATH  */
		, PAY_MEANS_CD	/* 주 결제 수단 */
		, ORD_ACPT_DTM  /*주문접수일시*/
		, REAL_DLVR_AMT  /*실 배송비*/
		, REFUND_OOA_NM       /* 환불 예금주*/
		, ORD_DTL_CNT    /* 주문상세 갯수 */
	    , ORD_NM
	    , ORDR_EMAIL
	    , ORDR_MOBILE
		, PRMT_DC_AMT		/* 프로모션 할인 금액 */
		, PAK_GOODS_ID
	    , GOODS_CSTRT_TP_CD
	    , CASE WHEN OBB.PAK_GOODS_ID IS null THEN GOODS_NM
			   ELSE PAK_GOODS_NM
		   END AS GOODS_NM     /* 상품 명 */
	    , CASE WHEN OBB.GOODS_CSTRT_TP_CD = 'PAK' THEN GOODS_NM
			   ELSE NULL
		   END AS OPT_GOODS_NM		  
		, PAK_ITEM_NM
		, MKI_GOODS_YN
	    , MKI_GOODS_OPT_CONTENT	
	FROM
		(	
				SELECT	OD.ORD_NO
					, OD.ORD_DTL_SEQ				/* 주문 상세 순번 */
					, OD.ORD_DTL_STAT_CD		/* 주문 상세 상태 코드 */
					,(SELECT CD.DTL_NM AS ORD_DTL_STAT_NM FROM CODE_DETAIL CD WHERE GRP_CD = 'ORD_DTL_STAT' AND CD.DTL_CD = OD.ORD_DTL_STAT_CD)  ORD_DTL_STAT_NM /* 주문 상태 코드명 */
					, OD.GOODS_ID				/* 상품 아이디 */
					, GB.GOODS_NM				/* 상품 명 */
					, OD.ITEM_NO				/* 단품 번호 */
					, OD.ITEM_NM				/* 단품 명 */

					, OD.DISP_CLSF_NO			/* 전시 분류 번호 */

					, OD.SALE_AMT				/* 판매 금액 */
					, OD.ORD_QTY				/* 주문 수량 */
					, OD.PAY_AMT				/* 결제 금액 */
					, OD.GOODS_CMSN_RT			/* 상품수수료율 */
					, OD.DLVRC_NO				/* 배송비 번호 */
					, OD.DLVR_NO				/* 배송 번호 */
					, OD.COMP_NO				/* 업체 번호 */
					, ( SELECT FN_GET_COMPANY_NAME(OD.COMP_NO) ) AS COMP_NM				/* 업체 명 */
					, OD.GOODS_ESTM_REG_YN		/* 상품 평가 등록 여부 */
					, OD.SYS_REGR_NO			/* 시스템 등록자 번호 */
					, OD.SYS_REG_DTM			/* 시스템 등록 일시 */
					, OD.SYS_UPDR_NO			/* 시스템 수정자 번호 */
					, OD.SYS_UPD_DTM			/* 시스템 수정 일시 */
					, OD.RMN_ORD_QTY	        /* 주문 잔여수량 */
					, FN_GET_USER_NAME(OD.SYS_REGR_NO) AS SYS_REGR_NM	/* 시스템 등록자 */
					, FN_GET_USER_NAME(OD.SYS_UPDR_NO) AS SYS_UPDR_NM	/* 시스템 수정자 */
					, (SELECT BND_NM_KO FROM BRAND_BASE WHERE BND_NO = (SELECT BND_NO FROM GOODS_BASE WHERE GOODS_ID = OD.GOODS_ID)) AS BND_NM_KO	/* 브랜드명 국문 */
					, OD.CMS					/* 수수료 */
					, (SELECT COMP_GB_CD FROM COMPANY_BASE WHERE COMP_NO = OD.COMP_NO) AS COMP_GB_CD  /* 업체 구분 코드 */
					, IFNULL( (SELECT DC.REAL_DLVR_AMT
						FROM DELIVERY_CHARGE DC
						WHERE DC.DLVRC_NO = OD.DLVRC_NO  ),0) AS REAL_DLVR_AMT  /*실 배송비*/
					, GI.IMG_SEQ	   /* 상품 이미지 SEQ  */
					, GI.IMG_PATH	   /* 상품 이미지 PATH  */
					<!-- , PB.PAY_MEANS_CD  /*결제 수단 코드  10 : 신용카드, 20 : 실시간계좌이체, 30 : 가상계좌, 40 : 무통장, 50 : 적립금, 90 : 외부몰 */
					, PB.ACCT_NO       /*계좌번호*/
					, PB.BANK_CD	   /*은행코드*/
					, PB.OOA_NM        /*예금주명*/ -->
					, FN_GET_ORDER_PAY_MEANS_CD(OD.ORD_NO) AS PAY_MEANS_CD	/* 주 결제 수단 */
					, (SELECT OB.ORD_ACPT_DTM
								FROM ORDER_BASE OB
								WHERE OB.ORD_NO = OD.ORD_NO ) AS ORD_ACPT_DTM  /*주문접수일시*/
					<!-- , IFNULL( (SELECT DC.REAL_DLVR_AMT
						FROM DELIVERY_CHARGE DC
						WHERE DC.DLVRC_NO = OD.DLVRC_NO  ),0) AS REAL_DLVR_AMT  /*실 배송비*/ -->
					<!-- , MB.BANK_CD AS REFUND_BANK_CD	   /*환불 은행코드*/ -->
					<!-- , MB.ACCT_NO AS REFUND_ACCT_NO       /* 환불 계좌번호*/ -->
					, MB.MBR_NM AS REFUND_OOA_NM       /* 환불 예금주*/
					, OB.ORD_DTL_CNT    /* 주문상세 갯수 */
				    , OB.ORD_NM
				    , OB.ORDR_EMAIL
				    , OB.ORDR_MOBILE
					, FN_GET_ORDER_DTL_PRMT_DC_AMT(OD.ORD_NO, OD.ORD_DTL_SEQ) AS PRMT_DC_AMT		/* 프로모션 할인 금액 */
					, OD.PAK_GOODS_ID
					,CASE WHEN OD.PAK_GOODS_ID is NOT null 
						THEN
					    (
					   	SELECT GROUP_CONCAT(CONCAT_WS(' : ', GOG.SHOW_NM , AV.ATTR_VAL) ORDER BY GOG.DISP_PRIOR_RANK SEPARATOR '|')  
						  FROM GOODS_BASE GB,
							   ITEM IT,
							   GOODS_OPT_GRP GOG,
							   GOODS_ATTRIBUTE GA,
							   ITEM_ATTRIBUTE_VALUE IAV,
							   ATTRIBUTE_VALUE AV
					     WHERE GB.GOODS_ID = IT.GOODS_ID 
						   AND GA.GOODS_ID = GB.GOODS_ID
						   AND GA.ATTR_NO = AV.ATTR_NO 
						   AND GOG.ATTR_NO = GA.ATTR_NO
						   AND GOG.ATTR_NO = AV.ATTR_NO
						   AND IAV.ITEM_NO = IT.ITEM_NO 
						   AND IAV.ATTR_NO = AV.ATTR_NO
						   AND AV.ATTR_VAL_NO = IAV.ATTR_VAL_NO
						   AND GB.GOODS_ID = OD.GOODS_ID
						   AND GOG.GOODS_ID = OD.PAK_GOODS_ID
					   )
				   END AS PAK_ITEM_NM  
				    , (SELECT GOODS_NM FROM GOODS_BASE WHERE GOODS_ID = OD.PAK_GOODS_ID) AS PAK_GOODS_NM
				    , CASE WHEN OD.PAK_GOODS_ID IS null THEN GB.GOODS_CSTRT_TP_CD
						   ELSE (SELECT GOODS_CSTRT_TP_CD FROM GOODS_BASE WHERE GOODS_ID = OD.PAK_GOODS_ID)
					  END AS GOODS_CSTRT_TP_CD
					, OD.MKI_GOODS_YN
	        		, OD.MKI_GOODS_OPT_CONTENT 
			FROM	ORDER_DETAIL OD
			<!-- LEFT OUTER JOIN PAY_BASE PB	ON OD.ORD_NO = PB.ORD_NO /* 결제기본Table */
														AND	PB.PAY_STAT_CD IN ('${@framework.common.constants.CommonConstants@PAY_STAT_00}', '${@framework.common.constants.CommonConstants@PAY_STAT_01}') /* 결제 상태 코드 - 01:입금대기, 02:결제완료 */
														AND	PB.ORD_CLM_GB_CD = '${@framework.common.constants.CommonConstants@ORD_CLM_GB_10}'	/* 주문 클레임 구분 코드 - 10:주문 */ -->
			LEFT OUTER join GOODS_BASE GB
					on OD.GOODS_ID = GB.GOODS_ID											
			LEFT OUTER JOIN GOODS_IMG GI
					 ON GI.GOODS_ID = OD.GOODS_ID
					AND GI.DLGT_YN = '${@framework.common.constants.CommonConstants@COMM_YN_Y}'
			INNER JOIN ORDER_BASE AS OB ON OB.ORD_NO = OD.ORD_NO
			LEFT OUTER JOIN MEMBER_BASE MB ON (MB.MBR_NO != 0 AND MB.MBR_NO = OB.MBR_NO)
		WHERE  OD.ORD_NO = #{ordNo}	/* 주문번호 */
		<!-- if test='ordDtlSeq != null and ordDtlSeq != ""'>
			AND	OD.ORD_DTL_SEQ = #{ordDtlSeq}
		</if -->
			AND OD.ORD_DTL_STAT_CD IN
												(
												'${@framework.common.constants.CommonConstants@ORD_DTL_STAT_120}', /* 주문 상세 상태 코드 : 주문완료 */
												'${@framework.common.constants.CommonConstants@ORD_DTL_STAT_130}' /* 주문 상세 상태 코드 : 배송지시 */
												)
			AND OD.RMN_ORD_QTY > 0
		)OBB		
	</select>
	
	<select id="listClaimDetail" resultMap="orderListMap">
		<!--
			Query Name : order.listOrderDetailList
			Description : Front 마이페이지 조회 리스트
		-->
		SELECT 				
		ORD_NO
		, ORD_DTL_SEQ				/* 주문 상세 순번 */
		, ORD_DTL_STAT_CD		/* 주문 상세 상태 코드 */
		, ORD_DTL_STAT_NM /* 주문 상태 코드명 */
		, GOODS_ID				/* 상품 아이디 */	
		, ITEM_NO				/* 단품 번호 */
		, ITEM_NM				/* 단품 명 */
		, DISP_CLSF_NO			/* 전시 분류 번호 */
		, SALE_AMT				/* 판매 금액 */
		, ORD_QTY				/* 주문 수량 */
		, PAY_AMT				/* 결제 금액 */
		, GOODS_CMSN_RT			/* 상품수수료율 */
		, DLVRC_NO				/* 배송비 번호 */
		, DLVR_NO				/* 배송 번호 */
		, COMP_NO				/* 업체 번호 */
		, COMP_NM				/* 업체 명 */
		, GOODS_ESTM_REG_YN		/* 상품 평가 등록 여부 */
		, SYS_REGR_NO			/* 시스템 등록자 번호 */
		, SYS_REG_DTM			/* 시스템 등록 일시 */
		, SYS_UPDR_NO			/* 시스템 수정자 번호 */
		, SYS_UPD_DTM			/* 시스템 수정 일시 */
		, RMN_ORD_QTY	        /* 주문 잔여수량 */
		, SYS_REGR_NM	/* 시스템 등록자 */
		, SYS_UPDR_NM	/* 시스템 수정자 */
		, BND_NM_KO	/* 브랜드명 국문 */
		, CMS					/* 수수료 */
		, COMP_GB_CD  /* 업체 구분 코드 */
		, REAL_DLVR_AMT  /*실 배송비*/
		, IMG_SEQ	   /* 상품 이미지 SEQ  */
		, IMG_PATH	   /* 상품 이미지 PATH  */
		, PAY_MEANS_CD	/* 주 결제 수단 */
		, ORD_ACPT_DTM  /*주문접수일시*/
		, REAL_DLVR_AMT  /*실 배송비*/
		, REFUND_OOA_NM       /* 환불 예금주*/
		, ORD_DTL_CNT    /* 주문상세 갯수 */
	    , ORD_NM
	    , ORDR_EMAIL
	    , ORDR_MOBILE
		, PRMT_DC_AMT		/* 프로모션 할인 금액 */
		, PAK_GOODS_ID
	    , GOODS_CSTRT_TP_CD
	    , CASE WHEN OBB.PAK_GOODS_ID IS null THEN GOODS_NM
			   ELSE PAK_GOODS_NM
		   END AS GOODS_NM     /* 상품 명 */
	    , CASE WHEN OBB.GOODS_CSTRT_TP_CD = 'PAK' THEN GOODS_NM
			   ELSE NULL
		   END AS OPT_GOODS_NM		  
		, PAK_ITEM_NM
		, MKI_GOODS_YN
	    , MKI_GOODS_OPT_CONTENT	
	FROM
		(	
				SELECT	OD.ORD_NO
					, OD.ORD_DTL_SEQ				/* 주문 상세 순번 */
					, OD.ORD_DTL_STAT_CD		/* 주문 상세 상태 코드 */
					,(SELECT CD.DTL_NM AS ORD_DTL_STAT_NM FROM CODE_DETAIL CD WHERE GRP_CD = 'ORD_DTL_STAT' AND CD.DTL_CD = OD.ORD_DTL_STAT_CD)  ORD_DTL_STAT_NM /* 주문 상태 코드명 */
					, OD.GOODS_ID				/* 상품 아이디 */
					, OD.GOODS_NM				/* 상품 명 */
					, OD.ITEM_NO				/* 단품 번호 */
					, OD.ITEM_NM				/* 단품 명 */

					, OD.DISP_CLSF_NO			/* 전시 분류 번호 */

					, OD.SALE_AMT				/* 판매 금액 */
					, OD.ORD_QTY				/* 주문 수량 */
					, OD.PAY_AMT				/* 결제 금액 */
					, OD.GOODS_CMSN_RT			/* 상품수수료율 */
					, OD.DLVRC_NO				/* 배송비 번호 */
					, OD.DLVR_NO				/* 배송 번호 */
					, OD.COMP_NO				/* 업체 번호 */
					, ( SELECT FN_GET_COMPANY_NAME(OD.COMP_NO) ) AS COMP_NM				/* 업체 명 */
					, OD.GOODS_ESTM_REG_YN		/* 상품 평가 등록 여부 */
					, OD.SYS_REGR_NO			/* 시스템 등록자 번호 */
					, OD.SYS_REG_DTM			/* 시스템 등록 일시 */
					, OD.SYS_UPDR_NO			/* 시스템 수정자 번호 */
					, OD.SYS_UPD_DTM			/* 시스템 수정 일시 */
					, OD.RMN_ORD_QTY	        /* 주문 잔여수량 */
					, FN_GET_USER_NAME(OD.SYS_REGR_NO) AS SYS_REGR_NM	/* 시스템 등록자 */
					, FN_GET_USER_NAME(OD.SYS_UPDR_NO) AS SYS_UPDR_NM	/* 시스템 수정자 */
					, (SELECT BND_NM_KO FROM BRAND_BASE WHERE BND_NO = (SELECT BND_NO FROM GOODS_BASE WHERE GOODS_ID = OD.GOODS_ID)) AS BND_NM_KO	/* 브랜드명 국문 */
					, OD.CMS					/* 수수료 */
					, (SELECT COMP_GB_CD FROM COMPANY_BASE WHERE COMP_NO = OD.COMP_NO) AS COMP_GB_CD  /* 업체 구분 코드 */
					, IFNULL( (SELECT DC.REAL_DLVR_AMT
						FROM DELIVERY_CHARGE DC
						WHERE DC.DLVRC_NO = OD.DLVRC_NO  ),0) AS REAL_DLVR_AMT  /*실 배송비*/
					, GI.IMG_SEQ	   /* 상품 이미지 SEQ  */
					, GI.IMG_PATH	   /* 상품 이미지 PATH  */
					<!-- , PB.PAY_MEANS_CD  /*결제 수단 코드  10 : 신용카드, 20 : 실시간계좌이체, 30 : 가상계좌, 40 : 무통장, 50 : 적립금, 90 : 외부몰 */
					, PB.ACCT_NO       /*계좌번호*/
					, PB.BANK_CD	   /*은행코드*/
					, PB.OOA_NM        /*예금주명*/ -->
					, FN_GET_ORDER_PAY_MEANS_CD(OD.ORD_NO) AS PAY_MEANS_CD	/* 주 결제 수단 */
					, (SELECT OB.ORD_ACPT_DTM
								FROM ORDER_BASE OB
								WHERE OB.ORD_NO = OD.ORD_NO ) AS ORD_ACPT_DTM  /*주문접수일시*/
					<!-- , IFNULL( (SELECT DC.REAL_DLVR_AMT
						FROM DELIVERY_CHARGE DC
						WHERE DC.DLVRC_NO = OD.DLVRC_NO  ),0) AS REAL_DLVR_AMT  /*실 배송비*/ -->
					<!-- , MB.BANK_CD AS REFUND_BANK_CD	   /*환불 은행코드*/ -->
					<!-- , MB.ACCT_NO AS REFUND_ACCT_NO       /* 환불 계좌번호*/ -->
					, MB.MBR_NM AS REFUND_OOA_NM       /* 환불 예금주*/
					, OB.ORD_DTL_CNT    /* 주문상세 갯수 */
				    , OB.ORD_NM
				    , OB.ORDR_EMAIL
				    , OB.ORDR_MOBILE
					, FN_GET_ORDER_DTL_PRMT_DC_AMT(OD.ORD_NO, OD.ORD_DTL_SEQ) AS PRMT_DC_AMT		/* 프로모션 할인 금액 */
					, OD.PAK_GOODS_ID
					,CASE WHEN OD.PAK_GOODS_ID is NOT null 
						THEN
					    (
					   	SELECT GROUP_CONCAT(CONCAT_WS(' : ', GOG.SHOW_NM , AV.ATTR_VAL) ORDER BY GOG.DISP_PRIOR_RANK SEPARATOR '|')  
						  FROM GOODS_BASE GB,
							   ITEM IT,
							   GOODS_OPT_GRP GOG,
							   GOODS_ATTRIBUTE GA,
							   ITEM_ATTRIBUTE_VALUE IAV,
							   ATTRIBUTE_VALUE AV
					     WHERE GB.GOODS_ID = IT.GOODS_ID 
						   AND GA.GOODS_ID = GB.GOODS_ID
						   AND GA.ATTR_NO = AV.ATTR_NO 
						   AND GOG.ATTR_NO = GA.ATTR_NO
						   AND GOG.ATTR_NO = AV.ATTR_NO
						   AND IAV.ITEM_NO = IT.ITEM_NO 
						   AND IAV.ATTR_NO = AV.ATTR_NO
						   AND AV.ATTR_VAL_NO = IAV.ATTR_VAL_NO
						   AND GB.GOODS_ID = OD.GOODS_ID
						   AND GOG.GOODS_ID = OD.PAK_GOODS_ID
					   )
				   END AS PAK_ITEM_NM  
				    , (SELECT GOODS_NM FROM GOODS_BASE WHERE GOODS_ID = OD.PAK_GOODS_ID) AS PAK_GOODS_NM
				    , CASE WHEN OD.PAK_GOODS_ID IS null THEN GB.GOODS_CSTRT_TP_CD
						   ELSE (SELECT GOODS_CSTRT_TP_CD FROM GOODS_BASE WHERE GOODS_ID = OD.PAK_GOODS_ID)
					  END AS GOODS_CSTRT_TP_CD
					, OD.MKI_GOODS_YN
	        		, OD.MKI_GOODS_OPT_CONTENT 
			FROM	ORDER_DETAIL OD
			<!-- LEFT OUTER JOIN PAY_BASE PB	ON OD.ORD_NO = PB.ORD_NO /* 결제기본Table */
														AND	PB.PAY_STAT_CD IN ('${@framework.common.constants.CommonConstants@PAY_STAT_00}', '${@framework.common.constants.CommonConstants@PAY_STAT_01}') /* 결제 상태 코드 - 01:입금대기, 02:결제완료 */
														AND	PB.ORD_CLM_GB_CD = '${@framework.common.constants.CommonConstants@ORD_CLM_GB_10}'	/* 주문 클레임 구분 코드 - 10:주문 */ -->
			LEFT OUTER join GOODS_BASE GB
					on OD.GOODS_ID = GB.GOODS_ID											
			LEFT OUTER JOIN GOODS_IMG GI
					 ON GI.GOODS_ID = OD.GOODS_ID
					AND GI.DLGT_YN = '${@framework.common.constants.CommonConstants@COMM_YN_Y}'
			INNER JOIN ORDER_BASE AS OB ON OB.ORD_NO = OD.ORD_NO
			LEFT OUTER JOIN MEMBER_BASE MB ON (MB.MBR_NO != 0 AND MB.MBR_NO = OB.MBR_NO)
		WHERE  OD.ORD_NO = #{ordNo}	/* 주문번호 */
		<!-- if test='ordDtlSeq != null and ordDtlSeq != ""'>
			AND	OD.ORD_DTL_SEQ = #{ordDtlSeq}
		</if -->
			AND OD.RMN_ORD_QTY > 0
		)OBB		
	</select>

	<select id="listPurchaseDetail" resultMap="orderListMap">
		<!--
			Query Name : order.listPurchaseDetail
			Description : Front 마이페이지 구매확정 조회 리스트
		-->
		SELECT	OD.ORD_NO
					, OD.ORD_DTL_SEQ				/* 주문 상세 순번 */
					, OD.ORD_DTL_STAT_CD		/* 주문 상세 상태 코드 */
					,(SELECT CD.DTL_NM AS ORD_DTL_STAT_NM FROM CODE_DETAIL CD WHERE GRP_CD = 'ORD_DTL_STAT' AND CD.DTL_CD = OD.ORD_DTL_STAT_CD)  ORD_DTL_STAT_NM /* 주문 상태 코드명 */
					, OD.GOODS_ID				/* 상품 아이디 */
					, OD.GOODS_NM				/* 상품 명 */
					, OD.ITEM_NO				/* 단품 번호 */
					, OD.ITEM_NM				/* 단품 명 */
					, OD.DISP_CLSF_NO			/* 전시 분류 번호 */
					, OD.SALE_AMT				/* 판매 금액 */
					, OD.ORD_QTY				/* 주문 수량 */
					, OD.PAY_AMT				/* 결제 금액 */
					, OD.GOODS_CMSN_RT			/* 상품수수료율 */
					, OD.DLVRC_NO				/* 배송비 번호 */
					, OD.DLVR_NO				/* 배송 번호 */
					, OD.COMP_NO				/* 업체 번호 */
					, ( SELECT FN_GET_COMPANY_NAME(OD.COMP_NO) ) AS COMP_NM				/* 업체 명 */
					, (SELECT IFNULL(SUM(CLM_QTY), 0) AS CLM_EXC_QTY FROM CLAIM_BASE CB ,CLAIM_DETAIL CD 
						WHERE CB.CLM_NO = CD.CLM_NO AND CB.CLM_TP_CD = '30' AND CB.CLM_STAT_CD NOT IN ('40') AND CD.CLM_DTL_TP_CD = '40' AND CB.ORD_NO = OB.ORD_NO AND CD.ORD_DTL_SEQ = OD.ORD_DTL_SEQ 
					) AS CLM_EXC_QTY
                    , OD.RTN_QTY
                    , OD.RMN_ORD_QTY	        /* 주문 잔여수량 */
					, OD.GOODS_ESTM_REG_YN		/* 상품 평가 등록 여부 */
					, OD.SYS_REGR_NO			/* 시스템 등록자 번호 */
					, OD.SYS_REG_DTM			/* 시스템 등록 일시 */
					, OD.SYS_UPDR_NO			/* 시스템 수정자 번호 */
					, OD.SYS_UPD_DTM			/* 시스템 수정 일시 */ 
					, FN_GET_USER_NAME(OD.SYS_REGR_NO) AS SYS_REGR_NM	/* 시스템 등록자 */
					, FN_GET_USER_NAME(OD.SYS_UPDR_NO) AS SYS_UPDR_NM	/* 시스템 수정자 */
					, (SELECT BND_NM_KO FROM BRAND_BASE WHERE BND_NO = (SELECT BND_NO FROM GOODS_BASE WHERE GOODS_ID = OD.GOODS_ID)) AS BND_NM_KO	/* 브랜드명 국문 */
					, OD.CMS					/* 수수료 */
					, (SELECT COMP_GB_CD FROM COMPANY_BASE WHERE COMP_NO = OD.COMP_NO) AS COMP_GB_CD  /* 업체 구분 코드 */
					, IFNULL( (SELECT DC.REAL_DLVR_AMT
						FROM DELIVERY_CHARGE DC
						WHERE DC.DLVRC_NO = OD.DLVRC_NO  ),0) AS REAL_DLVR_AMT  /*실 배송비*/
					, GI.IMG_SEQ	   /* 상품 이미지 SEQ  */
					, GI.IMG_PATH	   /* 상품 이미지 PATH  */					
					, FN_GET_ORDER_PAY_MEANS_CD(OD.ORD_NO) AS PAY_MEANS_CD	/* 주 결제 수단 */
					, (SELECT OB.ORD_ACPT_DTM
								FROM ORDER_BASE OB
								WHERE OB.ORD_NO = OD.ORD_NO ) AS ORD_ACPT_DTM  /*주문접수일시*/
					, IFNULL( (SELECT DC.REAL_DLVR_AMT
						FROM DELIVERY_CHARGE DC
						WHERE DC.DLVRC_NO = OD.DLVRC_NO  ),0) AS REAL_DLVR_AMT  /*실 배송비*/					
					, MB.MBR_NM AS REFUND_OOA_NM       /* 환불 예금주*/
					, OB.ORD_DTL_CNT    /* 주문상세 갯수 */
				    , OB.ORD_NM
				    , OB.ORDR_EMAIL
				    , OB.ORDR_MOBILE
					, FN_GET_ORDER_DTL_PRMT_DC_AMT(OD.ORD_NO, OD.ORD_DTL_SEQ) AS PRMT_DC_AMT		/* 프로모션 할인 금액 */
					, FN_GET_ORDER_CLAIM_ING_YN(OD.ORD_NO, OD.ORD_DTL_SEQ) AS CLM_ING_YN /* 클레임 진행 여부 */
					, OD.PAK_GOODS_ID
					, OD.ISU_SCHD_PNT  /*발급 예정 포인트*/
					, OD.MKI_GOODS_YN
	        		, OD.MKI_GOODS_OPT_CONTENT
	        		, PGB.GOODS_CSTRT_TP_CD
					, CASE WHEN PGB.GOODS_CSTRT_TP_CD = 'PAK' THEN (SELECT GOODS_NM FROM GOODS_BASE GB WHERE GB.GOODS_ID = OD.GOODS_ID) 
						ELSE NULL
						END AS OPT_GOODS_NM		  
			        , CASE WHEN OD.PAK_GOODS_ID IS NOT NULL THEN
			        (
			        	SELECT GROUP_CONCAT(CONCAT_WS(' : ', GOG.SHOW_NM , AV.ATTR_VAL) ORDER BY GOG.DISP_PRIOR_RANK SEPARATOR '|')
			        	FROM GOODS_BASE GB,ITEM IT, GOODS_OPT_GRP GOG, GOODS_ATTRIBUTE GA, ITEM_ATTRIBUTE_VALUE IAV, ATTRIBUTE_VALUE AV
			        	WHERE GB.GOODS_ID = IT.GOODS_ID AND GA.GOODS_ID = GB.GOODS_ID
				        	AND GA.ATTR_NO = AV.ATTR_NO AND GOG.ATTR_NO = GA.ATTR_NO
				        	AND GOG.ATTR_NO = AV.ATTR_NO AND IAV.ITEM_NO = IT.ITEM_NO
				        	AND IAV.ATTR_NO = AV.ATTR_NO AND AV.ATTR_VAL_NO = IAV.ATTR_VAL_NO
				        	AND GB.GOODS_ID = OD.GOODS_ID AND GOG.GOODS_ID = OD.PAK_GOODS_ID
			        )
			        END AS PAK_ITEM_NM
			FROM	ORDER_DETAIL OD			
			LEFT OUTER JOIN GOODS_IMG GI
					 ON GI.GOODS_ID = OD.GOODS_ID
					AND GI.DLGT_YN = '${@framework.common.constants.CommonConstants@COMM_YN_Y}'
			INNER JOIN ORDER_BASE AS OB ON OB.ORD_NO = OD.ORD_NO
			LEFT OUTER JOIN GOODS_BASE PGB ON PGB.GOODS_ID = OD.PAK_GOODS_ID
			LEFT OUTER JOIN MEMBER_BASE MB ON (MB.MBR_NO != 0 AND MB.MBR_NO = OB.MBR_NO)
		WHERE  OD.ORD_NO = #{ordNo}	/* 주문번호 */		
			AND OD.ORD_DTL_STAT_CD IN
												('${@framework.common.constants.CommonConstants@ORD_DTL_STAT_150}', /* 주문 상세 상태 코드 : 배송중 */
												'${@framework.common.constants.CommonConstants@ORD_DTL_STAT_160}' /* 주문 상세 상태 코드 : 배송완료 */
												)
			AND OD.RMN_ORD_QTY > 0
			AND (FN_GET_ORDER_CLAIM_ING_YN(OD.ORD_NO, OD.ORD_DTL_SEQ) = '${@framework.common.constants.CommonConstants@COMM_YN_N}' AND (OD.RMN_ORD_QTY -  FN_GET_ORD_CLM_RTN_CPLT_QTY(OD.ORD_NO, OD.ORD_DTL_SEQ)) > 0) 
	</select>

    <select id="listOrderCdCountList" resultType="biz.app.order.model.OrderStatusVO">
        <!--
            Query Name : order.listOrderCdCountList
            Description : Front 마이페이지 나의 최근 주문현황
        -->
        SELECT /* QUERYID(order.listOrderCdCountList) */
		    COUNT(1),
		    IFNULL(SUM(ORD_ACPT), 0) AS ORD_ACPT, IFNULL(SUM(ORD_CMPLT), 0) AS ORD_CMPLT, IFNULL(SUM(ORD_SHP_RDY), 0) AS ORD_SHP_RDY,
		    IFNULL(SUM(ORD_SHP_ING), 0) AS ORD_SHP_ING, IFNULL(SUM(ORD_SHP_CMPLT), 0) AS ORD_SHP_CMPLT, IFNULL(SUM(PUR_CNFM), 0) AS PCHSE_CNFM, IFNULL(SUM(ORD_CNCL), 0) AS ORD_CNCL
		FROM (
		    SELECT
		       
		        IF(OD.ORD_DTL_STAT_CD = '${@framework.common.constants.CommonConstants@ORD_DTL_STAT_110}' AND OD.RMN_ORD_QTY - OD.RTN_QTY - FN_GET_ORDER_CLAIM_EXC_QTY(OD.ORD_NO, OD.ORD_DTL_SEQ) > 0, 1, 0) AS ORD_ACPT,
		        
		       
		        IF(OD.ORD_DTL_STAT_CD IN ('${@framework.common.constants.CommonConstants@ORD_DTL_STAT_120}', '${@framework.common.constants.CommonConstants@ORD_DTL_STAT_130}') AND OD.RMN_ORD_QTY - OD.RTN_QTY - FN_GET_ORDER_CLAIM_EXC_QTY(OD.ORD_NO, OD.ORD_DTL_SEQ) > 0, 1, 0) AS ORD_CMPLT,
		        
		       
		        IF(OD.ORD_DTL_STAT_CD = '${@framework.common.constants.CommonConstants@ORD_DTL_STAT_140}' AND OD.RMN_ORD_QTY - OD.RTN_QTY - FN_GET_ORDER_CLAIM_EXC_QTY(OD.ORD_NO, OD.ORD_DTL_SEQ) > 0, 1, 0) AS ORD_SHP_RDY,
		        
		       
		        IF(OD.ORD_DTL_STAT_CD = '${@framework.common.constants.CommonConstants@ORD_DTL_STAT_150}' AND OD.RMN_ORD_QTY - OD.RTN_QTY - FN_GET_ORDER_CLAIM_EXC_QTY(OD.ORD_NO, OD.ORD_DTL_SEQ) > 0, 1, 0) AS ORD_SHP_ING,
		        
               
                IF(OD.ORD_DTL_STAT_CD = '${@framework.common.constants.CommonConstants@ORD_DTL_STAT_160}' AND OD.RMN_ORD_QTY - OD.RTN_QTY - FN_GET_ORDER_CLAIM_EXC_QTY(OD.ORD_NO, OD.ORD_DTL_SEQ) > 0, 1, 0) AS ORD_SHP_CMPLT,
                
               
                IF(OD.ORD_DTL_STAT_CD = '${@framework.common.constants.CommonConstants@ORD_DTL_STAT_170}' AND OD.RMN_ORD_QTY - OD.RTN_QTY - FN_GET_ORDER_CLAIM_EXC_QTY(OD.ORD_NO, OD.ORD_DTL_SEQ) > 0, 1, 0) AS PUR_CNFM,
                
		        CASE WHEN (OD.ORD_DTL_STAT_CD IN ('${@framework.common.constants.CommonConstants@ORD_DTL_STAT_110}', '${@framework.common.constants.CommonConstants@ORD_DTL_STAT_120}', '${@framework.common.constants.CommonConstants@ORD_DTL_STAT_130}', '${@framework.common.constants.CommonConstants@ORD_DTL_STAT_140}')) AND OD.CNC_QTY > 0 THEN 1 ELSE 0 END AS ORD_CNCL
		    FROM
		        ORDER_BASE OB
		        JOIN ORDER_DETAIL OD ON (OB.ORD_NO = OD.ORD_NO)
		        JOIN GOODS_IMG GI ON (OD.GOODS_ID = GI.GOODS_ID AND GI.DLGT_YN = '${@framework.common.constants.CommonConstants@COMM_YN_Y}')
		    WHERE
		        OB.DATA_STAT_CD = '${@framework.common.constants.CommonConstants@DATA_STAT_01}'
		        AND OB.ORDR_SHOW_YN = '${@framework.common.constants.CommonConstants@COMM_YN_Y}'
		        AND OB.ORD_STAT_CD IN ('${@framework.common.constants.CommonConstants@ORD_STAT_10}', '${@framework.common.constants.CommonConstants@ORD_STAT_20}')
		        AND OB.MBR_NO = #{mbrNo}  /* 회원번호 */
		        AND OB.ORD_ACPT_DTM BETWEEN #{ordAcptDtmStart} AND #{ordAcptDtmEnd}
		) ORD
    </select>


	<!-- 계산서/영수증 조회 및 신청 리스트 resultMap -->
	<resultMap type="biz.app.order.model.OrderReceiptVO" id="orderReceiptListMap">
		<id		property="ordNo"			column="ORD_NO"/>			<!-- 주문 번호 -->
		<result property="ordAcptDtm"		column="ORD_ACPT_DTM"/>		<!-- 주문 접수 일시 -->
		<result property="payAmtTotal"		column="PAY_AMT_TOTAL"/>	<!-- 결제 금액 -->
		<result property="cashRctNo"   		column="CASH_RCT_NO"/>		<!-- 최종 현금 영수증 번호 -->
		<collection property="cashReceiptVO" column="CASH_RCT_NO"  javaType="java.lang.Integer" ofType="biz.app.receipt.model.CashReceiptVO" select="getLiveCashReceipt"/>
		<collection property="orderDetailTaxListVO" ofType="biz.app.order.model.OrderDetailTaxVO">
			<id		property="ordDtlSeq"		column="ORD_DTL_SEQ"/>			<!-- 주문 상세 순번 -->
			<result property="bndNmKo"			column="BND_NM_KO"/>			<!-- 브랜드명 국문 -->
			<result property="goodsId"			column="GOODS_ID"/>				<!-- 상품 아이디 -->
			<result property="goodsNm"			column="GOODS_NM"/>				<!-- 상품 명 -->
			<result property="itemNm"			column="ITEM_NM"/>				<!-- 단품 명 -->
			<result property="saleAmt"			column="SALE_AMT"/>				<!-- 판매 금액 -->
			<result property="ordQty"			column="ORD_QTY"/>				<!-- 주문 수량 -->
			<result property="rmnOrdQty"           column="RMN_ORD_QTY"/>              <!-- 주문 수량 -->
			<result property="vldOrdQty"           column="VLD_ORD_QTY"/>	<!--  유효 주문 수량 -->
			<result property="imgSeq"		    column="IMG_SEQ"/>			    <!-- 상품 이미지 순번 -->
			<result property="imgPath"		    column="IMG_PATH"/>			    <!-- 상품 이미지 경로 -->
			<collection property="payBaseVOList" column="ORD_NO"  javaType="java.util.ArrayList" ofType="biz.app.pay.model.PayBaseVO" select="getPayBaseInc"/>
		</collection>
	</resultMap>

	<sql id="pageOrderReceiptCondition">
		<!--
			Query Name : order.pageOrderReceiptCondition
			Description : 계산서/영수증 조회 및 신청 리스트 조회 Where절
		-->
		AND OB.DATA_STAT_CD = '${@framework.common.constants.CommonConstants@DATA_STAT_01}' /* 활성건 기준 */
		AND OB.MBR_NO = #{mbrNo}	/* 회원번호 */
		AND OB.ORD_ACPT_DTM BETWEEN #{ordAcptDtmStart} AND #{ordAcptDtmEnd}	/* 주문접수일시 : ORD_ACPT_DTM */
		AND OB.ORD_STAT_CD = '${@framework.common.constants.CommonConstants@ORD_STAT_20}' /* 주문 상태 코드 : 주문완료 */
		AND PB.PAY_STAT_CD = '${@framework.common.constants.CommonConstants@PAY_STAT_01}' /* 결제 상태 코드 : 결제완료 */
		AND PB.ORD_CLM_GB_CD = '${@framework.common.constants.CommonConstants@ORD_CLM_GB_10}' /* 주문 클레임 구분 코드 : 주문 */
	</sql>

    <select id="pageOrderReceipt" resultMap="orderReceiptListMap">
        <!--
            Query Name : order.pageOrderReceipt
            Description : 계산서/영수증 조회 및 신청 리스트 조회(클레임 진행중인 건은 제외하고, 클레임 완료된것만 마이너스처리함)
        -->
        SELECT *  /* QUERYID(order.pageOrderReceipt) */ FROM
        (
        SELECT
            OD.ORD_NO,
            OD.ORD_DTL_SEQ,
            OD.ORD_DTL_STAT_CD,
            OD.GOODS_ID,
            OD.GOODS_NM,
            OD.ITEM_NO,
            OD.ITEM_NM,
            OD.ORD_QTY,
            OD.CNC_QTY,
            OD.RTN_QTY,
            OD.RMN_ORD_QTY,
            OD.RMN_ORD_QTY -  FN_GET_ORD_CLM_RTN_CPLT_QTY(OD.ORD_NO, OD.ORD_DTL_SEQ) AS VLD_ORD_QTY /* 유효 주문 수량 */ ,
            OD.SALE_AMT,
            OD.PAY_AMT,
			(SELECT  SUM(IF(PB.PAY_GB_CD =  '${@framework.common.constants.CommonConstants@PAY_GB_10}', PB.PAY_AMT, -PB.PAY_AMT))
              FROM    pay_base PB
              WHERE   PB.ORD_NO = OB.ORD_NO
              AND    (PB.CLM_NO IS NULL or  PB.CLM_NO NOT IN
              	(
              		SELECT CLM_NO FROM CLAIM_BASE
              			WHERE	CLM_STAT_CD NOT IN ('${@framework.common.constants.CommonConstants@CLM_STAT_30}' ) AND ORD_NO = OB.ORD_NO) )
              			AND PB.CNC_YN='${@framework.common.constants.CommonConstants@COMM_YN_N}'
              ) AS PAY_AMT_TOTAL /* 반품 완료된 것, 주문완료된것만 필터링 */,
            OD.DLVRC_NO,
            OD.ORD_DLVRA_NO,
            OD.DLVR_NO,
            OD.COMP_NO,
            CP.COMP_NM,
            OD.GOODS_ESTM_REG_YN,
            OB.ORD_ACPT_DTM,
            OB.ORD_CPLT_DTM,
            OB.ST_ID,
            OB.MBR_NO,
            OB.ORD_DTL_CNT,
            OB.ORD_STAT_CD,
            OB.ORD_MDA_CD,
            (SELECT BND_NM_KO FROM BRAND_BASE WHERE BND_NO = (SELECT BND_NO FROM GOODS_BASE WHERE GOODS_ID = OD.GOODS_ID)) AS BND_NM_KO,
            GI.IMG_SEQ,
            GI.IMG_PATH,
            GI.RVS_IMG_PATH,
            (SELECT MAX(CRGM.CASH_RCT_NO) FROM CASH_RECEIPT_GOODS_MAP CRGM
              INNER JOIN CASH_RECEIPT CR
              ON    CRGM.CASH_RCT_NO = CR.CASH_RCT_NO
              WHERE 1=1 AND CRGM.ORD_CLM_NO = OB.ORD_NO) AS CASH_RCT_NO /* 현금영수증 번호 */
        FROM (SELECT 	A.ORD_NO,
				            A.ORD_ACPT_DTM,
				            A.ORD_CPLT_DTM,
				            A.ST_ID,
				            A.MBR_NO,
				            A.ORD_DTL_CNT,
				            A.ORD_STAT_CD,
				            A.ORD_MDA_CD
				 FROM	ORDER_BASE A
				 JOIN ORDER_DETAIL B ON (B.ORD_NO = A.ORD_NO)
            	 INNER JOIN PAY_BASE C ON C.ORD_NO = A.ORD_NO AND C.PAY_STAT_CD = '${@framework.common.constants.CommonConstants@PAY_STAT_01}' /*결제완료*/
           		 			AND C.PAY_GB_CD = '${@framework.common.constants.CommonConstants@PAY_GB_10}' /*결제*/
           					AND C.ORD_CLM_GB_CD='${@framework.common.constants.CommonConstants@ORD_CLM_GB_10}' /*주문 */
				 WHERE	A.DATA_STAT_CD = '${@framework.common.constants.CommonConstants@DATA_STAT_01}'		
				 <if test="ordAcptDtmStart != null and ordAcptDtmStart != '' and ordAcptDtmEnd != null and ordAcptDtmEnd != ''">
				 AND A.ORD_ACPT_DTM BETWEEN #{ordAcptDtmStart} AND #{ordAcptDtmEnd} /* 주문접수일시 : ORD_ACPT_DTM */
				 </if>
				 <if test="mbrNo != null">
				 AND A.MBR_NO = #{mbrNo}    /* 회원번호 */
				 </if>
				 <if test="ordNo != null and ordNo != ''">
				 AND A.ORD_NO = #{ordNo}    /* 주문번호 */
				 </if>
				 AND B.RMN_ORD_QTY - B.RTN_QTY &gt; 0
				 GROUP BY A.ORD_NO
        		 ORDER BY A.ORD_NO DESC
				 <include refid="bizCommon.pageSql" />
                ) OB
            JOIN ORDER_DETAIL OD ON (OB.ORD_NO = OD.ORD_NO)
            JOIN COMPANY_BASE CP ON (OD.COMP_NO = CP.COMP_NO)
            INNER JOIN PAY_BASE PB  ON OB.ORD_NO = PB.ORD_NO AND PB.PAY_STAT_CD = '${@framework.common.constants.CommonConstants@PAY_STAT_01}' /*결제완료*/
           		AND PB.PAY_GB_CD = '${@framework.common.constants.CommonConstants@PAY_GB_10}' /*결제*/
           		AND PB.ORD_CLM_GB_CD='${@framework.common.constants.CommonConstants@ORD_CLM_GB_10}' /*주문 */
            LEFT JOIN GOODS_IMG GI ON (OD.GOODS_ID = GI.GOODS_ID AND GI.DLGT_YN = 'Y')
        GROUP BY ORD_NO,ORD_DTL_SEQ
<!--             <if test='ordDtlStatCd != null and ordDtlStatCd != ""'> -->
<!--             AND OD.ORD_DTL_STAT_CD = #{ordDtlStatCd}    /* 주문상태코드 */ -->
<!--             </if> -->
        ORDER BY OB.ORD_NO DESC, OD.ORD_DTL_SEQ
		) OL
    </select>


	<select id="pageOrderReceiptCount" resultType="java.lang.Integer">
		<!--
            Query Name : order.pageOrderReceiptCount
            Description : 계산서/영수증 조회 및 신청 리스트 조회 카운트
        -->
		SELECT  /* QUERYID(order.pageOrderReceiptCount) */  COUNT(*) FROM
		(
			SELECT OB.ORD_NO
	        FROM
	            ORDER_BASE OB
	            JOIN ORDER_DETAIL OD ON (OB.ORD_NO = OD.ORD_NO)
	            JOIN COMPANY_BASE CP ON (OD.COMP_NO = CP.COMP_NO)
	            INNER JOIN PAY_BASE PB  ON OB.ORD_NO = PB.ORD_NO AND PB.PAY_STAT_CD = '${@framework.common.constants.CommonConstants@PAY_STAT_01}' /*결제완료*/
	           		AND PB.PAY_GB_CD = '${@framework.common.constants.CommonConstants@PAY_GB_10}' /*결제*/
	           		AND PB.ORD_CLM_GB_CD='${@framework.common.constants.CommonConstants@ORD_CLM_GB_10}' /*주문 */
	            LEFT JOIN GOODS_IMG GI ON (OD.GOODS_ID = GI.GOODS_ID AND GI.DLGT_YN = 'Y')
	        WHERE
	            OB.DATA_STAT_CD = '${@framework.common.constants.CommonConstants@DATA_STAT_01}'
	            AND OD.RMN_ORD_QTY - OD.RTN_QTY &gt; 0
	            <if test="ordAcptDtmStart != null and ordAcptDtmStart != '' and ordAcptDtmEnd != null and ordAcptDtmEnd != ''">
	            AND OB.ORD_ACPT_DTM BETWEEN #{ordAcptDtmStart} AND #{ordAcptDtmEnd} /* 주문접수일시 : ORD_ACPT_DTM */
	            </if>
	            <if test="mbrNo != null">
	            AND OB.MBR_NO = #{mbrNo}    /* 회원번호 */
	            </if>
	            <if test="ordNo != null and ordNo != ''">
	            AND OB.ORD_NO = #{ordNo}    /* 주문번호 */
	            </if>
	            GROUP BY ORD_NO
<!-- 	            <if test='ordDtlStatCd != null and ordDtlStatCd != ""'> -->
<!-- 	            AND OD.ORD_DTL_STAT_CD = #{ordDtlStatCd}    /* 주문상태코드 */ -->
<!-- 	            </if> -->
	       ) A
	</select>

	<select id="getPayBaseInc" resultType="biz.app.pay.model.PayBaseVO">
		<!--
            Query Name : order.getPayBaseInc
            Description : FRONT PC 영수증 목록[ include sql ] : 결제정보
        -->
		SELECT /* QUERYID (order.getPayBaseInc) */ *
		FROM PAY_BASE PB
		WHERE ORD_NO = #{ordNo}
		 	AND PB.PAY_STAT_CD =  '${@framework.common.constants.CommonConstants@PAY_STAT_01}' /*결제완료*/
            AND PB.PAY_GB_CD ='${@framework.common.constants.CommonConstants@PAY_GB_10}' /*결제*/
            AND PB.ORD_CLM_GB_CD ='${@framework.common.constants.CommonConstants@ORD_CLM_GB_10}' /*주문 */
	</select>

	<select id="getLiveCashReceipt" resultType="biz.app.receipt.model.CashReceiptVO">
		<!--
            Query Name : order.getLiveCashReceipt
            Description : FRONT PC 영수증 목록 [include sql] : Active 한 현금영수증 조회
        -->
		SELECT /* QUERYID (order.getPayBaseInc) */ *
		FROM CASH_RECEIPT OCR
		WHERE CASH_RCT_NO = #{cashRctNo}
      		AND NOT EXISTS ( SELECT 1
              FROM CASH_RECEIPT CR
              WHERE CR.CASH_RCT_NO = OCR.ORG_CASH_RCT_NO )
	</select>

	<select id="listPaymentAdviceEmail" resultType="biz.app.order.model.BatchOrderVO">
        <!--
            Query Name : order.listPaymentAdviceEmail
            Description :  무통장/가상계좌 미입금된 목록 조회
        -->
		SELECT	PB.ORD_NO
				, PB.MBR_NO
				, MB.MBR_NM
				, MB.EMAIL
				, MB.EMAIL_RCV_YN
		FROM	PAY_BASE PB
			,	ORDER_BASE OB
			,	MEMBER_BASE MB
		WHERE	PB.ORD_NO = OB.ORD_NO
		AND		PB.MBR_NO = MB.MBR_NO
		<!-- AND		(OB.EMAIL_SND_YN IS NULL OR OB.EMAIL_SND_YN = '${@framework.common.constants.CommonConstants@COMM_YN_N}') -->
		AND		PB.ORD_CLM_GB_CD = '${@framework.common.constants.CommonConstants@ORD_CLM_GB_10}'
		AND		PB.PAY_STAT_CD = '${@framework.common.constants.CommonConstants@PAY_STAT_01}'
		AND		PB.PAY_MEANS_CD IN ('${@framework.common.constants.CommonConstants@PAY_MEANS_10}', '${@framework.common.constants.CommonConstants@PAY_MEANS_20}')
		AND		DATE_ADD(PB.DPST_SCHD_DT, INTERVAL -3 DAY) <![CDATA[<]]> NOW()
		AND 		OB.DATA_STAT_CD = '${@framework.common.constants.CommonConstants@DATA_STAT_01}' /* 활성건 기준 */
	</select>
	
	<select id="listNdpstMsgSendKko" resultType="biz.app.order.model.OrderMsgVO">
        <!--
            Query Name : order.listNdpstMsgSendKko
            Description : 가상계좌 1시간 경과 후 미입금된 목록 조회
        -->
		SELECT	OB.MBR_NO
				, OB.ORD_NM
				, OB.ORD_NO
				, OB.ORDR_MOBILE
				, OB.ORD_ACPT_DTM
				, OD.GOODS_NM
				, (SELECT COUNT(1) FROM ORDER_DETAIL ST1 WHERE ST1.ORD_NO = OB.ORD_NO ) AS EXTRA_ORD_CNT
				, PB.PAY_AMT
				, FN_GET_CODE_NAME("BANK", PB.BANK_CD, "") AS BANK_NM
				, PB.ACCT_NO
				, PB.DPST_SCHD_DT
				, PB.PAY_NO
		FROM PAY_BASE PB
		INNER JOIN ORDER_BASE OB ON PB.ORD_NO = OB.ORD_NO
		INNER JOIN ORDER_DETAIL OD ON OB.ORD_NO = OD.ORD_NO AND OD.ORD_DTL_SEQ = 1
		WHERE 1 = 1
			AND PB.ORD_CLM_GB_CD = '${@framework.common.constants.CommonConstants@ORD_CLM_GB_10}'	/* 주문 */
			AND	PB.PAY_STAT_CD = '${@framework.common.constants.CommonConstants@PAY_STAT_00}'	/* 입금 대기 */
			AND	PB.PAY_MEANS_CD = '${@framework.common.constants.CommonConstants@PAY_MEANS_30}'	/* 가상계좌 */
			AND	PB.CNC_YN = '${@framework.common.constants.CommonConstants@COMM_YN_N}'	/* 취소 여부 */
			AND	PB.PAY_GB_CD = '${@framework.common.constants.CommonConstants@PAY_GB_10}'	/* 결제 */
			AND PB.NDPST_MSG_SND_YN = '${@framework.common.constants.CommonConstants@COMM_YN_N}'
			AND	OB.DATA_STAT_CD = '${@framework.common.constants.CommonConstants@DATA_STAT_01}'	/* 활성 */
			AND	OB.ORD_PRCS_RST_CD = '${@framework.common.constants.CommonConstants@ORD_PRCS_RST_0000}'	/* 정상 처리 */
			AND	OB.ORD_STAT_CD = '${@framework.common.constants.CommonConstants@ORD_STAT_10}'	/* 주문 접수 */
			AND OD.RMN_ORD_QTY <![CDATA[>]]> 0	/* 잔여 주문 수량 */
			AND	DATE_ADD(PB.DPST_SCHD_DT, INTERVAL -2 HOUR) <![CDATA[<]]> NOW()	/* 결제 완료 일시 1시간 경과 */
	</select>

    <select id="listExchangeDetail" resultMap="orderListMap">
        <!--
            Query Name : order.listOrderDetailList
            Description : Front 마이페이지 반품/교환 조회
        -->
		SELECT /* QUERYID (order.listExchangeDetail) */
		    ORD_NO,
		    ST_ID,
		    ORD_DTL_SEQ,
		    GOODS_ID,
		    PAK_GOODS_ID,
		    <!-- GOODS_NM, -->
		    SALE_AMT,
		    PAY_AMT,
		    ORD_QTY,
		    RTN_QTY,
		    RMN_ORD_QTY,
		    CLM_EXC_CNT AS CLM_EXC_QTY, 	/* 클레임 교환 수량 */
		    CLM_EXC_ING_QTY	/* 클레임 교환 진행 수량 */,
		    ORD_DTL_CNT,
		    ORD_ACPT_DTM,
		    PAY_MEANS_CD	/* 주 결제 수단 */,
		    COMP_NO,
		    COMP_NM,
		    BND_NM_KO /* 브랜드명 국문 */,
		    IMG_SEQ,
		    IMG_PATH,
		    RVS_IMG_PATH,
		    DLVRC_PLC_NO,
		    ADD_SALE_AMT 	/* 추가 판매 금액 */,
		    ORD_NM, 
		    ORDR_EMAIL,
		    ORDR_MOBILE,
		    PRMT_DC_AMT		/* 프로모션 할인 금액 */,
		    ITEM_MNG_YN,
		    RTN_PSB_YN,
		    CLM_YN,
		    CBT_CLM_NO,
		    <!-- CASE 
		        WHEN CLM_YN = '${@framework.common.constants.CommonConstants@COMM_YN_Y}'
		            THEN ( SELECT CDT.ITEM_NM FROM CLAIM_DETAIL CDT WHERE CDT.CLM_NO = A.CBT_CLM_NO ORDER BY CDT.CLM_DTL_SEQ DESC LIMIT 1)
					ELSE A.ITEM_NM
		        END AS ITEM_NM,
		    CASE 
		        WHEN CLM_YN = '${@framework.common.constants.CommonConstants@COMM_YN_Y}'
		            THEN ( SELECT CDT.ITEM_NO FROM CLAIM_DETAIL CDT WHERE CDT.CLM_NO = A.CBT_CLM_NO ORDER BY CDT.CLM_DTL_SEQ DESC LIMIT 1)
					ELSE A.ITEM_NO
		        END AS ITEM_NO -->
		    CASE	
		    	WHEN ORD_QTY &gt; (CLM_CNC_CNT + CLM_RTN_CNT + CLM_EXC_CNT)
		    		THEN A.ITEM_NM
		    	ELSE ( SELECT CDT1.ITEM_NM FROM CLAIM_DETAIL CDT1 WHERE CDT1.CLM_NO = A.CBT_CLM_NO ORDER BY CDT1.CLM_DTL_SEQ DESC LIMIT 1)
		    END AS ITEM_NM,
		    CASE
		    	WHEN ORD_QTY &gt; (CLM_CNC_CNT + CLM_RTN_CNT + CLM_EXC_CNT)
		            THEN A.ITEM_NO
				ELSE ( SELECT CDT2.ITEM_NO FROM CLAIM_DETAIL CDT2 WHERE CDT2.CLM_NO = A.CBT_CLM_NO ORDER BY CDT2.CLM_DTL_SEQ DESC LIMIT 1)
		    END AS ITEM_NO
		     , CASE WHEN A.PAK_GOODS_ID IS null THEN GOODS_NM
				   ELSE PAK_GOODS_NM
			   END AS GOODS_NM     /* 상품 명 */
		    , CASE WHEN A.GOODS_CSTRT_TP_CD = 'PAK' THEN A.GOODS_NM
				   ELSE NULL
			   END AS OPT_GOODS_NM		  
			, PAK_ITEM_NM
			, MKI_GOODS_YN
	        , MKI_GOODS_OPT_CONTENT
	        , FN_GET_ORDER_CLAIM_ING_YN(ORD_NO,  ORD_DTL_SEQ) AS CLM_ING_YN /* 클레임 진행 여부 */
		FROM (
		    SELECT
			    DISTINCT OB.ORD_NO
			    , OB.ST_ID
			    , OD.ORD_DTL_SEQ
			    , OD.GOODS_ID
			    , OD.PAK_GOODS_ID
			    , GB.GOODS_NM
			    , OD.ITEM_NO
			    , OD.ITEM_NM
			    , OD.SALE_AMT
			    , OD.PAY_AMT
			    , OD.ORD_QTY
			    , OD.RTN_QTY
			    , OD.RMN_ORD_QTY
			    , FN_GET_ORDER_CLAIM_EXC_QTY(OD.ORD_NO, OD.ORD_DTL_SEQ) AS CLM_EXC_ING_QTY	/* 클레임 진행 수량 */
			    , OB.ORD_DTL_CNT
			    , OB.ORD_ACPT_DTM
				, FN_GET_ORDER_PAY_MEANS_CD(OD.ORD_NO) AS PAY_MEANS_CD	/* 주 결제 수단 */
			    , OD.COMP_NO
			    , CP.COMP_NM
	    		, FN_GET_BRAND_NAME_KO(GB.BND_NO) AS BND_NM_KO /* 브랜드명 국문 */
			    , GI.IMG_SEQ
			    , GI.IMG_PATH
			    , GI.RVS_IMG_PATH
			    , GB.DLVRC_PLC_NO
			    , IT.ADD_SALE_AMT 	/* 추가 판매 금액 */
			    , OB.ORD_NM
			    , OB.ORDR_EMAIL
			    , OB.ORDR_MOBILE
				, FN_GET_ORDER_DTL_PRMT_DC_AMT(OD.ORD_NO, OD.ORD_DTL_SEQ) AS PRMT_DC_AMT		/* 프로모션 할인 금액 */
				, GB.ITEM_MNG_YN
				, GB.RTN_PSB_YN
				, (SELECT IF((SELECT CBT.CLM_NO FROM CLAIM_BASE CBT JOIN CLAIM_DETAIL CDT ON(CBT.CLM_NO = CDT.CLM_NO) WHERE CDT.ORD_NO = #{ordNo} AND CDT.ORD_DTL_SEQ = #{ordDtlSeq} AND CBT.CLM_TP_CD = '${@framework.common.constants.CommonConstants@CLM_TP_30}' AND CBT.CLM_STAT_CD != '40' ORDER BY
	                                    CDT.CLM_CPLT_DTM DESC, CBT.CLM_NO DESC LIMIT 1 ) IS NULL, 'N', 'Y') FROM DUAL) AS CLM_YN
				, (SELECT IFNULL((SELECT CBT.CLM_NO FROM CLAIM_BASE CBT JOIN CLAIM_DETAIL CDT ON(CBT.CLM_NO = CDT.CLM_NO) WHERE CDT.ORD_NO = #{ordNo} AND CDT.ORD_DTL_SEQ = #{ordDtlSeq} AND CBT.CLM_TP_CD = '${@framework.common.constants.CommonConstants@CLM_TP_30}' AND CBT.CLM_STAT_CD != '40' ORDER BY
	                                    CDT.CLM_CPLT_DTM DESC, CBT.CLM_NO DESC LIMIT 1), '0') FROM DUAL) AS CBT_CLM_NO
	            , (SELECT 
					IFNULL(SUM(CDT.CLM_QTY), 0)
				   FROM CLAIM_BASE CBT 
				   JOIN claim_detail CDT ON(CBT.CLM_NO = CDT.CLM_NO) 
					WHERE CDT.ORD_NO = OB.ORD_NO
					AND CDT.ORD_DTL_SEQ = OD.ORD_DTL_SEQ
					AND CBT.CLM_TP_CD = '10' 
					AND CBT.CLM_STAT_CD != '40'
					
					) AS CLM_CNC_CNT,

				(SELECT 
					IFNULL(SUM(CDT.CLM_QTY), 0)
				FROM CLAIM_BASE CBT 
				JOIN claim_detail CDT ON(CBT.CLM_NO = CDT.CLM_NO) 
				WHERE CDT.ORD_NO = OB.ORD_NO
				AND CDT.ORD_DTL_SEQ = OD.ORD_DTL_SEQ
				AND CBT.CLM_TP_CD = '20' 
				AND CBT.CLM_STAT_CD != '40'
				
				) AS CLM_RTN_CNT,
				
				(SELECT 
					IFNULL(SUM(CDT.CLM_QTY), 0)
				FROM CLAIM_BASE CBT 
				JOIN claim_detail CDT ON(CBT.CLM_NO = CDT.CLM_NO) 
				WHERE CDT.ORD_NO = OB.ORD_NO
				AND CDT.ORD_DTL_SEQ = OD.ORD_DTL_SEQ
				AND CBT.CLM_TP_CD = '30' 
				AND CBT.CLM_STAT_CD != '40'
				AND CDT.CLM_DTL_STAT_CD LIKE '4%'
				
				) AS CLM_EXC_CNT
				
				,CASE WHEN OD.PAK_GOODS_ID is NOT null 
				THEN
			    (
			   	SELECT GROUP_CONCAT(CONCAT_WS(' : ', GOG.SHOW_NM , AV.ATTR_VAL) ORDER BY GOG.DISP_PRIOR_RANK SEPARATOR '|')  
				  FROM GOODS_BASE GB,
					   ITEM IT,
					   GOODS_OPT_GRP GOG,
					   GOODS_ATTRIBUTE GA,
					   ITEM_ATTRIBUTE_VALUE IAV,
					   ATTRIBUTE_VALUE AV
			     WHERE GB.GOODS_ID = IT.GOODS_ID 
				   AND GA.GOODS_ID = GB.GOODS_ID
				   AND GA.ATTR_NO = AV.ATTR_NO 
				   AND GOG.ATTR_NO = GA.ATTR_NO
				   AND GOG.ATTR_NO = AV.ATTR_NO
				   AND IAV.ITEM_NO = IT.ITEM_NO 
				   AND IAV.ATTR_NO = AV.ATTR_NO
				   AND AV.ATTR_VAL_NO = IAV.ATTR_VAL_NO
				   AND GB.GOODS_ID = OD.GOODS_ID
				   AND GOG.GOODS_ID = OD.PAK_GOODS_ID
			   )
		   END AS PAK_ITEM_NM  
		    , (SELECT GOODS_NM FROM GOODS_BASE WHERE GOODS_ID = OD.PAK_GOODS_ID) AS PAK_GOODS_NM
		    , CASE WHEN OD.PAK_GOODS_ID IS null THEN GB.GOODS_CSTRT_TP_CD
				   ELSE (SELECT GOODS_CSTRT_TP_CD FROM GOODS_BASE WHERE GOODS_ID = OD.PAK_GOODS_ID)
			  END AS GOODS_CSTRT_TP_CD
			, OD.MKI_GOODS_YN
	        , OD.MKI_GOODS_OPT_CONTENT	
			FROM
			    ORDER_BASE OB
			    JOIN ORDER_DETAIL OD ON (OB.ORD_NO = OD.ORD_NO)
			    JOIN COMPANY_BASE CP ON (OD.COMP_NO = CP.COMP_NO)
			    JOIN PAY_BASE PB ON (OB.ORD_NO = PB.ORD_NO)
			    LEFT JOIN CLAIM_BASE CB ON (OB.ORD_NO = CB.ORD_NO AND CB.CLM_TP_CD IN ('${@framework.common.constants.CommonConstants@CLM_TP_10}', '${@framework.common.constants.CommonConstants@CLM_TP_20}', '${@framework.common.constants.CommonConstants@CLM_TP_30}') AND CB.CLM_STAT_CD IN ('${@framework.common.constants.CommonConstants@CLM_STAT_10}', '${@framework.common.constants.CommonConstants@CLM_STAT_20}'))
			    LEFT JOIN CLAIM_DETAIL CD ON (CB.CLM_NO = CD.CLM_NO AND OD.ORD_NO = CD.ORD_NO AND OD.ORD_DTL_SEQ = CD.ORD_DTL_SEQ)
			    LEFT JOIN GOODS_IMG GI ON (OD.GOODS_ID = GI.GOODS_ID AND GI.DLGT_YN = '${@framework.common.constants.CommonConstants@COMM_YN_Y}')
				INNER JOIN GOODS_BASE GB ON GB.GOODS_ID = OD.GOODS_ID
				INNER JOIN ITEM IT ON IT.ITEM_NO = OD.ITEM_NO
			WHERE
			    OB.DATA_STAT_CD = '${@framework.common.constants.CommonConstants@DATA_STAT_01}'
			    AND OB.ORD_STAT_CD = '${@framework.common.constants.CommonConstants@ORD_STAT_20}'
			    AND OD.ORD_DTL_STAT_CD IN ('${@framework.common.constants.CommonConstants@ORD_DTL_STAT_160}')
			    AND (OD.RMN_ORD_QTY - IF ( CD.CLM_QTY IS NULL, 0, CD.CLM_QTY ) ) > 0 AND PB.ORD_CLM_GB_CD = '${@framework.common.constants.CommonConstants@ORD_CLM_GB_10}'
	            AND PB.PAY_GB_CD = '${@framework.common.constants.CommonConstants@PAY_GB_10}'
	            AND PB.PAY_STAT_CD = '${@framework.common.constants.CommonConstants@PAY_STAT_01}'
	            AND OB.ORD_NO = #{ordNo}
	            <!-- <if test='ordDtlSeq != null'>
			    	AND OD.ORD_DTL_SEQ = #{ordDtlSeq}
				</if>  -->
				<if test='rtnPsbYn != null and rtnPsbYn != ""'>
			    	AND GB.RTN_PSB_YN = #{rtnPsbYn}
				</if>
		) A
    </select>

 	<select id="listOrderAplBnft" resultType="biz.app.order.model.AplBnftVO">
		<!--
			Query Name : order.listOrderAplBnft
			Description : 구매영수증 MO > 주문의 적용 혜택 조회
		-->
		SELECT /* QUERYID(order.listOrderAplBnft) */
					AP.ORD_NO					/* 주문 번호 */
					, AP.ORD_DTL_SEQ			/* 주문 상세 순번 */
					, AP.APL_BENEFIT_NO		/* 적용 혜택 번호 */
					, APL_BNFT_GB_CD		/* 적용 혜택 구분 코드 */
					, APL_BNFT_TP_CD		/* 적용 혜택 유형 코드 */
					, APL_NO					/* 적용 번호 */
					, APL_AMT				/* 적용 금액 */
					, COMP_BDN_AMT		/* 업체 분담 금액 */
					, AP.CNC_YN					/* 취소 여부 */
					, AP.RMN_APL_AMT  	/*  잔여 적용금액 */
					, O.RMN_ORD_QTY	 AS RMN_ORD_QTY		/* 잔여 주문 수량 */
					, APL_AMT* RMN_ORD_QTY AS EACH_TOTAL_APL_AMT /* 상품당 총 적용금액 */
		FROM		APL_BNFT AP, ORDER_DETAIL O
		WHERE	1=1
		AND AP.ORD_NO = O.ORD_NO
		AND		AP.ORD_NO = #{ordNo}
		AND AP.CNC_YN != '${@framework.common.constants.CommonConstants@COMM_YN_Y}'
	</select>

	<select id="listPurchaseReceipt" resultType="biz.app.order.model.OrderDetailVO" >
		<!--  Query Name : order.listPurchaseReceipt
			Description : Front-MO 구매 영수증 팝업
		-->
		SELECT /* QUERYID(order.listPurchaseReceipt) */
			OB.ORD_NO
			, OB.ORD_NM
			, OB.MBR_NO
			, (SELECT MBR_NM FROM MEMBER_BASE  WHERE MBR_NO = OB.MBR_NO)  AS MBR_NM     /* 회원 이름 */
            , (SELECT LOGIN_ID FROM MEMBER_BASE WHERE OB.MBR_NO = MBR_NO)  AS LOGIN_ID
			, OD.GOODS_ID/* 상품 아이디 */
			, OD.GOODS_NM                                                  /* 상품 명 */
            , OD.ITEM_NO                                                  /* 단품 번호 */
            , OD.ITEM_NM                                                   /* 단품 명 */
            , OD.DISP_CLSF_NO		/* 전시 분류 번호 */
            , OD.SALE_AMT                  /* 판매 금액 */
            , OD.ORD_QTY                    /* 주문 수량 */
            , OD.PAY_AMT                 /* 결제 금액 */
            , OD.RMN_ORD_QTY	 /* 잔여 주문 수량 */
            , OD.RMN_ORD_QTY -  FN_GET_ORD_CLM_RTN_CPLT_QTY(OD.ORD_NO, OD.ORD_DTL_SEQ) AS VLD_ORD_QTY /* 유효 주문 수량 */
            , (SELECT sum(RMN_ORD_QTY) FROM ORDER_DETAIL WHERE ORD_NO =  #{ordNo}  ) AS TOTAL_RMN_ORD_QTY /* 총 주문 잔여 수량 */
            , FN_GET_ORDER_CLAIM_EXC_QTY(OD.ORD_NO, OD.ORD_DTL_SEQ) AS CLM_EXC_ING_QTY	/* 클레임 진행 수량 */
            , PB.PAY_AMT AS PAY_AMT_TOTAL /* 총 결제 금액 */
            , PB.*
		FROM ORDER_BASE OB
		INNER JOIN ORDER_DETAIL OD ON OB.ORD_NO = OD.ORD_NO
		INNER JOIN PAY_BASE PB ON OB.ORD_NO = PB.ORD_NO
		WHERE 1=1
				AND OB.DATA_STAT_CD = '${@framework.common.constants.CommonConstants@DATA_STAT_01}' /* 활성건 기준 */
				AND OB.ORD_NO = #{ordNo}	/* 주문번호 */
				AND	PB.PAY_STAT_CD IN ('${@framework.common.constants.CommonConstants@PAY_STAT_00}', '${@framework.common.constants.CommonConstants@PAY_STAT_01}') /* 결제 상태 코드 - 00:입금대기, 01:결제완료 */
				AND	PB.ORD_CLM_GB_CD = '${@framework.common.constants.CommonConstants@ORD_CLM_GB_10}'	/* 주문 클레임 구분 코드 - 01:주문 */
	</select>


	<!--  hjko  mypage 최근 주문한 목록  map  -->
	<resultMap type="biz.app.order.model.OrderDetailVO" id="recentOrderMap">
		<id	property="ordNo"		column="ORD_NO"/>	<!--주문 번호 -->
		<id	property="ordDtlSeq"		column="ORD_DTL_SEQ"/>		<!--  주문 상세 순번 -->
		<result property="goodsId"		column="GOODS_ID"/>		<!--  상품 아이디 -->
		<result property="goodsNm"		column="GOODS_NM"/>		<!--  상품명 -->
		<result property="itemNo"		column="ITEM_NO"/>	<!-- 단품번호 -->
		<result property="itemNm"		column="ITEM_NM"/>	<!-- 단품명 -->
		<result property="ordQty"		column="ORD_QTY"/>		<!-- 주문수량 -->
		<result property="cncQty"		column="CNC_QTY"/>		<!-- 취소수량 -->
		<result property="rmnOrdQty"		column="RMN_ORD_QTY"/>	<!-- 잔여주문수량 -->
		<result property="rtnQty"		column="RTN_QTY"/>		<!-- 반품수량 -->
		<result property="rtnCpltQty"		column="RTN_CPLT_QTY"/>		<!-- 반품 완료 수량 -->
		<result property="saleAmt"		column="SALE_AMT"/><!-- 판매금액-->
		<result property="prmtDcAmt"		column="PRMT_DC_AMT"/>	<!-- 프로모션 할인 금액-->
		<result property="bndNmKo"		column="BND_NM_KO"/>	<!-- 브랜드명한글 -->
		<result property="imgSeq"		column="IMG_SEQ"/>	<!-- 이미지일련번호-->
		<result property="imgPath"		column="IMG_PATH"/>	<!-- 이미지패스 -->
       <collection property="relatedGoodsList" ofType="biz.app.goods.model.GoodsBaseVO">
            <id     property="goodsId"        column="CSTRT_GOODS_ID"/>          <!-- 연관상품아이디 -->
			<result property="goodsNm"		column="CSTRT_GOODS_NM"/>		<!--  연관상품명 -->
			<result property="imgSeq"		column="CSTRT_IMG_SEQ"/>	<!-- 연관이미지일련번호-->
			<result property="imgPath"		column="CSTRT_IMG_PATH"/>	<!-- 연관이미지경로 -->
        </collection>		
	</resultMap>

	<select id="listMyRecentOrderGoods" resultMap="recentOrderMap">
		<!--
			Query Name : order.listMyRecentOrderGoods
			Description : 나의 최근 주문 목록 + 연관상품
		-->
		SELECT	/* QUERYID(order.listMyRecentOrderGoods) */
					OGB.ORD_NO
					, OGB.ORD_DTL_SEQ
					, OGB.GOODS_ID
					, OGB.GOODS_NM
					, OGB.ITEM_NO
					, OGB.ITEM_NM
					, OGB.ORD_QTY
					, OGB.CNC_QTY				/* 취소 수량 */
					, OGB.RMN_ORD_QTY
					, OGB.RTN_QTY	
					, FN_GET_ORD_CLM_RTN_CPLT_QTY(OGB.ORD_NO, OGB.ORD_DTL_SEQ) AS RTN_CPLT_QTY /* 반품 완료 수량 */ 
					, OGB.SALE_AMT 			/* 판매금액 */
					, FN_GET_ORDER_DTL_PRMT_DC_AMT(OGB.ORD_NO, OGB.ORD_DTL_SEQ) AS PRMT_DC_AMT		/* 프로모션 할인 금액 */
					, (SELECT BND_NM_KO FROM BRAND_BASE WHERE BND_NO = OGB.BND_NO) AS BND_NM_KO 	/* 브랜드 명 (국문) */
					, OGB.IMG_SEQ
		       		, OGB.IMG_PATH
		       		, GCI.CSTRT_GOODS_ID AS CSTRT_GOODS_ID
		       		, GB.GOODS_NM AS CSTRT_GOODS_NM
		       		, GI.IMG_SEQ AS CSTRT_IMG_SEQ
		       		, GI.IMG_PATH AS CSTRT_IMG_PATH
		FROM		(
					SELECT 	OB.ORD_NO
								, OD.ORD_DTL_SEQ
								, GB.GOODS_ID
								, GB.GOODS_NM
								, GB.BND_NO
								, OD.ITEM_NO
								, OD.ITEM_NM
								, OD.ORD_QTY
								, OD.CNC_QTY				/* 취소 수량 */
								, OD.RMN_ORD_QTY
								, OD.RTN_QTY	
								, OD.SALE_AMT 			/* 판매금액 */
								, GI.IMG_SEQ
					       		, GI.IMG_PATH
					FROM 	(SELECT	ORD_NO
											, ORD_ACPT_DTM
								FROM		ORDER_BASE OB
								WHERE	MBR_NO = ${mbrNo}
								AND		ORD_STAT_CD = '${@framework.common.constants.CommonConstants@ORD_STAT_20}'	/* 주문완료 */
								AND 		DATA_STAT_CD = '${@framework.common.constants.CommonConstants@DATA_STAT_01}' /* 활성건 기준 */
								AND 		ORD_ACPT_DTM BETWEEN SUBDATE(NOW(),INTERVAL #{recentSearchPeriod} MONTH) AND DATE_ADD(NOW(),INTERVAL 1 DAY)   /* 주문접수일시 : ORD_ACPT_DTM */
								AND 		ORD_NO IN (SELECT ORD_NO FROM ORDER_DETAIL OD WHERE OD.RMN_ORD_QTY - FN_GET_ORD_CLM_RTN_CPLT_QTY(OD.ORD_NO, OD.ORD_DTL_SEQ) &gt; 0 AND OD.ORD_NO = OB.ORD_NO)
								) OB
								INNER JOIN ORDER_DETAIL OD ON OB.ORD_NO = OD.ORD_NO
								INNER JOIN GOODS_BASE GB ON OD.GOODS_ID=GB.GOODS_ID
								LEFT OUTER JOIN GOODS_IMG GI ON (OD.GOODS_ID = GI.GOODS_ID AND DLGT_YN = '${@framework.common.constants.CommonConstants@COMM_YN_Y}')
					WHERE 	1=1
					 AND 		OD.RMN_ORD_QTY - FN_GET_ORD_CLM_RTN_CPLT_QTY(OD.ORD_NO, OD.ORD_DTL_SEQ) &gt; 0
					ORDER BY OB.ORD_ACPT_DTM DESC, OB.ORD_NO DESC, OD.ORD_DTL_SEQ ASC
					LIMIT 0, 3
					) OGB
					LEFT OUTER JOIN GOODS_CSTRT_INFO GCI 
									 ON 	GCI.GOODS_ID = OGB.GOODS_ID 
									 AND 	GCI.GOODS_CSTRT_GB_CD = '${@framework.common.constants.CommonConstants@GOODS_CSTRT_GB_20}'
					LEFT OUTER JOIN GOODS_BASE GB
									ON	GB.GOODS_ID = GCI.CSTRT_GOODS_ID
					LEFT OUTER JOIN GOODS_IMG GI 
									 ON GI.GOODS_ID = GCI.CSTRT_GOODS_ID 
									 AND DLGT_YN = '${@framework.common.constants.CommonConstants@COMM_YN_Y}'
	</select>


	<select id="pageOrderInfoList" resultType="biz.app.order.model.OrderDeliveryVO">
        <!--
            Query Name : order.pageOrderInfoList
            Description : Front 1:1문의 주문정보 선택 (주문번호조회)
        -->
        SELECT  /* QUERYID(order.pageOrderInfoList) */
            DISTINCT OB.ORD_NO
        FROM
            ORDER_BASE OB
            JOIN ORDER_DETAIL OD ON (OB.ORD_NO = OD.ORD_NO)
            JOIN GOODS_BASE GB ON (OD.GOODS_ID = GB.GOODS_ID)
            JOIN COMPANY_BASE CP ON (OD.COMP_NO = CP.COMP_NO)
            LEFT JOIN GOODS_IMG GI ON (OD.GOODS_ID = GI.GOODS_ID AND GI.DLGT_YN = 'Y')
        WHERE
            OB.DATA_STAT_CD = '${@framework.common.constants.CommonConstants@DATA_STAT_01}'
            AND OD.RMN_ORD_QTY - OD.RTN_QTY - FN_GET_ORDER_CLAIM_EXC_QTY(OD.ORD_NO, OD.ORD_DTL_SEQ) &gt; 0
            <if test="ordAcptDtmStart != null and ordAcptDtmStart != '' and ordAcptDtmEnd != null and ordAcptDtmEnd != ''">
            AND OB.ORD_ACPT_DTM BETWEEN #{ordAcptDtmStart} AND #{ordAcptDtmEnd} /* 주문접수일시 : ORD_ACPT_DTM */
            </if>
            <if test="mbrNo != null and mbrNo != ''">
            AND OB.MBR_NO = #{mbrNo}    /* 회원번호 */
            </if>
            <if test="ordNo != null and ordNo != ''">
            AND OB.ORD_NO = #{ordNo}    /* 주문번호 */
            </if>
            <if test='ordDtlStatCd != null and ordDtlStatCd != ""'>
            AND   OD.ORD_DTL_STAT_CD = #{ordDtlStatCd}    /* 주문상태코드 */
            </if>
        ORDER BY OB.ORD_NO DESC, OD.ORD_DTL_SEQ
        <include refid="bizCommon.pageSql" />
    </select>
    
    <select id="pageOrderInfoListCount" resultType="java.lang.Integer">
        <!--
            Query Name : order.pageOrderDeliveryListCount
            Description : Front 1:1문의 주문정보 선택 (주문번호조회 count) 
        -->
        SELECT  /* QUERYID(order.pageOrderInfoListCount) */
            COUNT(DIST.ORD_NO)
        FROM
             (SELECT
		            DISTINCT OB.ORD_NO
		        FROM
		            ORDER_BASE OB
		            JOIN ORDER_DETAIL OD ON (OB.ORD_NO = OD.ORD_NO)
		            JOIN GOODS_BASE GB ON (OD.GOODS_ID = GB.GOODS_ID)
		            JOIN COMPANY_BASE CP ON (OD.COMP_NO = CP.COMP_NO)
		            LEFT JOIN GOODS_IMG GI ON (OD.GOODS_ID = GI.GOODS_ID AND GI.DLGT_YN = 'Y')
		        WHERE
		            OB.DATA_STAT_CD = '${@framework.common.constants.CommonConstants@DATA_STAT_01}'
		            AND OD.RMN_ORD_QTY - OD.RTN_QTY - FN_GET_ORDER_CLAIM_EXC_QTY(OD.ORD_NO, OD.ORD_DTL_SEQ) &gt; 0
		            <if test="ordAcptDtmStart != null and ordAcptDtmStart != '' and ordAcptDtmEnd != null and ordAcptDtmEnd != ''">
		            AND OB.ORD_ACPT_DTM BETWEEN #{ordAcptDtmStart} AND #{ordAcptDtmEnd} /* 주문접수일시 : ORD_ACPT_DTM */
		            </if>
		            <if test="mbrNo != null and mbrNo != ''">
		            AND OB.MBR_NO = #{mbrNo}    /* 회원번호 */
		            </if>
		            <if test="ordNo != null and ordNo != ''">
		            AND OB.ORD_NO = #{ordNo}    /* 주문번호 */
		            </if>
		            <if test='ordDtlStatCd != null and ordDtlStatCd != ""'>
		            AND   OD.ORD_DTL_STAT_CD = #{ordDtlStatCd}    /* 주문상태코드 */
		            </if>
             ) DIST
    </select>
    
	<select id="listOrderProdList" parameterType="java.util.Map" resultMap="orderListMap">
        <!--
            Query Name : order.listOrderProdList
            Description : Front 1:1문의 주문정보 선택 (주문번호해당상품조회)
        -->
        SELECT  /* QUERYID(order.listOrderProdList) */
            OD.ORD_NO,
            OD.ORD_DTL_SEQ,
            <!-- IF(OD.ORD_DTL_STAT_CD IN ('${@framework.common.constants.CommonConstants@ORD_DTL_STAT_130}', '${@framework.common.constants.CommonConstants@ORD_DTL_STAT_140}', '${@framework.common.constants.CommonConstants@ORD_DTL_STAT_150}'), '${@framework.common.constants.CommonConstants@ORD_DTL_STAT_140}', OD.ORD_DTL_STAT_CD) AS ORD_DTL_STAT_CD, -->
            OD.ORD_DTL_STAT_CD,
            OD.GOODS_ID,
            OD.GOODS_NM,
            OD.ITEM_NO,
            OD.ITEM_NM,
            OD.ORD_QTY,
            OD.CNC_QTY,
            OD.RTN_QTY,
            OD.RMN_ORD_QTY as RMN_ORD_QTY,
            OD.RMN_ORD_QTY -  FN_GET_ORD_CLM_RTN_CPLT_QTY(OD.ORD_NO, OD.ORD_DTL_SEQ) AS VLD_ORD_QTY /* 유효 주문 수량 */,
            FN_GET_ORDER_CLAIM_EXC_QTY(OD.ORD_NO, OD.ORD_DTL_SEQ)  AS CLM_EXC_ING_QTY,	/* 클레임 진행 수량 */
            FN_GET_ORDER_CLAIM_ING_RTN_YN(OD.ORD_NO, 0)  AS ALL_CLAIM_ING_RTN_YN,	/* 반품 진행 중 여부 */
            OD.SALE_AMT,
            OD.PAY_AMT,
            (SELECT SUM(IF(PB.PAY_GB_CD = '10', PB.PAY_AMT, -PB.PAY_AMT)) FROM PAY_BASE PB WHERE OB.ORD_NO = PB.ORD_NO AND PB.CNC_YN='N') PAY_AMT_TOTAL,
            OD.DLVRC_NO,
            OD.ORD_DLVRA_NO,
            OD.DLVR_NO,
            CASE WHEN OD.DLVR_NO &lt; 0 AND ADDDATE((SELECT DLVR_CPLT_DTM FROM DELIVERY WHERE DLVR_NO = OD.DLVR_NO),7) &lt; SYSDATE() THEN 'N' ELSE 'Y' END AS COMPARE_DTM_YN,
            OD.COMP_NO,
            CP.COMP_NM,
            OD.GOODS_ESTM_REG_YN,
            OB.ORD_ACPT_DTM,
            OB.ORD_CPLT_DTM,
            OB.ST_ID,
            OB.MBR_NO,
            OB.ORD_DTL_CNT,
            OB.ORD_STAT_CD,
            OB.ORD_MDA_CD,
            (SELECT BND_NM_KO FROM BRAND_BASE WHERE BND_NO = GB.BND_NO) AS BND_NM_KO,
            GI.IMG_SEQ,
            GI.IMG_PATH,
            GI.RVS_IMG_PATH,
            GB.ITEM_MNG_YN
        FROM
            ORDER_BASE OB
            JOIN ORDER_DETAIL OD ON (OB.ORD_NO = OD.ORD_NO)
            JOIN GOODS_BASE GB ON (OD.GOODS_ID = GB.GOODS_ID)
            JOIN COMPANY_BASE CP ON (OD.COMP_NO = CP.COMP_NO)
            LEFT JOIN GOODS_IMG GI ON (OD.GOODS_ID = GI.GOODS_ID AND GI.DLGT_YN = 'Y')
        WHERE
            OB.DATA_STAT_CD = '${@framework.common.constants.CommonConstants@DATA_STAT_01}'
            AND OD.RMN_ORD_QTY - OD.RTN_QTY - FN_GET_ORDER_CLAIM_EXC_QTY(OD.ORD_NO, OD.ORD_DTL_SEQ) &gt; 0
            <if test="ordAcptDtmStart != null and ordAcptDtmStart != '' and ordAcptDtmEnd != null and ordAcptDtmEnd != ''">
            AND OB.ORD_ACPT_DTM BETWEEN #{ordAcptDtmStart} AND #{ordAcptDtmEnd} /* 주문접수일시 : ORD_ACPT_DTM */
            </if>
            <if test="mbrNo != null and mbrNo != ''">
            AND OB.MBR_NO = #{mbrNo}    /* 회원번호 */
            </if>
            <if test="arrOrdNo != null">
				<foreach collection="arrOrdNo" item="item" separator="," open="AND OB.ORD_NO IN (" close=" ) " >
					#{item }
				</foreach>
			</if>
            <if test='ordDtlStatCd != null and ordDtlStatCd != ""'>
            AND OD.ORD_DTL_STAT_CD = #{ordDtlStatCd}    /* 주문상태코드 */
            </if>
        ORDER BY OB.ORD_NO DESC, OD.ORD_DTL_SEQ
    </select>

	<select id="listReturnDetail" resultMap="orderListMap">
        <!--
            Query Name : order.listOrderDetailList
            Description : Front 마이페이지 반품/교환 조회
        -->
		SELECT /* QUERYID(order.listReturnDetail) */
		    ORD_NO,
		    ST_ID,
		    ORD_DTL_SEQ,
		    GOODS_ID,
		    PAK_GOODS_ID,
		    <!-- GOODS_NM, -->
		    SALE_AMT,
		    PAY_AMT,
		    ORD_QTY,
		    RTN_QTY,
		    RMN_ORD_QTY,
		    CLM_EXC_ING_QTY	/* 클레임 진행 수량 */,
		    CLM_EXC_CNT AS CLM_EXC_QTY,
		    ORD_DTL_CNT,
		    ORD_ACPT_DTM,
		    PAY_MEANS_CD	/* 주 결제 수단 */,
		    COMP_NO,
		    COMP_NM,
		    BND_NM_KO /* 브랜드명 국문 */,
		    IMG_SEQ,
		    IMG_PATH,
		    RVS_IMG_PATH,
		    DLVRC_PLC_NO,
		    ADD_SALE_AMT 	/* 추가 판매 금액 */,
		    ORD_NM,
		    ORDR_EMAIL,
		    ORDR_MOBILE,
		    PRMT_DC_AMT		/* 프로모션 할인 금액 */,
		    ITEM_MNG_YN,
		    RTN_PSB_YN,
		    CLM_YN,
		    CBT_CLM_NO,
		    <!-- CASE 
		        WHEN CLM_YN = '${@framework.common.constants.CommonConstants@COMM_YN_Y}'
		            THEN ( SELECT CDT.ITEM_NM FROM CLAIM_DETAIL CDT WHERE CDT.CLM_NO = A.CBT_CLM_NO ORDER BY CDT.CLM_DTL_SEQ DESC LIMIT 1)
					ELSE A.ITEM_NM
		        END AS ITEM_NM,
		    CASE 
		        WHEN CLM_YN = '${@framework.common.constants.CommonConstants@COMM_YN_Y}'
		            THEN ( SELECT CDT.ITEM_NO FROM CLAIM_DETAIL CDT WHERE CDT.CLM_NO = A.CBT_CLM_NO ORDER BY CDT.CLM_DTL_SEQ DESC LIMIT 1)
					ELSE A.ITEM_NO
		        END AS ITEM_NO -->
		    CASE	
		    	WHEN ORD_QTY &gt; (CLM_CNC_CNT + CLM_RTN_CNT + CLM_EXC_CNT)
		    		THEN A.ITEM_NM
		    	ELSE ( SELECT CDT1.ITEM_NM FROM CLAIM_DETAIL CDT1 WHERE CDT1.CLM_NO = A.CBT_CLM_NO ORDER BY CDT1.CLM_DTL_SEQ DESC LIMIT 1)
		    END AS ITEM_NM,
		    CASE
		    	WHEN ORD_QTY &gt; (CLM_CNC_CNT + CLM_RTN_CNT + CLM_EXC_CNT)
		            THEN A.ITEM_NO
				ELSE ( SELECT CDT2.ITEM_NO FROM CLAIM_DETAIL CDT2 WHERE CDT2.CLM_NO = A.CBT_CLM_NO ORDER BY CDT2.CLM_DTL_SEQ DESC LIMIT 1)
		    END AS ITEM_NO
		    , CASE WHEN A.PAK_GOODS_ID IS null THEN GOODS_NM
				   ELSE PAK_GOODS_NM
			   END AS GOODS_NM     /* 상품 명 */
		    , CASE WHEN A.GOODS_CSTRT_TP_CD = 'PAK' THEN A.GOODS_NM
				   ELSE NULL
			   END AS OPT_GOODS_NM		  
			, PAK_ITEM_NM
			, MKI_GOODS_YN
	        , MKI_GOODS_OPT_CONTENT	
	        , FN_GET_ORDER_CLAIM_ING_YN(ORD_NO,  ORD_DTL_SEQ) AS CLM_ING_YN /* 클레임 진행 여부 */
		FROM (
		    SELECT
			    DISTINCT OB.ORD_NO
			    , OB.ST_ID
			    , OD.ORD_DTL_SEQ
			    , OD.GOODS_ID
			    , OD.PAK_GOODS_ID
			    , GB.GOODS_NM
			    , OD.ITEM_NO
			    , OD.ITEM_NM
			    , OD.SALE_AMT
			    , OD.PAY_AMT
			    , OD.ORD_QTY
			    , OD.RTN_QTY
			    , OD.RMN_ORD_QTY
			    , FN_GET_ORDER_CLAIM_EXC_QTY(OD.ORD_NO, OD.ORD_DTL_SEQ) AS CLM_EXC_ING_QTY	/* 클레임 진행 수량 */
			    , OB.ORD_DTL_CNT
			    , OB.ORD_ACPT_DTM
				, FN_GET_ORDER_PAY_MEANS_CD(OD.ORD_NO) AS PAY_MEANS_CD	/* 주 결제 수단 */
			    , OD.COMP_NO
			    , CP.COMP_NM
	    		, FN_GET_BRAND_NAME_KO(GB.BND_NO) AS BND_NM_KO /* 브랜드명 국문 */
			    , GI.IMG_SEQ
			    , GI.IMG_PATH
			    , GI.RVS_IMG_PATH
			    , GB.DLVRC_PLC_NO
			    , IT.ADD_SALE_AMT 	/* 추가 판매 금액 */
			    , OB.ORD_NM
			    , OB.ORDR_EMAIL
			    , OB.ORDR_MOBILE
				, FN_GET_ORDER_DTL_PRMT_DC_AMT(OD.ORD_NO, OD.ORD_DTL_SEQ) AS PRMT_DC_AMT		/* 프로모션 할인 금액 */
				, GB.ITEM_MNG_YN
				, GB.RTN_PSB_YN
				, (SELECT IF((SELECT CBT.CLM_NO FROM CLAIM_BASE CBT JOIN CLAIM_DETAIL CDT ON(CBT.CLM_NO = CDT.CLM_NO) WHERE CDT.ORD_NO = #{ordNo} AND CDT.ORD_DTL_SEQ = #{ordDtlSeq} AND CBT.CLM_TP_CD = '${@framework.common.constants.CommonConstants@CLM_TP_30}' AND CBT.CLM_STAT_CD != '40' ORDER BY
	                                    CDT.CLM_CPLT_DTM DESC, CBT.CLM_NO DESC LIMIT 1 ) IS NULL, 'N', 'Y') FROM DUAL) AS CLM_YN
				, (SELECT IFNULL((SELECT CBT.CLM_NO FROM CLAIM_BASE CBT JOIN CLAIM_DETAIL CDT ON(CBT.CLM_NO = CDT.CLM_NO) WHERE CDT.ORD_NO = #{ordNo} AND CDT.ORD_DTL_SEQ = #{ordDtlSeq} AND CBT.CLM_TP_CD = '${@framework.common.constants.CommonConstants@CLM_TP_30}' AND CBT.CLM_STAT_CD != '40' ORDER BY
	                                    CDT.CLM_CPLT_DTM DESC, CBT.CLM_NO DESC LIMIT 1), '0') FROM DUAL) AS CBT_CLM_NO
	            , (SELECT 
					IFNULL(SUM(CDT.CLM_QTY), 0)				
				FROM CLAIM_BASE CBT 
				JOIN claim_detail CDT ON(CBT.CLM_NO = CDT.CLM_NO) 
				WHERE CDT.ORD_NO = OB.ORD_NO
				AND CDT.ORD_DTL_SEQ = OD.ORD_DTL_SEQ
				AND CBT.CLM_TP_CD = '10' 
				AND CBT.CLM_STAT_CD != '40'
				
				) AS CLM_CNC_CNT,
				
				(SELECT 
					IFNULL(SUM(CDT.CLM_QTY), 0)
				FROM CLAIM_BASE CBT 
				JOIN claim_detail CDT ON(CBT.CLM_NO = CDT.CLM_NO) 
				WHERE CDT.ORD_NO = OB.ORD_NO
				AND CDT.ORD_DTL_SEQ = OD.ORD_DTL_SEQ 
				AND CBT.CLM_TP_CD = '20' 
				AND CBT.CLM_STAT_CD != '40'
				
				) AS CLM_RTN_CNT,
				
				(SELECT 
					IFNULL(SUM(CDT.CLM_QTY), 0)
				FROM CLAIM_BASE CBT 
				JOIN claim_detail CDT ON(CBT.CLM_NO = CDT.CLM_NO) 
				WHERE CDT.ORD_NO = OB.ORD_NO
				AND CDT.ORD_DTL_SEQ = OD.ORD_DTL_SEQ
				AND CBT.CLM_TP_CD = '30' 
				AND CBT.CLM_STAT_CD != '40'
				
				AND CDT.CLM_DTL_STAT_CD LIKE '4%'
				
				) AS CLM_EXC_CNT
				,CASE WHEN OD.PAK_GOODS_ID is NOT null 
					THEN
				    (
				   	SELECT GROUP_CONCAT(CONCAT_WS(' : ', GOG.SHOW_NM , AV.ATTR_VAL) ORDER BY GOG.DISP_PRIOR_RANK SEPARATOR '|')  
					  FROM GOODS_BASE GB,
						   ITEM IT,
						   GOODS_OPT_GRP GOG,
						   GOODS_ATTRIBUTE GA,
						   ITEM_ATTRIBUTE_VALUE IAV,
						   ATTRIBUTE_VALUE AV
				     WHERE GB.GOODS_ID = IT.GOODS_ID 
					   AND GA.GOODS_ID = GB.GOODS_ID
					   AND GA.ATTR_NO = AV.ATTR_NO 
					   AND GOG.ATTR_NO = GA.ATTR_NO
					   AND GOG.ATTR_NO = AV.ATTR_NO
					   AND IAV.ITEM_NO = IT.ITEM_NO 
					   AND IAV.ATTR_NO = AV.ATTR_NO
					   AND AV.ATTR_VAL_NO = IAV.ATTR_VAL_NO
					   AND GB.GOODS_ID = OD.GOODS_ID
					   AND GOG.GOODS_ID = OD.PAK_GOODS_ID
				   )
			   END AS PAK_ITEM_NM  
			    , (SELECT GOODS_NM FROM GOODS_BASE WHERE GOODS_ID = OD.PAK_GOODS_ID) AS PAK_GOODS_NM
			    , CASE WHEN OD.PAK_GOODS_ID IS null THEN GB.GOODS_CSTRT_TP_CD
					   ELSE (SELECT GOODS_CSTRT_TP_CD FROM GOODS_BASE WHERE GOODS_ID = OD.PAK_GOODS_ID)
				  END AS GOODS_CSTRT_TP_CD
				, OD.MKI_GOODS_YN
		        , OD.MKI_GOODS_OPT_CONTENT  
			FROM
			    ORDER_BASE OB
			    JOIN ORDER_DETAIL OD ON (OB.ORD_NO = OD.ORD_NO)
			    JOIN COMPANY_BASE CP ON (OD.COMP_NO = CP.COMP_NO)
			    JOIN PAY_BASE PB ON (OB.ORD_NO = PB.ORD_NO)
			    LEFT JOIN CLAIM_BASE CB ON (OB.ORD_NO = CB.ORD_NO AND CB.CLM_TP_CD IN ('${@framework.common.constants.CommonConstants@CLM_TP_10}', '${@framework.common.constants.CommonConstants@CLM_TP_20}', '${@framework.common.constants.CommonConstants@CLM_TP_30}') AND CB.CLM_STAT_CD IN ('${@framework.common.constants.CommonConstants@CLM_STAT_10}', '${@framework.common.constants.CommonConstants@CLM_STAT_20}'))
			    LEFT JOIN CLAIM_DETAIL CD ON (CB.CLM_NO = CD.CLM_NO AND OD.ORD_NO = CD.ORD_NO AND OD.ORD_DTL_SEQ = CD.ORD_DTL_SEQ)
			    LEFT JOIN GOODS_IMG GI ON (OD.GOODS_ID = GI.GOODS_ID AND GI.DLGT_YN = '${@framework.common.constants.CommonConstants@COMM_YN_Y}')
				INNER JOIN GOODS_BASE GB ON GB.GOODS_ID = OD.GOODS_ID
				INNER JOIN ITEM IT ON IT.ITEM_NO = OD.ITEM_NO
			WHERE
			    OB.DATA_STAT_CD = '${@framework.common.constants.CommonConstants@DATA_STAT_01}'
			    AND OB.ORD_STAT_CD = '${@framework.common.constants.CommonConstants@ORD_STAT_20}'
			    AND OD.ORD_DTL_STAT_CD IN ('${@framework.common.constants.CommonConstants@ORD_DTL_STAT_160}')
			    AND (OD.RMN_ORD_QTY - IF ( CD.CLM_QTY IS NULL, 0, CD.CLM_QTY ) ) > 0 AND PB.ORD_CLM_GB_CD = '${@framework.common.constants.CommonConstants@ORD_CLM_GB_10}'
	            AND PB.PAY_GB_CD = '${@framework.common.constants.CommonConstants@PAY_GB_10}'
	            AND PB.PAY_STAT_CD = '${@framework.common.constants.CommonConstants@PAY_STAT_01}'
	            AND OB.ORD_NO = #{ordNo}
	            <!--<if test='ordDtlSeq != null'>
			    	AND OD.ORD_DTL_SEQ = #{ordDtlSeq}
				</if>-->
				<if test='rtnPsbYn != null and rtnPsbYn != ""'>
			    	AND GB.RTN_PSB_YN = #{rtnPsbYn}
				</if> 
		) A
    </select>

	<insert id="insertDefaultPayMethod" parameterType="biz.app.pay.model.PrsnPaySaveInfoPO" >
		<!--
			Query Name : order.insertDefaultPayMethod
			Description : 기본결제수단저장
		-->
		INSERT INTO PRSN_PAY_SAVE_INFO (
			MBR_NO
			, DFT_PAY_MEANS_SAVE_YN
			, PAY_MEANS_CD
			, CARDC_CD
			, PRSN_CARD_BILL_NO
			, SYS_REGR_NO		/* 시스템 등록자 번호 */
			, SYS_REG_DTM		/* 시스템 등록 일시 */
			, SYS_UPDR_NO		/* 시스템 수정자 번호 */
			, SYS_UPD_DTM		/* 시스템 수정 일시 */
		) VALUES (
			#{mbrNo}
			, 'Y'
			, #{payMeansCd}
			, #{cardcCd}
			, #{prsnCardBillNo}
			, #{sysRegrNo}		/* 시스템 등록자 번호 */
			, NOW()				/* 시스템 등록 일시 */
			, #{sysUpdrNo}		/* 시스템 수정자 번호 */
			, NOW()				/* 시스템 수정 일시 */
		) ON DUPLICATE KEY UPDATE
			PAY_MEANS_CD = #{payMeansCd}
			, CARDC_CD = #{cardcCd}
			, PRSN_CARD_BILL_NO = #{prsnCardBillNo}
			, SYS_UPDR_NO = #{sysUpdrNo}
			, SYS_UPD_DTM = NOW()
	</insert>

	<select id="getCashReceiptSaveInfo" parameterType="Long" resultType="biz.app.pay.model.PrsnPaySaveInfoVO">
		SELECT
			MBR_NO,
			CASH_RCT_SAVE_YN,
			CASH_RCT_GB_TYPE,
			CASH_RCT_GB_CD,
			CASH_RCT_GB_VAL
		FROM
			PRSN_PAY_SAVE_INFO
		WHERE
			MBR_NO = #{mbrNo}
	</select>
	<insert id="insertCashReceiptSaveInfo" parameterType="biz.app.pay.model.PrsnPaySaveInfoPO" >
		INSERT INTO PRSN_PAY_SAVE_INFO (
			MBR_NO
			, CASH_RCT_SAVE_YN
			, CASH_RCT_GB_TYPE
			, CASH_RCT_GB_CD
			, CASH_RCT_GB_VAL
			, SYS_REGR_NO		/* 시스템 등록자 번호 */
			, SYS_REG_DTM		/* 시스템 등록 일시 */
			, SYS_UPDR_NO		/* 시스템 수정자 번호 */
			, SYS_UPD_DTM		/* 시스템 수정 일시 */
		) VALUES (
			#{mbrNo}
			, #{cashRctSaveYn}
			, #{cashRctGbType}
			, #{cashRctGbCd}
			, #{cashRctGbVal}
			, #{sysRegrNo}		/* 시스템 등록자 번호 */
			, NOW()				/* 시스템 등록 일시 */
			, #{sysUpdrNo}		/* 시스템 수정자 번호 */
			, NOW()				/* 시스템 수정 일시 */
		) ON DUPLICATE KEY UPDATE
			CASH_RCT_SAVE_YN = #{cashRctSaveYn}
			, CASH_RCT_GB_TYPE = #{cashRctGbType}
			, CASH_RCT_GB_CD = #{cashRctGbCd}
			, CASH_RCT_GB_VAL = #{cashRctGbVal}
			, SYS_UPDR_NO = #{sysUpdrNo}
			, SYS_UPD_DTM = NOW()
	</insert>
	<select id="getCardcInstmntInfo" resultType="biz.app.order.model.CardcInstmntInfoVO">
		SELECT
			CARDC_CD,
			MONTH,
			INSTMNT_TP_CD,
			MIN_AMT
		FROM
			CARDC_INSTMNT_INFO
		WHERE
			CARDC_CD = #{cardcCd}
		AND
		    MIN_AMT <![CDATA[ <= ]]> #{minAmt}
		ORDER BY MONTH ASC
	</select>

	<insert id="insertRegistBillCardTemp" parameterType="biz.app.pay.model.PrsnCardBillingInfoPO" useGeneratedKeys="true" keyProperty="prsnCardBillNo">

		<selectKey keyProperty="prsnCardBillNo" resultType="Integer" order="BEFORE">
			SELECT
				FN_GET_SEQ('${@framework.common.constants.CommonConstants@SEQUENCE_PRSN_CARD_BILLING_INFO_SEQ}')
			FROM DUAL
		</selectKey>
		INSERT INTO PRSN_CARD_BILLING_INFO (
			PRSN_CARD_BILL_NO
			, MBR_NO
			, CARD_NO
			, PG_MOID
			, PG_DEL_YN
			, USE_YN
			, SYS_REGR_NO
			, SYS_REG_DTM
			, SYS_UPDR_NO
			, SYS_UPD_DTM
		) VALUES (
			#{prsnCardBillNo}
			, #{mbrNo}
			, #{cardNo}
			, #{pgMoid}
			, 'N'
			, 'N'
			, #{sysRegrNo}
			, NOW()
			, #{sysUpdrNo}
			, NOW()
		)
	</insert>

	<update id="updateRegistBillCard">
		<!--
			Query Name	: order.updateRegistBillCard
			Description	: 빌링정보 update
		-->
		UPDATE PRSN_CARD_BILLING_INFO	/* QUERYID(order.updateRegistBillCard) */
		SET
			SYS_UPDR_NO		= #{sysUpdrNo}				/* 시스템 수정자 번호 */
			, SYS_UPD_DTM	= NOW()						/* 시스템 수정 일시 */
			, USE_YN 		= 'Y'
			, CARDC_NM 		= (SELECT CD.DTL_NM FROM CODE_DETAIL CD WHERE CD.GRP_CD = '${@framework.common.constants.CommonConstants@CARDC}' AND CD.DTL_CD = #{pgCardCode})
			, PG_TID		= #{pgTid}
			, PG_BID		= #{pgBid}
			, PG_AUTH_DATE			= #{pgAuthDate}
			, PG_CARD_CODE			= #{pgCardCode}
			, PG_CARD_NAME			= #{pgCardName}
			, PG_CARD_CL			= #{pgCardCl}
			, PG_ACQU_CARD_CODE		= #{pgAcquCardCode}
			, PG_ACQU_CARD_NAME		= #{pgAcquCardName}
		WHERE
			PRSN_CARD_BILL_NO = #{prsnCardBillNo}
		AND
			PG_MOID = #{pgMoid}
		AND
			MBR_NO = #{mbrNo}
	</update>

	<select id="getBillingKey" resultType="String">
		SELECT
			PG_BID
		FROM
			PRSN_CARD_BILLING_INFO
		WHERE
			PRSN_CARD_BILL_NO = #{prsnCardBillNo}
	</select>

	<resultMap type="biz.app.pay.model.PrsnCardBillingInfoVO" id="prsnCardBillingInfoVoMap" >
		<result property="simpScrNo" column="SIMP_SCR_NO" typeHandler="biz.common.typehandler.CryptoTypeHandlerForEzPay" />
		<result property="billInputFailCnt" column="BILL_INPUT_FAIL_CNT"/>
	</resultMap>

	<select id="getBillInfo" resultMap="prsnCardBillingInfoVoMap">
		SELECT
			SIMP_SCR_NO
			, BILL_INPUT_FAIL_CNT
		FROM
			MEMBER_BASE
		WHERE
			MBR_NO = #{mbrNo}
	</select>

	<update id="updateInputFailCnt">
		UPDATE MEMBER_BASE SET
			<choose>
				<when test='resetYn eq "Y"'>
					BILL_INPUT_FAIL_CNT = 0
				</when>
				<otherwise>
					BILL_INPUT_FAIL_CNT = BILL_INPUT_FAIL_CNT + 1
				</otherwise>
			</choose>
			, SYS_UPDR_NO	= #{sysUpdrNo}				/* 시스템 수정자 번호 */
			, SYS_UPD_DTM	= NOW()						/* 시스템 수정 일시 */
		WHERE MBR_NO = #{mbrNo}
	</update>

	<update id="updateBillPassword" parameterType="biz.app.pay.model.PrsnCardBillingInfoPO">
		<!--
			Query Name	: order.updateBillPassword
			Description	: 빌링정보 update
		-->
		UPDATE MEMBER_BASE	/* QUERYID(order.updateBillPassword) */
		SET
			SYS_UPDR_NO		= #{sysUpdrNo}				/* 시스템 수정자 번호 */
			, SYS_UPD_DTM	= NOW()						/* 시스템 수정 일시 */
			, SIMP_SCR_NO	= #{simpScrNo, jdbcType=VARCHAR, typeHandler=biz.common.typehandler.CryptoTypeHandlerForEzPay}
			, BILL_INPUT_FAIL_CNT = 0
		WHERE
			MBR_NO = #{mbrNo}
	</update>

	<select id="getBillInputFailCnt" resultType="Integer">
		SELECT
			BILL_INPUT_FAIL_CNT
		FROM
			MEMBER_BASE
		WHERE
			MBR_NO = #{mbrNo}
	</select>
	
	<select id="listOrderMsgInfo" resultType="biz.app.order.model.OrderMsgVO" >
		<!--
			Query Name	: order.listOrderMsgInfo
			Description	: 보낼 메세지 정보 조회
		-->
		SELECT
			OB.MBR_NO
			, OB.ORD_NM
			, OB.ORDR_MOBILE
			, OB.ORD_NO
			, OB.ORD_ACPT_DTM
			, OB.ORD_CPLT_DTM
			, PB.PAY_AMT
			, FN_GET_CODE_NAME("BANK", PB.BANK_CD, "") AS BANK_NM
			, PB.PAY_MEANS_NM
			, PB.PAY_MEANS_CD
			, PB.ACCT_NO
			, PB.DPST_SCHD_DT
            , PB.PAY_STAT_CD
			, DLV.ROAD_ADDR
			<choose>
				<when test="msgType.equals('default')">
					, ODD.GOODS_NM
					, (SELECT COUNT(1) FROM ORDER_DETAIL ST1 WHERE ST1.ORD_NO = OB.ORD_NO ) AS EXTRA_ORD_CNT
					, (SELECT GROUP_CONCAT(DISTINCT A4.DTL_NM)
		 			     FROM ORD_DTL_CSTRT A1
		 			     JOIN ORD_DTL_CSTRT_DLVR_MAP A2 ON A2.ORD_DTL_CSTRT_NO = A1.ORD_DTL_CSTRT_NO
		 			     JOIN DELIVERY A3 ON A3.DLVR_NO = A2.DLVR_NO
		 			     JOIN CODE_DETAIL A4 ON A4.GRP_CD = 'HDC' AND A4.DTL_CD = A3.HDC_CD 
		 			    WHERE A1.ORD_NO = ODD.ORD_NO AND A1.ORD_DTL_SEQ = ODD.ORD_DTL_SEQ 
		 			  ) AS HDC_CD_NM /* 택배사 */
		 			, (SELECT GROUP_CONCAT(DISTINCT A3.INV_NO)
		 			     FROM ORD_DTL_CSTRT A1
		 			     JOIN ORD_DTL_CSTRT_DLVR_MAP A2 ON A2.ORD_DTL_CSTRT_NO = A1.ORD_DTL_CSTRT_NO
		 			     JOIN DELIVERY A3 ON A3.DLVR_NO = A2.DLVR_NO
		 			    WHERE A1.ORD_NO = ODD.ORD_NO AND A1.ORD_DTL_SEQ = ODD.ORD_DTL_SEQ 
		 			  ) AS INV_NO_NM /* 송장번호 */
				</when>	  
				<when test="msgType.equals('dlv')">
					, ODD.GOODS_NM
					, (SELECT GROUP_CONCAT(DISTINCT A4.DTL_NM)
		 			     FROM ORD_DTL_CSTRT A1
		 			     JOIN ORD_DTL_CSTRT_DLVR_MAP A2 ON A2.ORD_DTL_CSTRT_NO = A1.ORD_DTL_CSTRT_NO
		 			     JOIN DELIVERY A3 ON A3.DLVR_NO = A2.DLVR_NO
		 			     JOIN CODE_DETAIL A4 ON A4.GRP_CD = 'HDC' AND A4.DTL_CD = A3.HDC_CD 
		 			    WHERE A1.ORD_NO = ODD.ORD_NO AND A1.ORD_DTL_SEQ = ODD.ORD_DTL_SEQ 
		 			  ) AS HDC_CD_NM /* 택배사 */
		 		<if test="ordDtlSeq != null">
		 			, (SELECT COUNT(1) FROM ORDER_DETAIL ST1 WHERE ST1.ORD_NO = OB.ORD_NO AND ODD.ORD_DTL_SEQ = ST1.ORD_DTL_SEQ ) AS EXTRA_ORD_CNT
		 			, (SELECT GROUP_CONCAT(DISTINCT A3.INV_NO)
		 			     FROM ORD_DTL_CSTRT A1
		 			     JOIN ORD_DTL_CSTRT_DLVR_MAP A2 ON A2.ORD_DTL_CSTRT_NO = A1.ORD_DTL_CSTRT_NO
		 			     JOIN DELIVERY A3 ON A3.DLVR_NO = A2.DLVR_NO
		 			    WHERE A1.ORD_NO = ODD.ORD_NO AND A1.ORD_DTL_SEQ = ODD.ORD_DTL_SEQ 
		 			  ) AS INV_NO_NM /* 송장번호 */
		 		</if>
		 		<if test="arrOrdDtlSeq != null">
		 			, (SELECT COUNT(1)
						FROM ORD_DTL_CSTRT A1
				 		JOIN ORD_DTL_CSTRT_DLVR_MAP A2 ON A2.ORD_DTL_CSTRT_NO = A1.ORD_DTL_CSTRT_NO
				 		JOIN DELIVERY A3 ON A3.DLVR_NO = A2.DLVR_NO
				 	   WHERE A3.INV_NO = DV.INV_NO AND A1.ORD_NO = ODD.ORD_NO
					) AS EXTRA_ORD_CNT
		 			, DV.INV_NO AS INV_NO_NM /* 송장번호 */
		 		</if>
				</when>
				<when test="msgType.equals('clm')">
					, ODD.GOODS_NM
					, ( SELECT COUNT(1) from CLAIM_DETAIL CD WHERE CLM_NO = #{clmNo} AND CLM_DTL_STAT_CD != '${@framework.common.constants.CommonConstants@CLM_DTL_STAT_250}' AND CLM_DTL_TP_CD != '${@framework.common.constants.CommonConstants@CLM_DTL_TP_40}') AS EXTRA_ORD_CNT 
					, CD.CLM_NO
					, CB.ACPT_DTM AS CLM_ACPT_DTM
					, PBC.PAY_AMT AS CLM_PAY_AMT
					, DLVRC.ROAD_ADDR AS CLM_RTNA_ROAD_ADDR 
					, DLVC.ROAD_ADDR AS CLM_ROAD_ADDR
				</when>
			</choose>
			, now() &lt;= DATE_ADD(OB.SYS_REG_DTM, INTERVAL 3 DAY) AS IS_ORDER_DTM_CHECK
		FROM ORDER_BASE OB
			<choose>
				<when test="msgType.equals('default')">
					JOIN ORDER_DETAIL ODD ON (OB.ORD_NO = ODD.ORD_NO AND ORD_DTL_SEQ = 1)
				</when>
				<when test="msgType.equals('dlv')">
					JOIN ORDER_DETAIL ODD ON (OB.ORD_NO = ODD.ORD_NO)
					<if test="arrOrdDtlSeq != null">
						LEFT JOIN (
							SELECT 
								A1.ORD_NO
								, A1.ORD_DTL_SEQ
								, A3.DLVR_NO 
							FROM ORD_DTL_CSTRT A1
			 			    JOIN ORD_DTL_CSTRT_DLVR_MAP A2 ON A2.ORD_DTL_CSTRT_NO = A1.ORD_DTL_CSTRT_NO
			 			    JOIN DELIVERY A3 ON A3.DLVR_NO = A2.DLVR_NO
						) ODC ON (ODC.ORD_NO = OB.ORD_NO and ODC.ORD_DTL_SEQ = ODD.ORD_DTL_SEQ)
						INNER JOIN (
							SELECT 
								D1.INV_NO
								, D1.DLVR_NO 
							FROM DELIVERY D1
						    WHERE 1=1
								AND D1.DLVR_NO IN (
						      	SELECT
						      		DLVR_NO 
								FROM ORD_DTL_CSTRT_DLVR_MAP ODCDM 
								WHERE ODCDM.ORD_DTL_CSTRT_NO IN (
									SELECT
										ORD_DTL_CSTRT_NO  
									FROM ORD_DTL_CSTRT ODC2 
								    WHERE ODC2.ORD_NO = #{ordNo}
								    	<foreach collection="arrOrdDtlSeq" item="ordDtlSeq" separator="," open="AND ODC2.ORD_DTL_SEQ IN (" close=")">
											#{ordDtlSeq}
										</foreach>
								)
							)
							AND D1.INV_NO IS NOT NULL
						) DV ON (ODC.DLVR_NO = DV.DLVR_NO)	
					</if>
				</when>
				<when test="msgType.equals('clm')">	
					JOIN (
						SELECT
							T1.CLM_NO
							, T1.ORD_NO
							, T1.CLM_DTL_TP_CD
							, T1.ORD_DTL_SEQ 
							, T1.RTRNA_NO
							, T1.DLVRA_NO
						FROM CLAIM_DETAIL T1 
							WHERE 1=1
							AND T1.CLM_DTL_STAT_CD != '${@framework.common.constants.CommonConstants@CLM_DTL_STAT_250}'
							AND T1.CLM_DTL_TP_CD != '${@framework.common.constants.CommonConstants@CLM_DTL_TP_40}'
							AND ORD_NO = #{ordNo}
                        	LIMIT 1
                    ) CD ON CD.ORD_NO = OB.ORD_NO
					JOIN CLAIM_BASE CB ON (CB.ORD_NO = OB.ORD_NO AND CB.CLM_NO = CD.CLM_NO)
					JOIN ORDER_DETAIL ODD ON (OB.ORD_NO = ODD.ORD_NO AND CD.ORD_DTL_SEQ = ODD.ORD_DTL_SEQ)
					LEFT JOIN
						(SELECT T2.PAY_AMT
		                    , T2.PAY_MEANS_NM
		                    , T1.PAY_MEANS_CD
		                    , T1.ACCT_NO
		                    , T1.DPST_SCHD_DT
		                    , T1.PAY_STAT_CD
		                    , T1.BANK_CD
		                    , T1.ORD_NO
		                    , T1.CLM_NO
		                    , T1.PAY_GB_CD
		                from ( 
		                	SELECT
			                    FN_GET_ORDER_PAY_AMT(PBT.ORD_NO) AS PAY_AMT
			                    , GROUP_CONCAT(FN_GET_CODE_NAME("PAY_MEANS",PBT.PAY_MEANS_CD, "")) AS PAY_MEANS_NM
			                    , ORD_NO
			                FROM PAY_BASE PBT
			                WHERE 1=1 
			                AND PBT.PAY_GB_CD = '${@framework.common.constants.CommonConstants@PAY_GB_20}'
			                AND PBT.ORD_NO = #{ordNo}
			                GROUP BY PBT.ORD_NO 
			            ) T2
			            LEFT join (
			            	SELECT *
			                FROM PAY_BASE PBT
			                WHERE 1=1
			                AND PBT.PAY_GB_CD = '${@framework.common.constants.CommonConstants@PAY_GB_20}'
			                AND PBT.ORD_NO = #{ordNo}
			                ORDER BY PAY_MEANS_CD
			                LIMIT 1
		                ) T1 ON (T1.ORD_NO = T2.ORD_NO)
					) PBC ON ( OB.ORD_NO = PBC.ORD_NO AND CD.CLM_NO = PBC.CLM_NO AND PBC.PAY_GB_CD = '${@framework.common.constants.CommonConstants@PAY_GB_20}')
					LEFT JOIN ORDER_DLVRA DLVRC ON (DLVRC.ORD_DLVRA_NO = CD.RTRNA_NO)
					LEFT JOIN ORDER_DLVRA DLVC ON (DLVC.ORD_DLVRA_NO = CD.DLVRA_NO)
				</when>
			</choose>
			LEFT JOIN 
				(SELECT T2.PAY_AMT
                    , T2.PAY_MEANS_NM
                    , T1.PAY_MEANS_CD
                    , T1.ACCT_NO
                    , T1.DPST_SCHD_DT
                    , T1.PAY_STAT_CD
                    , T1.BANK_CD
                    , T1.ORD_NO
                    , T1.CLM_NO
                    , T1.PAY_GB_CD
                from ( 
                	SELECT
	                    FN_GET_ORDER_PAY_AMT(PBT.ORD_NO) AS PAY_AMT
	                    , GROUP_CONCAT(FN_GET_CODE_NAME("PAY_MEANS",PBT.PAY_MEANS_CD, "")) AS PAY_MEANS_NM
	                    , ORD_NO
	                FROM PAY_BASE PBT
	                WHERE PBT.CLM_NO IS NULL AND PBT.PAY_GB_CD = '${@framework.common.constants.CommonConstants@PAY_GB_10}'
	                AND PBT.ORD_NO = #{ordNo}
	                GROUP BY PBT.ORD_NO 
	            ) T2
	            LEFT join (
	            	SELECT *
	                FROM PAY_BASE PBT
	                WHERE 1=1
	                AND PBT.CLM_NO IS NULL AND PBT.PAY_GB_CD = '${@framework.common.constants.CommonConstants@PAY_GB_10}'
	                AND PBT.ORD_NO = #{ordNo}
	                ORDER BY PAY_MEANS_CD
	                LIMIT 1
                ) T1 ON (T1.ORD_NO = T2.ORD_NO)
			) PB ON ( OB.ORD_NO = PB.ORD_NO AND PB.CLM_NO IS NULL AND PB.PAY_GB_CD = '${@framework.common.constants.CommonConstants@PAY_GB_10}' ) 
			LEFT JOIN ORDER_DLVRA DLV ON (ODD.ORD_DLVRA_NO = DLV.ORD_DLVRA_NO)
        WHERE 1=1
        AND OB.ORD_NO = #{ordNo}
        <if test="msgType.equals('clm')">
        	AND CD.CLM_NO = #{clmNo}
        	AND CD.CLM_DTL_TP_CD != '${@framework.common.constants.CommonConstants@CLM_DTL_TP_40}'
        </if>
        <if test="ordDtlSeq != null">
			AND ODD.ORD_DTL_SEQ = #{ordDtlSeq} 
		</if>
        <if test="invNo != null">
			AND DV.INV_NO = #{invNo} 
		</if>
        <if test="arrOrdDtlSeq != null">
			<foreach collection="arrOrdDtlSeq" item="ordDtlSeq" separator="," open="AND ODD.ORD_DTL_SEQ IN (" close=")" >
				#{ordDtlSeq}
			</foreach>
			GROUP BY DV.INV_NO
		</if>
	</select>

	<!--<update id="updateBillCardInfo">
		&lt;!&ndash;
			Query Name	: order.updateBillCardInfo
			Description	: 빌링정보 삭제
		&ndash;&gt;
		UPDATE PRSN_CARD_BILLING_INFO	/* QUERYID(order.updateBillCardInfo) */
		SET
			SYS_UPDR_NO		= #{sysUpdrNo}				/* 시스템 수정자 번호 */
			, SYS_UPD_DTM	= NOW()						/* 시스템 수정 일시 */
			, USE_YN 		= '${@framework.common.constants.CommonConstants@COMM_YN_N}'
			, PG_DEL_YN		= '${@framework.common.constants.CommonConstants@COMM_YN_Y}'
		WHERE
			PRSN_CARD_BILL_NO = #{prsnCardBillNo}
	</update>-->

	<delete id="deleteBillCardInfo" parameterType="biz.app.pay.model.PrsnCardBillingInfoPO">
		<!--
			Query Name	: order.deleteBillCardInfo
			Description	: 빌링정보 삭제
		-->
		DELETE
		FROM	PRSN_CARD_BILLING_INFO
		WHERE
			MBR_NO = #{mbrNo}
		AND
		    PRSN_CARD_BILL_NO = #{prsnCardBillNo}
	</delete>
	
	<select id="listCartAdbrix" resultType="biz.app.order.model.OrderAdbrixVO">
		<!--
			Query Name	: order.listCartAdbrix
			Description	: 장바구니 adbrix 정보
		-->
		SELECT GOODS_ID
			   , GOODS_NM
			   , SALE_PRC
			   , ORG_SALE_PRC
			   , (SELECT DISP_CLSF_NM FROM DISPLAY_CATEGORY WHERE DISP_CLSF_NO = DISP_CLSF_NO1) AS DISP_CLSF_NM1
			   , (SELECT DISP_CLSF_NM FROM DISPLAY_CATEGORY WHERE DISP_CLSF_NO = DISP_CLSF_NO2) AS DISP_CLSF_NM2
			   , (SELECT DISP_CLSF_NM FROM DISPLAY_CATEGORY WHERE DISP_CLSF_NO = DISP_CLSF_NO3) AS DISP_CLSF_NM3
			   , ORG_SALE_PRC - SALE_PRC AS DISCOUNT
			   , BND_NM
			   , COMP_NM
		  FROM (
			SELECT GOODS_ID
				   , GOODS_NM
				  , FN_SPLIT(GOODS_PRICE_INFO, '|', 1) AS SALE_PRC
				  , FN_SPLIT(GOODS_PRICE_INFO, '|', 7) AS ORG_SALE_PRC
				  , (SELECT UP_DISP_CLSF_NO FROM DISPLAY_CATEGORY WHERE DISP_CLSF_NO = DISP_CLSF_NO2) AS DISP_CLSF_NO1
				  , DISP_CLSF_NO2
				  , DISP_CLSF_NO3
				  , BND_NM
				  , COMP_NM
			FROM (
				SELECT
					GB.GOODS_ID
					, GB.GOODS_NM
					,FN_GET_GOODS_PRICE(GB.GOODS_ID, #{stId}, #{webMobileGbCd}) AS GOODS_PRICE_INFO
					, DG.DISP_CLSF_NO AS DISP_CLSF_NO3
					, (SELECT UP_DISP_CLSF_NO FROM DISPLAY_CATEGORY WHERE DISP_CLSF_NO = DG.DISP_CLSF_NO) AS DISP_CLSF_NO2
					, (SELECT BND_NM_KO FROM BRAND_BASE BB WHERE BB.BND_NO = GB.BND_NO) AS BND_NM
					, (SELECT COMP_NM FROM COMPANY_BASE CB WHERE COMP_NO = GB.COMP_NO) AS COMP_NM
				FROM GOODS_BASE GB
		   LEFT JOIN DISPLAY_GOODS DG 
		   		  ON(GB.GOODS_ID = DG.GOODS_ID AND DG.DLGT_DISP_YN = 'Y')  
				WHERE 1=1
				<if test="goodsIds != null">
				AND		GB.GOODS_ID IN (
					    <foreach collection="goodsIds" item="goodsId" separator="," >
					   	 #{goodsId}
					    </foreach>
					    )
			    </if>
			) A
		) B
		
	</select>

	<select id="getTempPayInfo" resultType="biz.app.order.model.OrderComplete" parameterType="String">
		SELECT
			PB.PAY_NO,
			PB.ORD_CLM_GB_CD,
			PB.ORD_NO,
			PB.CLM_NO,
			PB.PAY_GB_CD,
			PB.PAY_MEANS_CD,
			PB.PAY_STAT_CD,
			PB.ORG_PAY_NO,
			PB.PAY_CPLT_DTM,
			PB.PAY_AMT,
			PB.STR_ID,
			PB.DEAL_NO,
			PB.CFM_NO,
			PB.CFM_DTM,
			PB.CFM_RST_CD,
			PB.CFM_RST_MSG,
			PB.CARDC_CD,
			PB.CARD_NO,
			PB.INSTMNT_INFO,
			PB.FINTR_YN,
			PB.BANK_CD,
			PB.ACCT_NO,
			PB.OOA_NM,
			PB.DPSTR_NM,
			PB.DPST_SCHD_DT,
			PB.DPST_SCHD_AMT,
			PB.DPST_CHECK_MSG,
			PB.CNC_YN,
			PB.MNGR_REG_YN,
			PB.MNGR_CHECK_YN,
			PB.LNK_RSPS_RST,
			PB.NDPST_MSG_SND_YN,
			MB.GSPT_NO 
		FROM PAY_BASE PB
		INNER JOIN ORDER_BASE OB ON PB.ORD_NO = OB.ORD_NO
		LEFT JOIN MEMBER_BASE MB ON MB.MBR_NO = OB.MBR_NO
		WHERE
			PB.ORD_NO = #{ordNo}
			
			AND PB.PAY_MEANS_CD <![CDATA[<>]]> '80'
			AND PB.PAY_MEANS_CD <![CDATA[<>]]> '81'
	</select>
	
	<select id="listOrderCompMobile" resultType="biz.app.order.model.OrderMsgVO">
		SELECT 
			CC.PIC_MOBILE
			, COUNT(OB.ORD_NO) AS COMP_ORD_CNT
			, CC.COMP_NO
		FROM ORDER_BASE OB 
		INNER JOIN ORDER_DETAIL OD ON OB.ORD_NO = OD.ORD_NO
		INNER JOIN COMPANY_CHRG CC ON OD.COMP_NO = CC.COMP_NO
		WHERE 1 = 1
			AND OD.ORD_DTL_STAT_CD = #{ordDtlStatCd}
	<if test="ordAcptDtmCompSearch != null and ordAcptDtmCompSearch != ''">
		<choose>
			<when test="ordAcptDtmCompSearch == 'search01'">
				AND OB.ORD_ACPT_DTM BETWEEN DATE_ADD(#{ordAcptDtmStart}, INTERVAL -1 DAY) AND #{ordAcptDtmEnd}
			</when>
			<when test="ordAcptDtmCompSearch == 'search03'">
				AND OB.ORD_ACPT_DTM BETWEEN DATE_ADD(#{ordAcptDtmStart}, INTERVAL -3 HOUR) AND #{ordAcptDtmEnd}
			</when>
			<when test="ordAcptDtmCompSearch == 'search06'">
				AND OB.ORD_ACPT_DTM BETWEEN DATE_ADD(#{ordAcptDtmStart}, INTERVAL -6 HOUR) AND #{ordAcptDtmEnd}
			</when>
			<when test="ordAcptDtmCompSearch == 'search18'">
				AND OB.ORD_ACPT_DTM BETWEEN DATE_ADD(#{ordAcptDtmStart}, INTERVAL -18 HOUR) AND #{ordAcptDtmEnd}
			</when>
			<when test="ordAcptDtmCompSearch == 'search21'">
				AND OB.ORD_ACPT_DTM BETWEEN DATE_ADD(#{ordAcptDtmStart}, INTERVAL -21 HOUR) AND #{ordAcptDtmEnd}
			</when>
		</choose>
	</if>
			AND CC.COMP_NO = #{compNo}
			AND CC.PIC_MOBILE IS NOT NULL
			AND CC.PIC_ALM_RCV_YN = '${@framework.common.constants.CommonConstants@COMM_YN_Y}'
		GROUP BY 
			CC.PIC_MOBILE
	</select>
	
	<select id="listOrderCompInfo" resultType="biz.app.order.model.OrderMsgVO">
		SELECT 
			CB.COMP_NO
			, CB.ORD_CLET_CHAR_ALM_CD
		FROM ORDER_BASE OB 
		INNER JOIN ORDER_DETAIL OD ON OB.ORD_NO = OD.ORD_NO
		INNER JOIN COMPANY_BASE CB ON OD.COMP_NO = CB.COMP_NO
		WHERE 1 = 1
			AND OD.ORD_DTL_STAT_CD = #{ordDtlStatCd}
			AND OB.ORD_ACPT_DTM BETWEEN DATE_ADD(#{ordAcptDtmStart}, INTERVAL -1 DAY) AND #{ordAcptDtmEnd}
			AND CB.ORD_CLET_CHAR_ALM_CD IS NOT NULL AND CB.ORD_CLET_CHAR_ALM_CD != ''
		GROUP BY 
			CB.COMP_NO
	</select>
	
	<update id="updateDefaultPrsnCard">
		<!--
			Query Name	: order.updateDefaultPrsnCard
			Description	: 간편카드 기본 여부 업데이트
		-->
		UPDATE PRSN_CARD_BILLING_INFO	/* QUERYID(order.updateDefaultPrsnCard) */
		SET
			SYS_UPDR_NO		= #{sysUpdrNo}				/* 시스템 수정자 번호 */
			, SYS_UPD_DTM	= NOW()						/* 시스템 수정 일시 */
			, DFLT_YN 		= CASE WHEN PRSN_CARD_BILL_NO = #{prsnCardBillNo} THEN '${@framework.common.constants.CommonConstants@COMM_YN_Y}' ELSE '${@framework.common.constants.CommonConstants@COMM_YN_N}' END
		WHERE
			MBR_NO = #{mbrNo}
		AND
			USE_YN = '${@framework.common.constants.CommonConstants@COMM_YN_Y}'
	</update>
	
	<select id="getOrderPayInfoForPnt" resultType="biz.app.order.model.OrderPayVO">
			<!--
			Query Name : order.getOrderPayInfoForPnt
			Description : 주문 결제 정보 조회 - 포인트 환불
			Comment : 재계산 여부, 적립 대상금액이 달라지는 경우는 주결제가 환불완료됐을 경우
		-->
		SELECT /* order.getOrderPayInfoForPnt */
				(SELECT IF(COUNT(*) > 0, 'Y', 'N') 
				   FROM PAY_BASE 
				  WHERE CLM_NO = #{clmNo} 
				    AND ORD_CLM_GB_CD = '${@framework.common.constants.CommonConstants@ORD_CLM_GB_20}' 
				    AND PAY_GB_CD = '${@framework.common.constants.CommonConstants@PAY_GB_20}'
				    AND PAY_MEANS_CD NOT IN ('${@framework.common.constants.CommonConstants@PAY_MEANS_80}', '${@framework.common.constants.CommonConstants@PAY_MEANS_81}'
				    AND PAY_STAT_CD='${@framework.common.constants.CommonConstants@PAY_STAT_01}')
				) AS RE_CALC_YN
				, (SELECT IFNULL(SUM(REAL_DLVR_AMT), 0) 
					 FROM DELIVERY_CHARGE DC
					WHERE DLVRC_NO IN (SELECT DLVRC_NO FROM ORDER_DETAIL WHERE ORD_NO = #{ordNo} AND RMN_ORD_QTY - RTN_QTY > 0) 
					  AND CNC_YN = 'N' 
					  AND COST_GB_CD = '10'
				) AS DLVR_AMT
				, (SELECT CI_CTF_VAL FROM MEMBER_BASE WHERE MBR_NO = (SELECT MBR_NO FROM ORDER_BASE WHERE ORD_NO = #{ordNo})) AS CI_CTF_VAL
				, FN_GET_ORDER_CANCEL_YN(#{ordNo}) AS ORD_CNC_YN
				, (SELECT IF(COUNT(*) > 0, 'Y', 'N') FROM ORDER_DETAIL WHERE ORD_NO = #{ordNo} AND RMN_ORD_QTY - RTN_QTY > 0) AS ORD_RMN_YN
		  FROM DUAL 
	</select>
</mapper>
