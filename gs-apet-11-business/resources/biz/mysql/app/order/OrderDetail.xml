<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
	일자 : 2017. 01. 09.
	작성자 : snw
-->

<mapper namespace="orderDetail">

	<insert id="insertOrderDetail">
		<!--
			Query Name : orderDetail.insertOrderDetail
			Description : 주문 상세 등록
		-->
		INSERT INTO ORDER_DETAIL (
			ORD_NO					/* 주문 번호 */
			, ORD_DTL_SEQ			/* 주문 상세 순번 */
			, ORD_DTL_STAT_CD	/* 주문 상세 상태 코드 */
			, GOODS_ID				/* 상품 아이디 */
			, GOODS_NM			/* 상품 명 */
			, ITEM_NO				/* 단품 번호 */
			, ITEM_NM				/* 단품 명 */
			, PAK_GOODS_ID		/* 묶음 상품 아이디 */
			, DEAL_GOODS_ID		/* 딜 상품 아이디 */
			, DISP_CLSF_NO			/* 전시 분류 번호 */
			, COMP_GOODS_ID		/* 업체 상품 아이디 */
			, COMP_ITEM_ID		/* 업체 단품 아이디 */
			, ORD_QTY				/* 주문 수량 */
			, CNC_QTY				/* 취소 수량 */
			, RTN_QTY				/* 반품 수량 */
			, RMN_ORD_QTY		/* 잔여 주문 수량 */
			, GOODS_PRC_NO		/* 상품 가격 번호 */
			, SALE_AMT				/* 판매 금액 */
			, PAY_AMT				/* 결제 금액 */
			, RMN_PAY_AMT		/* 잔여 결제 금액 */
			, CMS						/* 수수료 */
			, GOODS_CMSN_RT		/* 상품 수수료 율 */
			, TAX_GB_CD				/* 과세 구분 코드 */
			, ORD_SVMN				/* 부여 적립금 */
			, SVMN_VLD_PRD		/* 적립금 유효 기간 */
			, SVMN_VLD_PRD_CD	/* 적립금 유효 기간 코드 */
			, DLVRC_NO				/* 배송비 번호 */
			, FREE_DLVR_YN			/* 무료 배송 여부 */
			, HOT_DEAL_YN			/* 핫 딜 여부 */
			, ORD_DLVRA_NO		/* 주문 배송지 번호 */
			, COMP_NO				/* 업체 번호 */
			, UP_COMP_NO			/* 상위 업체 번호 */
			, MBR_NO				/* 회원 번호 */
			, MD_USR_NO			/* MD 사용자 번호 */
			, GOODS_ESTM_REG_YN	/* 상품 평가 등록 여부 */
			, ISU_SCHD_PNT			/* 발급 예정 포인트 */
			, OUTSIDE_ORD_DTL_NO	/* 외부 주문 상세 번호 */
			, MKI_GOODS_YN			/* 주문 제작 상품 여부 */
			, MKI_GOODS_OPT_CONTENT	/* 주문 제작 상품 내용 */
			, RSV_GOODS_YN			/* 예약 상품 여부 */
			, SYS_REGR_NO			/* 시스템 등록자 번호 */
			, SYS_REG_DTM			/* 시스템 등록 일시 */
			, SYS_UPDR_NO			/* 시스템 수정자 번호 */
			, SYS_UPD_DTM			/* 시스템 수정 일시 */
		) VALUES (
			#{ordNo}					/* 주문 번호 */
			, #{ordDtlSeq}			/* 주문 상세 순번 */
			, #{ordDtlStatCd}			/* 주문 상세 상태 코드 */
			, #{goodsId}				/* 상품 아이디 */
			, #{goodsNm}			/* 상품 명 */
			, #{itemNo}				/* 단품 번호 */
			, #{itemNm}				/* 단품 명 */
			, #{pakGoodsId}			/* 묶음 상품 아이디 */
			, #{dealGoodsId}		/* 딜 상품 아이디 */
			, #{dispClsfNo}			/* 전시 분류 번호 */
			, #{compGoodsId}		/* 업체 상품 아이디 */
			, #{compItemId}			/* 업체 단품 아이디 */
			, #{ordQty}				/* 주문 수량 */
			, 0							/* 취소 수량 */
			, 0							/* 반품 수량 */
			, #{rmnOrdQty}			/* 잔여 주문 수량 */
			, #{goodsPrcNo}			/* 상품 가격 번호 */
			, #{saleAmt}				/* 판매 금액 */
			, #{payAmt}				/* 결제 금액 */
			, #{rmnPayAmt}			/* 잔여 결제 금액 */
			, #{cms}					/* 수수료 */
			, #{goodsCmsnRt}		/* 상품수수료율 */
			, #{taxGbCd}				/* 과세 구분 코드 */
			, #{ordSvmn}				/* 부여 적립금 */
			, #{svmnVldPrd}			/* 적립금 유효 기간 */
			, #{svmnVldPrdCd}		/* 적립금 유효 기간 코드 */			
			, #{dlvrcNo}				/* 배송비 번호 */
			, #{freeDlvrYn}			/* 무료 배송 여부 */
			, #{hotDealYn}			/* 핫 딜 여부 */
			, #{ordDlvraNo}			/* 주문 배송지 번호 */
			, #{compNo}				/* 업체 번호 */
			, #{upCompNo}			/* 상위 업체 번호 */
			, #{mbrNo}				/* 회원 번호 */
			, #{mdUsrNo}			/* MD 사용자 번호 */
			, '${@framework.common.constants.CommonConstants@COMM_YN_N}'	/* 상품 평가 등록 여부 : N */
			, IFNULL(#{isuSchdPnt}, 0)			/* 발급 예정 포인트 */
			, #{outsideOrdDtlNo}	/* 외부 주문 상세 번호 */
			, #{mkiGoodsYn}			/* 주문 제작 상품 여부 */
			, #{mkiGoodsOptContent}	/* 주문 제작 상품 내용 */
			, #{rsvGoodsYn}			/* 예약 상품 여부 */
			, #{sysRegrNo}			/* 시스템 등록자 번호 */
			, NOW()					/* 시스템 등록 일시 */
			, #{sysUpdrNo}			/* 시스템 수정자 번호 */
			, NOW()					/* 시스템 수정 일시 */
		)
	</insert>

	<select id="listOrderDetail" resultType="biz.app.order.model.OrderDetailVO" >
		<!--
			Query Name : orderDetail.listOrderDetail
			Description : 주문상세 리스트 추출
		-->
		SELECT	/* QUERYID(orderDetail.listOrderDetail) */
					OD2.ORD_NO
					,OD2.ORD_DTL_SEQ
					, OD2.ORD_DTL_STAT_CD
					, IF(OD2.RMN_ORD_QTY = 0, '주문취소', (SELECT DTL_NM FROM CODE_DETAIL WHERE GRP_CD = 'ORD_DTL_STAT' AND DTL_CD = OD2.ORD_DTL_STAT_CD)) ORD_DTL_STAT_CD_NM
					, OD2.GOODS_ID			/* 상품 아이디 */
					, OD2.PAK_GOODS_ID			/* 묶음 상품 아이디 */
					, OD2.STK_MNG_YN			/* 재고 관리 여부 */
					, OD2.GOODS_NM			/* 상품 명 */
					, OD2.DEAL_GOODS_ID		/* 딜 상품 아이디 */
					, OD2.DISP_CLSF_NO		/* 전시 분류 번호 */
					, OD2.COMP_GOODS_ID	/* 업체 상품 아이디 */
					, OD2.COMP_ITEM_ID		/* 업체 단품 아이디 */
					, OD2.GOODS_PRC_NO		/* 상품 가격 번호 */
					, OD2.ORD_QTY				/* 주문 수량 */
					, OD2.CNC_QTY				/* 취소 수량 */
					, OD2.RTN_QTY				/* 반품 수량 */
					, OD2.RTN_CPLT_QTY		/* 반품 완료 수량 */
					, OD2.RTN_QTY - OD2.RTN_CPLT_QTY	 AS RTN_ING_QTY	/* 반품 진행 수량 */
					, OD2.RMN_ORD_QTY		/* 잔여 주문 수량 */
					, FN_GET_ORDER_CLAIM_ING_RTN_YN(OD2.ORD_NO, OD2.ORD_DTL_SEQ) AS RTN_ING_YN /* 반품 진행 여부 */
					, OD2.RMN_ORD_QTY -  OD2.RTN_CPLT_QTY AS VLD_ORD_QTY /* 유효 주문 수량 */
					, FN_GET_ORDER_CLAIM_EXC_QTY(OD2.ORD_NO, OD2.ORD_DTL_SEQ) AS CLM_EXC_ING_QTY	/* 클레임 교환 진행 수량 */
					, FN_GET_ORDER_CLAIM_ING_YN(OD2.ORD_NO, OD2.ORD_DTL_SEQ) AS CLM_ING_YN /* 클레임 진행중 여부 */
					, OD2.SALE_AMT			/* 판매 금액 */
					, OD2.PAY_AMT				/* 결제 금액 */
					, OD2.RMN_PAY_AMT		/* 잔여 결제 금액 */
					, (OD2.RMN_ORD_QTY - FN_GET_ORD_CLM_RTN_CPLT_QTY(OD2.ORD_NO, OD2.ORD_DTL_SEQ)) * OD2.PAY_AMT + CASE WHEN (OD2.RMN_ORD_QTY - FN_GET_ORD_CLM_RTN_CPLT_QTY(OD2.ORD_NO, OD2.ORD_DTL_SEQ)) > 0 THEN OD2.RMN_PAY_AMT ELSE 0 END AS ORG_PAY_TOT_AMT		/* 원 결제 합계 금액 */
					, OD2.CMS					/* 수수료 */
					, OD2.GOODS_CMSN_RT	/* 상품수수료율 */
					, OD2.TAX_GB_CD			/* 과세 구분 코드 */
					, OD2.ORD_SVMN			/* 부여 적립금 */
					, OD2.SVMN_VLD_PRD		/* 적립금 유효 기간 */
					, OD2.SVMN_VLD_PRD_CD	/* 적립금 유효 기간 코드 */
					, OD2.FREE_DLVR_YN		/* 무료 배송 여부 */
					, OD2.HOT_DEAL_YN		/* 핫 딜 여부 */
					, OD2.DLVRC_NO			/* 배송비 번호 */
					, OD2.DLVR_NO				/* 배송 번호 */
					, OD2.ORD_DLVRA_NO		/* 주문 배송지 번호 */
					, OD2.COMP_NO			/* 업체 번호 */
					, OD2.COMP_GB_CD		/* 업체 구분 코드 */
					, OD2.UP_COMP_NO		/* 상위 업체 번호 */
					, OD2.MBR_NO				/* 회원 번호 */
					, OD2.MD_USR_NO			/* MD 사용자 번호 */
					, OD2.GOODS_ESTM_REG_YN		/* 상품 평가 등록 여부 */
					, OD2.GOODS_ESTM_NO			/* 상품 평가 등록 번호 */
					, case when OD2.GOODS_ESTM_REG_YN  = 'Y' then (select GOODS_ESTM_TP from GOODS_COMMENT GC where GC.GOODS_ESTM_NO = OD2.GOODS_ESTM_NO) end as GOODS_ESTM_TP
					, OD2.OUTSIDE_ORD_DTL_NO	/* 외부 주문 상세 번호*/
					, OD2.SYS_REGR_NO			/* 시스템 등록자 번호 */
					, OD2.SYS_REG_DTM			/* 시스템 등록 일시 */
					, OD2.SYS_UPDR_NO			/* 시스템 수정자 번호 */
					, OD2.SYS_UPD_DTM			/* 시스템 수정 일시 */
					, FN_GET_USER_NAME(OD2.SYS_REGR_NO) AS SYS_REGR_NM		/* 시스템 등록자 */
					, FN_GET_USER_NAME(OD2.SYS_UPDR_NO) AS SYS_UPDR_NM	/* 시스템 수정자 */
					, (SELECT FN_GET_COMPANY_NAME(OD2.COMP_NO) ) AS COMP_NM	/* 업체 명 */
					, OD2.ITEM_MNG_YN		/* 단품 관리 유무 */
					, OD2.RTN_PSB_YN			/* 반품 가능 여부 */
					, OD2.CP_DC_AMT		/* 상품 쿠폰 할인 금액 */
					, OD2.CART_CP_DC_AMT	/* 장바구니 쿠폰 할인 금액 */
					, OD2.CP_DC_AMT * (OD2.RMN_ORD_QTY - FN_GET_ORD_CLM_RTN_CPLT_QTY(OD2.ORD_NO, OD2.ORD_DTL_SEQ)) AS TOT_CP_DC_AMT
					, OD2.CART_CP_DC_AMT * (OD2.RMN_ORD_QTY - FN_GET_ORD_CLM_RTN_CPLT_QTY(OD2.ORD_NO, OD2.ORD_DTL_SEQ)) + CASE WHEN (OD2.RMN_ORD_QTY - FN_GET_ORD_CLM_RTN_CPLT_QTY(OD2.ORD_NO, OD2.ORD_DTL_SEQ)) > 0 THEN OD2.CART_CP_DC_RMN_AMT ELSE 0 END AS TOT_CART_CP_DC_AMT
					, (OD2.CP_DC_AMT * (OD2.RMN_ORD_QTY - FN_GET_ORD_CLM_RTN_CPLT_QTY(OD2.ORD_NO, OD2.ORD_DTL_SEQ))) + (OD2.CART_CP_DC_AMT * (OD2.RMN_ORD_QTY - FN_GET_ORD_CLM_RTN_CPLT_QTY(OD2.ORD_NO, OD2.ORD_DTL_SEQ))) + CASE WHEN (OD2.RMN_ORD_QTY - FN_GET_ORD_CLM_RTN_CPLT_QTY(OD2.ORD_NO, OD2.ORD_DTL_SEQ)) > 0 THEN OD2.CART_CP_DC_RMN_AMT ELSE 0 END AS TOT_DC_AMT
					, DV.HDC_CD AS DFT_HDC_CD	/* 대표 택배사 */
					, DV.INV_NO AS DFT_INV_NO	/* 대표 송장번호 */
					, (SELECT GROUP_CONCAT(DISTINCT CD.DTL_NM) 
						 FROM DELIVERY DV LEFT JOIN CODE_DETAIL CD ON(CD.GRP_CD = 'HDC' AND DV.HDC_CD = CD.DTL_CD)  WHERE DV.DLVR_NO IN (OD2.DLVR_NOS) 
					  ) AS HDC_CD_NM	/* 택배사 */
					, (SELECT GROUP_CONCAT(DISTINCT DV.INV_NO) FROM DELIVERY DV  WHERE DV.DLVR_NO IN (OD2.DLVR_NOS) 
					  ) AS INV_NO_NM				/* 송장번호 */
					, 0 as PRMT_DC_AMT <!--오류방지 -->
					, OD2.GOODS_CSTRT_TP_CD
					, OD2.DLVR_PRCS_TP_CD
					, IFNULL(OD2.MKI_GOODS_YN, 'N') AS MKI_GOODS_YN
	                , IFNULL(OD2.RSV_GOODS_YN, 'N') AS RSV_GOODS_YN
	                , IF(OD2.PAK_GOODS_ID IS NULL, 'N', 'Y') AS PAK_GOODS_YN
	                , (SELECT IF(COUNT(*) > 0, 'Y' , 'N' ) FROM ORD_DTL_CSTRT WHERE ORD_NO = OD2.ORD_NO AND ORD_DTL_SEQ = OD2.ORD_DTL_SEQ AND CSTRT_GOODS_GB_CD = '${@framework.common.constants.CommonConstants@CSTRT_GOODS_GB_30}') AS FRB_GOODS_YN
	                , (SELECT CB.CP_NM FROM APL_BNFT AB
	               INNER JOIN MEMBER_COUPON MC ON (MC.MBR_CP_NO = AB.MBR_CP_NO) 
	               INNER JOIN COUPON_BASE CB ON (CB.CP_NO = MC.CP_NO)
	                    WHERE AB.ORD_NO = OD2.ORD_NO AND AB.ORD_DTL_SEQ = OD2.ORD_DTL_SEQ 
	                	  AND APL_BNFT_GB_CD = '${@framework.common.constants.CommonConstants@APL_BNFT_GB_20}'
	                	  AND APL_BNFT_TP_CD = '${@framework.common.constants.CommonConstants@APL_BNFT_TP_210}'	LIMIT 1) AS CP_NM
	               	, (SELECT CB.CP_NM FROM APL_BNFT AB
	               INNER JOIN MEMBER_COUPON MC ON (MC.MBR_CP_NO = AB.MBR_CP_NO)
	               INNER JOIN COUPON_BASE CB ON (CB.CP_NO = MC.CP_NO)
	                    WHERE AB.ORD_NO = OD2.ORD_NO AND AB.ORD_DTL_SEQ = OD2.ORD_DTL_SEQ 
	                	  AND APL_BNFT_GB_CD = '${@framework.common.constants.CommonConstants@APL_BNFT_GB_20}'
	                	  AND APL_BNFT_TP_CD = '${@framework.common.constants.CommonConstants@APL_BNFT_TP_220}'	LIMIT 1) AS CART_CP_NM
	               , OD2.ITEM_NO
	               , OD2.ITEM_NM              
	               ,( SELECT ODAM.ORD_DT FROM ORD_DLVR_AREA_MAP ODAM WHERE ODAM.ORD_NO = OD2.ORD_NO AND ODAM.DEL_YN ='N') as ORD_DT
	        	   ,( SELECT WEEKDAY(DATE_FORMAT(ODAM.ORD_DT, '%Y%m%d')) FROM ORD_DLVR_AREA_MAP ODAM WHERE ODAM.ORD_NO = OD2.ORD_NO AND ODAM.DEL_YN ='N') as ORD_DT_WEEK
	        	   ,( SELECT DLVR_CPLT_DTM FROM DELIVERY DV where DV.DLVR_NO = OD2.DLVR_NO and dv.ORD_CLM_GB_CD ='10' ) as DLVR_CPLT_DTM										/*배송 완료 일시*/
        		   ,( SELECT WEEKDAY(DATE_FORMAT(DLVR_CPLT_DTM, '%Y%m%d')) FROM DELIVERY DV where DV.DLVR_NO = OD2.DLVR_NO and dv.ORD_CLM_GB_CD ='10') as DLVR_CPLT_DTM_WEEK	/*배송 완료 일시 요일*/
        		   , FN_GET_GOODS_STOCK(OD2.GOODS_ID, OD2.ITEM_NO) AS STK_QTY
        		   , OD2.ISU_SCHD_PNT
        		   , OD2.MKI_GOODS_OPT_CONTENT
        		   , GI.IMG_SEQ
		           , GI.IMG_PATH
		           , GI.RVS_IMG_PATH
		           , CASE WHEN OD2.PAK_GOODS_ID IS null THEN GOODS_NM
						   ELSE PAK_GOODS_NM
					   END AS GOODS_NM     /* 상품 명 */
				    , CASE WHEN OD2.GOODS_CSTRT_TP_CD_DP = 'PAK' THEN GOODS_NM
						   ELSE NULL
					   END AS OPT_GOODS_NM		  
					, PAK_ITEM_NM  
					,(
					  	CASE 
					       WHEN (SELECT DLVR_PRCS_TP_CD FROM DELIVERY DV where DV.DLVR_NO = OD2.DLVR_NO) = '${@framework.common.constants.CommonConstants@DLVR_PRCS_TP_10}' THEN 
					       (SELECT INV_NO FROM DELIVERY DV where DV.DLVR_NO = OD2.DLVR_NO)        				
					    ELSE      					
					    	(SELECT CIS_INV_NO FROM DELIVERY DV where DV.DLVR_NO = OD2.DLVR_NO)		 
					  	END
					)AS DLVR_INV_NO
					,(
					SELECT 
							REPLACE(FN_GET_DISP_CTG_PATH(S.DISP_CLSF_NO), '>', '/')
						FROM	DISPLAY_GOODS S
						INNER 	JOIN DISPLAY_CATEGORY DC ON(DC.DISP_CLSF_NO=S.DISP_CLSF_NO) 
						WHERE 	S.DLGT_DISP_YN = '${@framework.common.constants.CommonConstants@COMM_YN_Y}'
						AND   	S.GOODS_ID = OD2.GOODS_ID LIMIT 1
					) AS DISP_CTG_PATH
					, (SELECT BND_NM_KO FROM BRAND_BASE WHERE BND_NO = (SELECT BND_NO FROM GOODS_BASE WHERE GOODS_ID = OD2.GOODS_ID)) AS CD_BND_NM_KO	/* 브랜드명 국문 */
		FROM		(
					SELECT	/* QUERYID(orderDetail.listOrderDetail) */
								OD.ORD_NO					/* 주문 번호 */
								, OD.ORD_DTL_SEQ			/* 주문 상세 순번 */
								, OD.ORD_DTL_STAT_CD
								, OD.GOODS_ID				/* 상품 아이디 */
								, IF(OD.PAK_GOODS_ID IS NOT NULL, GB.GOODS_NM, OD.GOODS_NM) AS GOODS_NM			/* 상품 명 */
								, OD.DEAL_GOODS_ID		/* 딜 상품 아이디 */
								, OD.PAK_GOODS_ID		/* 묶음 상품 아이디 */
								, OD.DISP_CLSF_NO			/* 전시 분류 번호 */
								, OD.COMP_GOODS_ID		/* 업체 상품 아이디 */
								, OD.COMP_ITEM_ID		/* 업체 단품 아이디 */
								, OD.GOODS_PRC_NO		/* 상품 가격 번호 */
								, OD.ORD_QTY				/* 주문 수량 */
								, OD.CNC_QTY				/* 취소 수량 */
								, OD.RTN_QTY				/* 반품 수량 */
								, OD.RMN_ORD_QTY		/* 잔여 주문 수량 */
								, FN_GET_ORD_CLM_RTN_CPLT_QTY(OD.ORD_NO, OD.ORD_DTL_SEQ) AS RTN_CPLT_QTY /* 반품 완료 수량 */
								, OD.SALE_AMT				/* 판매 금액 */
								, OD.PAY_AMT				/* 결제 금액 */
								, OD.RMN_PAY_AMT		/* 잔여 결제 금액 */
								, OD.CMS						/* 수수료 */
								, OD.GOODS_CMSN_RT		/* 상품수수료율 */
								, OD.TAX_GB_CD				/* 과세 구분 코드 */
								, OD.ORD_SVMN				/* 부여 적립금 */
								, OD.SVMN_VLD_PRD		/* 적립금 유효 기간 */
								, OD.SVMN_VLD_PRD_CD	/* 적립금 유효 기간 코드 */
								, OD.FREE_DLVR_YN			/* 무료 배송 여부 */
								, OD.HOT_DEAL_YN			/* 핫 딜 여부 */
								, OD.DLVRC_NO				/* 배송비 번호 */
								, OD.ORD_DLVRA_NO		/* 주문 배송지 번호 */
								, OD.COMP_NO				/* 업체 번호 */
								, CB.COMP_GB_CD			/* 업체 구분 코드 */
								, OD.UP_COMP_NO			/* 상위 업체 번호 */
								, OD.MBR_NO				/* 회원 번호 */
								, OD.MD_USR_NO			/* MD 사용자 번호 */
								, OD.GOODS_ESTM_REG_YN	/* 상품 평가 등록 여부 */
								, OD.GOODS_ESTM_NO		/* 상품 평가 등록 번호 */								
								, OD.OUTSIDE_ORD_DTL_NO	/* 외부 주문 상세 번호*/
								, OD.SYS_REGR_NO			/* 시스템 등록자 번호 */
								, OD.SYS_REG_DTM			/* 시스템 등록 일시 */
								, OD.SYS_UPDR_NO			/* 시스템 수정자 번호 */
								, OD.SYS_UPD_DTM			/* 시스템 수정 일시 */
								, GB.RTN_PSB_YN			/* 반품 가능 여부 */
								, GB.ITEM_MNG_YN			/* 단품 관리 유무 */
								, GB.STK_MNG_YN			/* 재고 관리 여부 */
								, GB.GOODS_CSTRT_TP_CD 
								,CASE WHEN OD.PAK_GOODS_ID IS null THEN GB.GOODS_CSTRT_TP_CD
									   ELSE (SELECT GOODS_CSTRT_TP_CD FROM GOODS_BASE WHERE GOODS_ID = OD.PAK_GOODS_ID)
								 END AS GOODS_CSTRT_TP_CD_DP
								, OB.DLVR_PRCS_TP_CD
								, OD.MKI_GOODS_YN
				                , OD.RSV_GOODS_YN
				                , FN_GET_ORDER_DLVR_NO(OD.ORD_NO, OD.ORD_DTL_SEQ, 'N') DLVR_NOS
				                , FN_GET_ORDER_DLVR_NO(OD.ORD_NO, OD.ORD_DTL_SEQ, 'Y') AS DLVR_NO
				                , FN_GET_ORDER_DTL_APL_BNFT(OD.ORD_NO, OD.ORD_DTL_SEQ, '${@framework.common.constants.CommonConstants@APL_BNFT_GB_20}',  '${@framework.common.constants.CommonConstants@APL_BNFT_TP_210}') AS CP_DC_AMT		/* 상품 쿠폰 할인 금액 */
								, FN_GET_ORDER_DTL_APL_BNFT(OD.ORD_NO, OD.ORD_DTL_SEQ, '${@framework.common.constants.CommonConstants@APL_BNFT_GB_20}',  '${@framework.common.constants.CommonConstants@APL_BNFT_TP_220}') AS CART_CP_DC_AMT	/* 장바구니 쿠폰 할인 금액 */
								, (SELECT IFNULL(SUM(RMN_APL_AMT), 0) FROM APL_BNFT 
									WHERE APL_BNFT_GB_CD = '${@framework.common.constants.CommonConstants@APL_BNFT_GB_20}' AND APL_BNFT_TP_CD = '${@framework.common.constants.CommonConstants@APL_BNFT_TP_220}'
									  AND ORD_NO = OD.ORD_NO AND ORD_DTL_SEQ = OD.ORD_DTL_SEQ
				 				) AS CART_CP_DC_RMN_AMT
								, OD.ITEM_NO
								, OD.ITEM_NM
								, IFNULL(OD.ISU_SCHD_PNT, 0) AS ISU_SCHD_PNT	/* 발급 예정 포인트 */
								, OD.MKI_GOODS_OPT_CONTENT
								,CASE WHEN OD.PAK_GOODS_ID is NOT null 
									THEN
								    (
								   	SELECT GROUP_CONCAT(CONCAT_WS(' : ', GOG.SHOW_NM , AV.ATTR_VAL) ORDER BY GOG.DISP_PRIOR_RANK SEPARATOR '|')  
									  FROM GOODS_BASE GB,
										   ITEM IT,
										   GOODS_OPT_GRP GOG,
										   GOODS_ATTRIBUTE GA,
										   ITEM_ATTRIBUTE_VALUE IAV,
										   ATTRIBUTE_VALUE AV
								     WHERE GB.GOODS_ID = IT.GOODS_ID 
									   AND GA.GOODS_ID = GB.GOODS_ID
									   AND GA.ATTR_NO = AV.ATTR_NO 
									   AND GOG.ATTR_NO = GA.ATTR_NO
									   AND GOG.ATTR_NO = AV.ATTR_NO
									   AND IAV.ITEM_NO = IT.ITEM_NO 
									   AND IAV.ATTR_NO = AV.ATTR_NO
									   AND AV.ATTR_VAL_NO = IAV.ATTR_VAL_NO
									   AND GB.GOODS_ID = OD.GOODS_ID
									   AND GOG.GOODS_ID = OD.PAK_GOODS_ID
								   )
							  	 END AS PAK_ITEM_NM  
							    , (SELECT GOODS_NM FROM GOODS_BASE WHERE GOODS_ID = OD.PAK_GOODS_ID) AS PAK_GOODS_NM	
					FROM		ORDER_DETAIL OD
								,GOODS_BASE GB
								,ORDER_BASE OB
								,COMPANY_BASE CB
					WHERE 	OD.GOODS_ID = GB.GOODS_ID
					  AND 	OD.ORD_No = OB.ORD_NO
					  AND 	OD.COMP_NO = CB.COMP_NO
					<if test="ordNo != null and ordNo != ''">
					AND OD.ORD_NO = #{ordNo}
					</if>
					<if test="ordDtlSeq != null">
					AND		OD.ORD_DTL_SEQ	= #{ordDtlSeq}
					</if>
					<if test="arrOrdDtlSeq != null">
						<foreach collection="arrOrdDtlSeq" item="ordDtlSeq" separator="," open="AND ORD_DTL_SEQ IN (" close=")" >
							#{ordDtlSeq}
						</foreach>
					</if>
			        <if test="mbrNo != null">
			        AND     OD.MBR_NO = #{mbrNo}
			        </if>
			        <if test="compNo != null">
			        AND     OD.COMP_NO = #{compNo}
			        </if>
			        <if test="upCompNo != null">
			        AND     (OD.COMP_NO = #{upCompNo} OR OD.UP_COMP_NO = #{upCompNo})
			        </if>
<!-- 			    KEK01 주석처리 2021.03.03    
			        <if test="dlvrNo != null">
			        AND     OD.DLVR_NO = #{dlvrNo}
			        </if>
 -->			    
 					<if test="dlvrNo != null">
					AND     (OD.ORD_NO, OD.ORD_DTL_SEQ) IN (
								SELECT ODC2.ORD_NO, ODC2.ORD_DTL_SEQ 
								  FROM ORD_DTL_CSTRT ODC2 
								 WHERE ODC2.ORD_DTL_CSTRT_NO IN (
									SELECT ORD_DTL_CSTRT_NO FROM ORD_DTL_CSTRT_DLVR_MAP ODCDM WHERE ODCDM.DLVR_NO = #{dlvrNo}
								 )
							) 					
 					</if>
					<if test="dlvrcNo != null">
					AND 		OD.DLVRC_NO = #{dlvrcNo}
					</if>
					<if test="rmnOrdQty0Over == true">
					AND 		OD.RMN_ORD_QTY  >0 
					</if>
					
					) OD2
LEFT OUTER JOIN DELIVERY DV 
					  ON (DV.DLVR_NO = OD2.DLVR_NO)
LEFT JOIN GOODS_IMG GI ON (OD2.GOODS_ID = GI.GOODS_ID AND GI.DLGT_YN = 'Y')					  
		ORDER BY OD2.ORD_NO, OD2.ORD_DTL_SEQ, OD2.COMP_NO 

 	</select>
 	
	<resultMap id="resultMapForClaim" type="biz.app.claim.model.ClaimDetailVO" autoMapping="true">
		<result property="clmNo"				column="CD_CLM_NO"              />
		<result property="clmDtlSeq"			column="CD_CLM_DTL_SEQ"         />
		<result property="clmDtlTpCd"			column="CD_CLM_DTL_TP_CD"       />
		<result property="clmDtlStatCd"			column="CD_CLM_DTL_STAT_CD"     />
		<result property="clmRsnCd"				column="CD_CLM_RSN_CD"          />
		<result property="clmRsnContent"		column="CD_CLM_RSN_CONTENT"     />
		<result property="clmDenyRsnContent"	column="CD_CLM_DENY_RSN_CONTENT"/>
		<result property="mbrNo"				column="CD_MBR_NO"              />
		<result property="ordNo"				column="CD_ORD_NO"              />
		<result property="ordDtlSeq"			column="CD_ORD_DTL_SEQ"         />
		<result property="orgClmNo"				column="CD_ORG_CLM_NO"          />
		<result property="orgClmDtlSeq"			column="CD_ORG_CLM_DTL_SEQ"     />
		<result property="goodsId"				column="CD_GOODS_ID"            />
		<result property="goodsNm"				column="CD_GOODS_NM"            />
		<result property="dealGoodsId"			column="CD_DEAL_GOODS_ID"       />
		<result property="pakGoodsId"			column="CD_PAK_GOODS_ID"        />
		<result property="dispClsfNo"			column="CD_DISP_CLSF_NO"        />
		<result property="compGoodsId"			column="CD_COMP_GOODS_ID"       />
		<result property="compItemId"			column="CD_COMP_ITEM_ID"        />
		<result property="goodsPrcNo"			column="CD_GOODS_PRC_NO"        />
		<result property="saleAmt"				column="CD_SALE_AMT"            />
		<result property="payAmt"				column="CD_PAY_AMT"             />
		<result property="rmnPayAmt"			column="CD_RMN_PAY_AMT"         />
		<result property="clmQty"				column="CD_CLM_QTY"             />
		<result property="cms"					column="CD_CMS"                 />
		<result property="goodsCmsnRt"			column="CD_GOODS_CMSN_RT"       />
		<result property="taxGbCd"				column="CD_TAX_GB_CD"           />
		<result property="dlvrcNo"				column="CD_DLVRC_NO"            />
		<result property="rtnDlvrcNo"			column="CD_RTN_DLVRC_NO"        />
		<result property="dlvraNo"				column="CD_DLVRA_NO"            />
		<result property="rtrnaNo"				column="CD_RTRNA_NO"            />
		<result property="dlvrNo"				column="CD_DLVR_NO"             />
		<result property="compNo"				column="CD_COMP_NO"             />
		<result property="upCompNo"				column="CD_UP_COMP_NO"          />
		<result property="clmCpltDtm"			column="CD_CLM_CPLT_DTM"        />
		<result property="rtnMtdCd"				column="CD_RTN_MTD_CD"          />
		<result property="outsideClmDtlNo"		column="CD_OUTSIDE_CLM_DTL_NO"  />
		<result property="stlNo"				column="CD_STL_NO"              />
		<result property="dlvrCpltPicUrl"		column="CD_DLVR_CPLT_PIC_URL"   />
		<result property="dlvrSms"				column="CD_DLVR_SMS"            />
		<result property="twcTckt"				column="CD_TWC_TCKT"            />
		<result property="dlvrCpltYn"			column="CD_DLVR_CPLT_YN"        />
		<result property="itemNm"				column="CD_ITEM_NM"				/>
		<result property="itemNo"				column="CD_ITEM_NO"				/>
		<result property="dispClsfNm"			column="CD_DISP_CLSF_NM"		/>
		<result property="cpDcAmt"				column="CD_CP_DC_AMT"			/>
		<result property="cartCpDcAmt"			column="CD_CART_CP_DC_AMT"		/>
		<result property="bndNmKo"				column="CD_BND_NM_KO"			/>
		<result property="subGoodsNm"			column="CD_SUB_GOODS_NM"		/>
		<result property="dlvrPrcsTpCd"			column="CD_DLVR_PRCS_TP_CD"		/>
		<association property="claimBaseVO" javaType="biz.app.claim.model.ClaimBaseVO" autoMapping="true">
		</association>
	</resultMap>
	<resultMap id="orderDetailMap2ndE" type="biz.app.order.model.OrderBaseVO" autoMapping="true"> 
		<id property="ordNo" column="ord_no" /> <!-- 주문번호별 -->
		<collection property="orderCompanyListVO" ofType="biz.app.order.model.OrderCompanyVO" autoMapping="true"> 
			<id property="compNo" column="comp_no" /> <!-- 회사번호별 -->
			<collection property="orderInvoiceListVO" ofType="biz.app.order.model.OrderInvoiceVO" autoMapping="true">
				<id property="dlvrInvNo" column="DLVR_INV_NO" /> <!-- 송장번호별 -->
				<id property="cdClmNo" column="CD_CLM_NO" />                     
				<collection property="orderDlvrStatListVO" ofType="biz.app.order.model.OrderDlvrStatVO" autoMapping="true"> 
					<id property="forceDtlStat" column="FORCE_DTL_STAT" /> <!-- 프로세스단계(odrdtlstat, clmtpcd) -->
					<result property="ordDtlStatCd" column="ORD_DTL_STAT_CD" />
					<result property="clmTpCd" column="CB_CLM_TP_CD" />
					<result property="clmStatCd" column="CB_CLM_STAT_CD" /> <!-- 2021.05.28, ssmvf01, 클레임 상태 추가 -->
					<result property="dlvrPrcsTpCd" column="DLVR_PRCS_TP_CD" />
					<result property="clmDtlStatCd" column="CD_CLM_DTL_STAT_CD" />
					<result property="compGbCd" column="COMP_GB_CD"/>
					<result property="dlvrInvNo" column="DLVR_INV_NO" />
					<result property="viewClmDtlStatCd" column="VIEW_CD_CLM_DTL_STAT_CD" />
					<discriminator column="LIST_DELIMITER" javaType="String"> <!-- 쿼리로 LIST_DELIMITER 컬럼을 두어 리스트를 나눠담는다 -->
					<case value="DELIVERY">
						<collection property="orderDetailListVO" ofType="biz.app.order.model.OrderDetailVO" javaType="list" autoMapping="true">
						</collection>
					</case>
					<case value="CLAIM">
						<collection property="claimDetailListVO" ofType="biz.app.order.model.OrderDetailVO" autoMapping="true">
							<association property="claimDetailVO" resultMap="resultMapForClaim" autoMapping="true">
							</association>
						</collection>
					</case>
					</discriminator>
				</collection>
			</collection>
		</collection>
	</resultMap>

<select id="listOrderDetail2ndE" parameterType= "biz.app.order.model.OrderDetailSO" resultMap="orderDetailMap2ndE" >
		SELECT /* QUERYID(orderDetail.listOrderDetail2ndE) */
			LIST.*
			, (SELECT PAY_MEANS_CD FROM PAY_BASE WHERE ORD_CLM_GB_CD ='10' AND CNC_YN ='N'  AND ORD_NO = LIST.ORD_NO ORDER BY PAY_MEANS_CD LIMIT 1) AS PAY_MEANS_CD
			, (SELECT PAY_STAT_CD FROM PAY_BASE WHERE ORD_CLM_GB_CD ='10' AND CNC_YN ='N'  AND ORD_NO = LIST.ORD_NO ORDER BY PAY_MEANS_CD LIMIT 1) AS PAY_STAT_CD
			, (SELECT CASE WHEN SUM(IF(FN_GET_ORDER_CLAIM_ING_YN(ORD_NO, ORD_DTL_SEQ)='Y', 1, 0)) = 0 
		                    AND SUM(IF(RMN_ORD_QTY - RTN_QTY - CLM_EXC_CPLT_QTY > 0, 1, 0)) = SUM(IF(RMN_ORD_QTY - RTN_QTY - CLM_EXC_CPLT_QTY > 0 AND ORD_DTL_STAT_CD = '170', 1, 0)) THEN 'Y'
		                   ELSE 'N'
		              END 		       
		         FROM ORDER_DETAIL
		        WHERE ORD_NO = LIST.ORD_NO
		      ) AS ORD_DELETE_FLG
		FROM (
			SELECT
				OBB.*
				, (SELECT IFNULL(SUM(CLM_QTY), 0) AS CLM_EXC_QTY FROM CLAIM_BASE CB ,CLAIM_DETAIL CD 
					WHERE CB.CLM_NO = CD.CLM_NO AND CB.CLM_TP_CD = '30' AND CB.CLM_STAT_CD IN ('30') AND CD.CLM_DTL_TP_CD = '40' AND CB.ORD_NO = OBB.ORD_NO AND CD.ORD_DTL_SEQ = OBB.ORD_DTL_SEQ 
				) AS CLM_EXC_CPLT_QTY
			FROM (
				SELECT  
					ORD_NO,
					ST_ID,
					ORD_STAT_CD,
					ORD_MDA_CD,
					MBR_NO,
					MBR_GRD_CD,
					ORD_NM,
					ORDR_ID,
					ORDR_EMAIL,
					ORDR_TEL,
					ORDR_MOBILE,
					ORDR_IP,
					ORD_ACPT_DTM,
					ORD_CPLT_DTM,
					OUTSIDE_ORD_NO,
					CHNL_ID,
					ORD_DTL_CNT,
					ORD_PRCS_RST_CD,
					ORD_PRCS_RST_MSG,
					DATA_STAT_CD,
					DLVR_PRCS_TP_CD, /* 일반택배일 경우 강제로 코드를 10으로 바꿔줌 */
					ORDR_SHOW_YN,
					MP_LNK_HIST_NO,
					PAY_AMT_TOTAL,		/* 결제 금액 */
					CNC_PSB_YN,			/* 취소 가능 여부 */
					ORD_DTL_SEQ,
					ORD_DTL_STAT_CD,
					GOODS_ID,
					ITEM_NO,
					ITEM_NM,
					DEAL_GOODS_ID,
					PAK_GOODS_ID,
					COMP_GOODS_ID,
					COMP_ITEM_ID,
					ORD_QTY,
					CNC_QTY,
					RTN_QTY,
					RMN_ORD_QTY,
					GOODS_PRC_NO,
					SALE_AMT,
					PAY_AMT,
					RMN_PAY_AMT,
					CMS,
					GOODS_CMSN_RT,
					TAX_GB_CD,
					ORD_SVMN,
					SVMN_VLD_PRD_CD,
					SVMN_VLD_PRD,
					FREE_DLVR_YN,
					HOT_DEAL_YN,
					DLVRC_NO,
					ORD_DLVRA_NO,
					COMP_NO,
					UP_COMP_NO,
					MD_USR_NO,
					GOODS_ESTM_NO,
					GOODS_ESTM_REG_YN,
					GOODS_ESTM_TP,
					OUTSIDE_ORD_DTL_NO,
					STL_NO,
					DISP_CLSF_NO,
					DLVR_CPLT_PIC_URL,
					DLVR_SMS,
					DLVR_CPLT_YN,
					MKI_GOODS_YN,
					MKI_GOODS_OPT_CONTENT,
					RSV_GOODS_YN,
					ISU_SCHD_PNT,
					RTN_PSB_YN,				/* 반품 가능 여부 */
					RTN_ING_YN,				/* 반품 진행 여무 */
					RTN_CPLT_QTY,			/* 반품 완료 수량 */
					CLM_EXC_ING_QTY,		/* 교환 진행 수량 */
					CLM_ING_YN,				/* 클레임 진행 여부 */
					PRMT_DC_AMT,			/* 프로모션 할인 금액 */
					CP_DC_AMT,				/* 쿠폰 할인 금액 */
					DLVR_NO,				/* 배송 번호 */
					STK_QTY,
					VLD_ORD_QTY,
					IMG_SEQ,
					IMG_PATH,
					RVS_IMG_PATH,
					COMP_NM,
					COMP_GB_CD, /* 업체 구분 코드 10:자사 */
					ITEM_MNG_YN,
					BND_NM, 			/* 노출 브랜드명 */
					BND_NM_KO,		/* 브랜드명 국문 */
					GOODS_CSTRT_TP_CD,
					PAK_ITEM_NM,
					CASE WHEN DLVR_NO &lt; 0 AND ADDDATE((SELECT DLVR_CPLT_DTM FROM DELIVERY WHERE DLVR_NO = OBB.DLVR_NO),7) &lt; SYSDATE() THEN 'N' ELSE 'Y' END AS COMPARE_DTM_YN,
					(
						SELECT
							GROUP_CONCAT( GB.GOODS_NM )
						FROM GOODS_BASE GB
						WHERE GB.GOODS_ID IN (
							SELECT ODC.CSTRT_GOODS_ID
							FROM ORD_DTL_CSTRT ODC
							INNER JOIN ORDER_DETAIL OD ON ODC.ORD_NO = OBB.ORD_NO AND ODC.ORD_DTL_SEQ = OBB.ORD_DTL_SEQ
							WHERE ODC.ORD_NO  = OBB.ORD_NO AND ODC.CSTRT_GOODS_GB_CD = '30'
							ORDER BY OBB.ORD_DTL_SEQ ASC
						)
					)AS SUB_GOODS_NM,		/*사은품명*/
					( SELECT ODAM.ORD_DT FROM ORD_DLVR_AREA_MAP ODAM WHERE ODAM.ORD_NO = OBB.ORD_NO AND ODAM.DEL_YN ='N') AS ORD_DT,
					( SELECT WEEKDAY(DATE_FORMAT(ODAM.ORD_DT, '%Y%m%d')) FROM ORD_DLVR_AREA_MAP ODAM WHERE ODAM.ORD_NO = OBB.ORD_NO AND ODAM.DEL_YN ='N') AS ORD_DT_WEEK,
					( SELECT DLVR_CPLT_DTM FROM DELIVERY DV WHERE DV.DLVR_NO = OBB.DLVR_NO AND DV.ORD_CLM_GB_CD ='10') as DLVR_CPLT_DTM,		/*배송 완료 일시*/
					( SELECT WEEKDAY(DATE_FORMAT(DLVR_CPLT_DTM, '%Y%m%d')) FROM DELIVERY DV WHERE DV.DLVR_NO = OBB.DLVR_NO AND DV.ORD_CLM_GB_CD ='10') as DLVR_CPLT_DTM_WEEK,	/*배송 완료 일시 요일*/
					IFNULL((SELECT INV_NO FROM DELIVERY DV WHERE DV.DLVR_NO = OBB.DLVR_NO), '') AS DLVR_INV_NO,
					(
						SELECT CONCAT_WS('|', if(BANK_CD='', null, BANK_CD) , if(ACCT_NO='', null, ACCT_NO), if(DPST_SCHD_DT='', null, DPST_SCHD_DT))
						FROM PAY_BASE PB
						WHERE PB.ORD_CLM_GB_CD ='10' AND PB.PAY_MEANS_CD IN('10', '20', '30') AND CNC_YN ='N'  AND PB.ORD_NO = OBB.ORD_NO
					) AS ORD_BANK_INFO,
					(CASE WHEN PAK_GOODS_ID IS null THEN GOODS_NM ELSE PAK_GOODS_NM END) AS GOODS_NM,     /* 상품 명 */
					(CASE WHEN GOODS_CSTRT_TP_CD = 'PAK' THEN GOODS_NM ELSE NULL END) AS OPT_GOODS_NM,
					CD_CLM_NO,
					CD_CLM_DTL_SEQ,
					CD_CLM_DTL_TP_CD,
					CD_CLM_DTL_STAT_CD,
					CD_CLM_RSN_CD,
					CD_CLM_RSN_CONTENT,
					CD_CLM_DENY_RSN_CONTENT,
					CD_MBR_NO,
					CD_ORD_NO,
					CD_ORD_DTL_SEQ,
					CD_ORG_CLM_NO,
					CD_ORG_CLM_DTL_SEQ,
					CD_GOODS_ID,
					CD_GOODS_NM,
					CD_DEAL_GOODS_ID,
					CD_PAK_GOODS_ID,
					CD_DISP_CLSF_NO,
					CD_COMP_GOODS_ID,
					CD_COMP_ITEM_ID,
					CD_GOODS_PRC_NO,
					CD_SALE_AMT,
					CD_PAY_AMT,
					CD_RMN_PAY_AMT,
					CD_CLM_QTY,
					CD_CMS,
					CD_GOODS_CMSN_RT,
					CD_TAX_GB_CD,
					CD_DLVRC_NO,
					CD_RTN_DLVRC_NO,
					CD_DLVRA_NO,
					CD_RTRNA_NO,
					CD_DLVR_NO,
					CD_COMP_NO,
					CD_UP_COMP_NO,
					CD_CLM_CPLT_DTM,
					CD_RTN_MTD_CD,
					CD_OUTSIDE_CLM_DTL_NO,
					CD_STL_NO,
					CD_DLVR_CPLT_PIC_URL,
					CD_DLVR_SMS,
					CD_TWC_TCKT,
					CD_DLVR_CPLT_YN,
					CD_STK_QTY,
					CD_RFD_PAY_TOT_AMT,
					CB_ST_ID,
					CB_CLM_TP_CD,
					CB_CLM_STAT_CD,
					CB_ORD_MDA_CD,
					CB_CHNL_ID,
					CB_SWAP_YN,
					CB_ACPT_DTM,
					CB_CNC_DTM,
					CB_CPLT_DTM,
					CB_ACPTR_NO,
					CB_CNCR_NO,
					CB_CPLTR_NO,
					CB_OUTSIDE_CLM_NO,
					CB_ORDR_SHOW_YN,
					CD_ITEM_NM,
					CD_ITEM_NO,
					CD_DISP_CLSF_NM,
					CD_CP_DC_AMT,		/* 상품 쿠폰 할인 금액 */
					CD_CART_CP_DC_AMT,	/** 장바구니 쿠폰 할인 금액 */
					CD_BND_NM_KO,		/* 브랜드명 국문 */
					CD_SUB_GOODS_NM,	/*사은품명*/
					CD_DLVR_PRCS_TP_CD,
					CASE WHEN CLM_DTL_STAT_ASC IS NULL OR ((ORD_QTY - CNC_QTY - RTN_QTY) > 0) THEN CONCAT('1ORD', ORD_DTL_STAT_CD)
					WHEN (CLM_DTL_STAT_ASC IS NOT NULL AND ((ORD_QTY - CNC_QTY - RTN_QTY) > 0)) THEN CONCAT('2CLM', CLM_DTL_STAT_ASC)
					ELSE CONCAT('2CLM', CLM_DTL_STAT_ASC)
					END AS FORCE_DTL_STAT, /* 주문과 클레임을 구분하여 리스트에 담기위한 구분자 */
					CASE WHEN CLM_DTL_STAT_ASC IS NULL OR ((ORD_QTY - CNC_QTY - RTN_QTY) > 0) THEN 'DELIVERY'
					WHEN (CLM_DTL_STAT_ASC IS NOT NULL AND ((ORD_QTY - CNC_QTY - RTN_QTY) > 0)) THEN 'CLAIM'
					ELSE 'CLAIM'
					END AS LIST_DELIMITER, /* 주문과 클레임을 구분하여 리스트에 담기위한 구분자 */
					CLM_DTL_SEQ_ORDER,
					CASE WHEN CB_CLM_TP_CD != '30' 
						 THEN CD_CLM_DTL_STAT_CD
						 WHEN CLM_DTL_STAT_ASC = '31'
				         THEN '410'
					     WHEN CLM_DTL_STAT_ASC = '32'
					     THEN '330'
					     <!-- 교환 거부 순서 변경 -->
					     WHEN CLM_DTL_STAT_ASC = '50'
					     THEN '350'
					     WHEN CLM_DTL_STAT_ASC = '45'
					     THEN '450'
					     ELSE CD_CLM_DTL_STAT_CD
			     	  END AS VIEW_CD_CLM_DTL_STAT_CD
				FROM (
					SELECT
						OB.ORD_NO,
						OB.ST_ID,
						OB.ORD_STAT_CD,
						OB.ORD_MDA_CD,
						OB.MBR_NO,
						OB.MBR_GRD_CD,
						OB.ORD_NM,
						OB.ORDR_ID,
						OB.ORDR_EMAIL,
						OB.ORDR_TEL,
						OB.ORDR_MOBILE,
						OB.ORDR_IP,
						OB.ORD_ACPT_DTM,
						OB.ORD_CPLT_DTM,
						OB.OUTSIDE_ORD_NO,
						OB.CHNL_ID,
						OB.ORD_DTL_CNT,
						OB.ORD_PRCS_RST_CD,
						OB.ORD_PRCS_RST_MSG,
						OB.DATA_STAT_CD,
						(
							CASE WHEN COMP_GB_CD='10' THEN OB.DLVR_PRCS_TP_CD
							ELSE '10' END
						) AS DLVR_PRCS_TP_CD,
						OB.ORDR_SHOW_YN,
						OB.MP_LNK_HIST_NO,
						FN_GET_ORDER_PAY_AMT(OB.ORD_NO) AS PAY_AMT_TOTAL,		/* 결제 금액 */
						FN_GET_ORDER_CANCEL_PSB_YN(OB.ORD_NO) AS CNC_PSB_YN,	/* 취소 가능 여부 */
						OD.ORD_DTL_SEQ,
						OD.ORD_DTL_STAT_CD,
						OD.GOODS_ID,
						OD.ITEM_NO,
						OD.ITEM_NM,
						OD.DEAL_GOODS_ID,
						OD.PAK_GOODS_ID,
						OD.COMP_GOODS_ID,
						OD.COMP_ITEM_ID,
						OD.ORD_QTY,
						OD.CNC_QTY,
						OD.RTN_QTY,
						OD.RMN_ORD_QTY,
						OD.GOODS_PRC_NO,
						OD.SALE_AMT,
						OD.PAY_AMT,
						OD.RMN_PAY_AMT,
						OD.CMS,
						OD.GOODS_CMSN_RT,
						OD.TAX_GB_CD,
						OD.ORD_SVMN,
						OD.SVMN_VLD_PRD_CD,
						OD.SVMN_VLD_PRD,
						OD.FREE_DLVR_YN,
						OD.HOT_DEAL_YN,
						OD.DLVRC_NO,
						OD.ORD_DLVRA_NO,
						OD.COMP_NO,
						OD.UP_COMP_NO,
						OD.MD_USR_NO,
						OD.GOODS_ESTM_NO,
						OD.GOODS_ESTM_REG_YN,
						CASE WHEN OD.GOODS_ESTM_REG_YN  = 'Y' THEN (SELECT GOODS_ESTM_TP FROM GOODS_COMMENT GC WHERE GC.GOODS_ESTM_NO = OD.GOODS_ESTM_NO) END AS GOODS_ESTM_TP,
						OD.OUTSIDE_ORD_DTL_NO,
						OD.STL_NO,
						OD.DISP_CLSF_NO,
						OD.DLVR_CPLT_PIC_URL,
						OD.DLVR_SMS,
						OD.DLVR_CPLT_YN,
						OD.MKI_GOODS_YN,
						OD.MKI_GOODS_OPT_CONTENT,
						OD.RSV_GOODS_YN,
						OD.ISU_SCHD_PNT,
						(SELECT RTN_PSB_YN FROM GOODS_BASE WHERE GOODS_ID = OD.GOODS_ID) AS RTN_PSB_YN,	/* 반품 가능 여부 */
						FN_GET_ORDER_CLAIM_ING_RTN_YN(OD.ORD_NO, OD.ORD_DTL_SEQ) AS RTN_ING_YN,			/* 반품 진행 여무 */
						FN_GET_ORD_CLM_RTN_CPLT_QTY(OD.ORD_NO, OD.ORD_DTL_SEQ)  AS RTN_CPLT_QTY,		/* 반품 완료 수량 */
						FN_GET_ORDER_CLAIM_EXC_QTY(OD.ORD_NO, OD.ORD_DTL_SEQ)  AS CLM_EXC_ING_QTY,		/* 교환 진행 수량 */
						FN_GET_ORDER_CLAIM_ING_YN(OD.ORD_NO, OD.ORD_DTL_SEQ) AS CLM_ING_YN,				/* 클레임 진행 여부 */
						FN_GET_ORDER_DTL_PRMT_DC_AMT(OB.ORD_NO, OD.ORD_DTL_SEQ) AS PRMT_DC_AMT,			/* 프로모션 할인 금액 */
						FN_GET_ORDER_DTL_CP_DC_AMT(OB.ORD_NO, OD.ORD_DTL_SEQ) AS CP_DC_AMT,				/* 쿠폰 할인 금액 */
						FN_GET_ORDER_DLVR_NO(OD.ORD_NO, OD.ORD_DTL_SEQ, 'Y') AS DLVR_NO,				/* 배송 번호 */
						FN_GET_GOODS_STOCK(OD.GOODS_ID, OD.ITEM_NO) AS STK_QTY,
						OD.RMN_ORD_QTY -  FN_GET_ORD_CLM_RTN_CPLT_QTY(OD.ORD_NO, OD.ORD_DTL_SEQ) AS VLD_ORD_QTY, /* 유효 주문 수량 */
						GI.IMG_SEQ,
						GI.IMG_PATH,
						GI.RVS_IMG_PATH,
						CP.COMP_NM,
						CP.COMP_GB_CD, /* 업체 구분 코드 10:자사 */
						GB.ITEM_MNG_YN,
						GB.GOODS_NM,
						FN_GET_BRAND_NAME(GB.BND_NO) AS BND_NM, 			/* 노출 브랜드명 */
						FN_GET_BRAND_NAME_KO(GB.BND_NO) AS BND_NM_KO,		/* 브랜드명 국문 */
						(SELECT GOODS_NM FROM GOODS_BASE WHERE GOODS_ID = OD.PAK_GOODS_ID) AS PAK_GOODS_NM,
						CASE WHEN OD.PAK_GOODS_ID IS NULL THEN GB.GOODS_CSTRT_TP_CD
						ELSE (SELECT GOODS_CSTRT_TP_CD FROM GOODS_BASE WHERE GOODS_ID = OD.PAK_GOODS_ID)
						END AS GOODS_CSTRT_TP_CD,
						CASE WHEN OD.PAK_GOODS_ID IS NOT NULL THEN
						(
							SELECT GROUP_CONCAT(CONCAT_WS(' : ', GOG.SHOW_NM , AV.ATTR_VAL) ORDER BY GOG.DISP_PRIOR_RANK SEPARATOR '|')
							FROM GOODS_BASE GB,ITEM IT, GOODS_OPT_GRP GOG, GOODS_ATTRIBUTE GA, ITEM_ATTRIBUTE_VALUE IAV, ATTRIBUTE_VALUE AV
							WHERE GB.GOODS_ID = IT.GOODS_ID AND GA.GOODS_ID = GB.GOODS_ID
								AND GA.ATTR_NO = AV.ATTR_NO AND GOG.ATTR_NO = GA.ATTR_NO
								AND GOG.ATTR_NO = AV.ATTR_NO AND IAV.ITEM_NO = IT.ITEM_NO
								AND IAV.ATTR_NO = AV.ATTR_NO AND AV.ATTR_VAL_NO = IAV.ATTR_VAL_NO
								AND GB.GOODS_ID = OD.GOODS_ID AND GOG.GOODS_ID = OD.PAK_GOODS_ID
						)
						END AS PAK_ITEM_NM,
						CD.ORD_NO					AS	CD_CLM_NO,
						CD.CLM_DTL_SEQ				AS	CD_CLM_DTL_SEQ,
						CD.CLM_DTL_TP_CD			AS	CD_CLM_DTL_TP_CD,
						CD.CLM_DTL_STAT_CD			AS	CD_CLM_DTL_STAT_CD,
						(SELECT USR_DFN3_VAL FROM CODE_DETAIL WHERE GRP_CD = 'CLM_DTL_STAT' AND DTL_CD = CD.CLM_DTL_STAT_CD) AS CLM_DTL_STAT_ASC,
						CD.CLM_RSN_CD				AS	CD_CLM_RSN_CD,
						CD.CLM_RSN_CONTENT			AS	CD_CLM_RSN_CONTENT,
						CD.CLM_DENY_RSN_CONTENT		AS	CD_CLM_DENY_RSN_CONTENT,
						CD.MBR_NO					AS	CD_MBR_NO,
						CD.ORD_NO					AS	CD_ORD_NO,
						CD.ORD_DTL_SEQ				AS	CD_ORD_DTL_SEQ,
						CD.ORG_CLM_NO				AS	CD_ORG_CLM_NO,
						CD.ORG_CLM_DTL_SEQ			AS	CD_ORG_CLM_DTL_SEQ,
						CD.GOODS_ID					AS	CD_GOODS_ID,
						CD.GOODS_NM					AS	CD_GOODS_NM,
						CD.DEAL_GOODS_ID			AS	CD_DEAL_GOODS_ID,
						CD.PAK_GOODS_ID				AS	CD_PAK_GOODS_ID,
						CD.DISP_CLSF_NO				AS	CD_DISP_CLSF_NO,
						CD.COMP_GOODS_ID			AS	CD_COMP_GOODS_ID,
						CD.COMP_ITEM_ID				AS	CD_COMP_ITEM_ID,
						CD.GOODS_PRC_NO				AS	CD_GOODS_PRC_NO,
						CD.SALE_AMT					AS	CD_SALE_AMT,
						CD.PAY_AMT					AS	CD_PAY_AMT,
						CD.RMN_PAY_AMT				AS	CD_RMN_PAY_AMT,
						CD.CLM_QTY					AS	CD_CLM_QTY,
						CD.CMS						AS	CD_CMS,
						CD.GOODS_CMSN_RT			AS	CD_GOODS_CMSN_RT,
						CD.TAX_GB_CD				AS	CD_TAX_GB_CD,
						CD.DLVRC_NO					AS	CD_DLVRC_NO,
						CD.RTN_DLVRC_NO				AS	CD_RTN_DLVRC_NO,
						CD.DLVRA_NO					AS	CD_DLVRA_NO,
						CD.RTRNA_NO					AS	CD_RTRNA_NO,
						CD.DLVR_NO						CD_DLVR_NO,
						CD.COMP_NO					AS	CD_COMP_NO,
						CD.UP_COMP_NO				AS	CD_UP_COMP_NO,
						CD.CLM_CPLT_DTM				AS	CD_CLM_CPLT_DTM,
						CD.RTN_MTD_CD				AS	CD_RTN_MTD_CD,
						CD.OUTSIDE_CLM_DTL_NO		AS	CD_OUTSIDE_CLM_DTL_NO,
						CD.STL_NO					AS	CD_STL_NO,
						CD.DLVR_CPLT_PIC_URL		AS	CD_DLVR_CPLT_PIC_URL,
						CD.DLVR_SMS					AS	CD_DLVR_SMS,
						CD.TWC_TCKT					AS	CD_TWC_TCKT,
						CD.DLVR_CPLT_YN				AS	CD_DLVR_CPLT_YN,
						FN_GET_GOODS_STOCK(OD.GOODS_ID, OD.ITEM_NO) AS CD_STK_QTY,
						(CD.PAY_AMT * CD.CLM_QTY) + CD.RMN_PAY_AMT AS CD_RFD_PAY_TOT_AMT,
						CB.ST_ID					AS	CB_ST_ID,
						CB.CLM_TP_CD				AS	CB_CLM_TP_CD,
						CB.CLM_STAT_CD				AS	CB_CLM_STAT_CD,
						CB.ORD_MDA_CD				AS	CB_ORD_MDA_CD,
						CB.CHNL_ID					AS	CB_CHNL_ID,
						CB.SWAP_YN					AS	CB_SWAP_YN,
						CB.ACPT_DTM					AS	CB_ACPT_DTM,
						CB.CNC_DTM					AS	CB_CNC_DTM,
						CB.CPLT_DTM					AS	CB_CPLT_DTM,
						CB.ACPTR_NO					AS	CB_ACPTR_NO,
						CB.CNCR_NO					AS	CB_CNCR_NO,
						CB.CPLTR_NO					AS	CB_CPLTR_NO,
						CB.OUTSIDE_CLM_NO			AS	CB_OUTSIDE_CLM_NO,
						CB.ORDR_SHOW_YN				AS	CB_ORDR_SHOW_YN,
						CASE
							WHEN CB.CLM_TP_CD = '30'
							THEN ( SELECT CDT.ITEM_NM FROM CLAIM_DETAIL CDT WHERE CDT.CLM_NO = CD.CLM_NO ORDER BY CDT.CLM_DTL_SEQ DESC LIMIT 1)
							ELSE CD.ITEM_NM
						END AS CD_ITEM_NM,
						CASE
							WHEN CB.CLM_TP_CD = '30'
							THEN ( SELECT CDT.ITEM_NO FROM CLAIM_DETAIL CDT WHERE CDT.CLM_NO = CD.CLM_NO ORDER BY CDT.CLM_DTL_SEQ DESC LIMIT 1)
							ELSE CD.ITEM_NO
						END AS CD_ITEM_NO,
						(SELECT DISP_CLSF_NM FROM DISPLAY_CATEGORY WHERE DISP_CLSF_NO = CD.DISP_CLSF_NO) AS CD_DISP_CLSF_NM,
						(
							SELECT IFNULL(SUM(APL_AMT), 0)
							FROM APL_BNFT AB
							WHERE AB.ORD_NO = OD.ORD_NO AND AB.ORD_DTL_SEQ = OD.ORD_DTL_SEQ AND AB.APL_BNFT_GB_CD = '20' AND AB.APL_BNFT_TP_CD  = '210'
						) AS CD_CP_DC_AMT,		/* 상품 쿠폰 할인 금액 */
						(
							SELECT	IFNULL(SUM(APL_AMT), 0)
							FROM APL_BNFT AB
							WHERE	AB.ORD_NO = OD.ORD_NO AND AB.ORD_DTL_SEQ = OD.ORD_DTL_SEQ AND AB.APL_BNFT_GB_CD = '20' AND AB.APL_BNFT_TP_CD  = '220'
						) AS CD_CART_CP_DC_AMT,	/** 장바구니 쿠폰 할인 금액 */
						(SELECT BND_NM_KO FROM BRAND_BASE WHERE BND_NO = (SELECT BND_NO FROM GOODS_BASE WHERE GOODS_ID = CD.GOODS_ID)) AS CD_BND_NM_KO,	/* 브랜드명 국문 */
						(
							 SELECT GROUP_CONCAT( GB.GOODS_NM, ',')
							 FROM GOODS_BASE GB
							 WHERE GB.GOODS_ID IN (
								SELECT ODC.CSTRT_GOODS_ID
								FROM ORD_DTL_CSTRT ODC
								INNER JOIN ORDER_DETAIL ODD ON ODC.ORD_NO = ODD.ORD_NO AND ODC.ORD_DTL_SEQ = ODD.ORD_DTL_SEQ
								WHERE ODC.ORD_NO  = OD.ORD_NO AND ODC.CSTRT_GOODS_GB_CD = '30'
								ORDER BY ODD.ORD_DTL_SEQ ASC
							)
						) AS CD_SUB_GOODS_NM, /*사은품명*/
						CASE WHEN (SELECT COMP_GB_CD FROM COMPANY_BASE CB WHERE CB.COMP_NO = CD.COMP_NO) = '20' THEN '10'
						ELSE (SELECT DLVR_PRCS_TP_CD FROM ORDER_BASE X1 WHERE X1.ORD_NO = CD.ORD_NO)
						END CD_DLVR_PRCS_TP_CD,
						ROW_NUMBER() OVER(PARTITION BY OD.ORD_NO, OD.ORD_DTL_SEQ ORDER BY OD.ORD_DTL_SEQ DESC) AS CLM_DTL_SEQ_ORDER
					FROM (
						SELECT
							ORD_NO,
							ST_ID,
							ORD_STAT_CD,
							ORD_MDA_CD,
							MBR_NO,
							MBR_GRD_CD,
							ORD_NM,
							ORDR_ID,
							ORDR_EMAIL,
							ORDR_TEL,
							ORDR_MOBILE,
							ORDR_IP,
							ORD_ACPT_DTM,
							ORD_CPLT_DTM,
							OUTSIDE_ORD_NO,
							CHNL_ID,
							ORD_DTL_CNT,
							ORD_PRCS_RST_CD,
							ORD_PRCS_RST_MSG,
							DATA_STAT_CD,
							DLVR_PRCS_TP_CD,
							ORDR_SHOW_YN,
							MP_LNK_HIST_NO
						FROM
							ORDER_BASE OB
						WHERE
							ORD_NO = #{ordNo}
					) OB
					INNER JOIN ORDER_DETAIL OD ON (OB.ORD_NO = OD.ORD_NO)
					INNER JOIN GOODS_BASE GB ON (OD.GOODS_ID = GB.GOODS_ID)
					INNER JOIN GOODS_IMG GI ON (OD.GOODS_ID = GI.GOODS_ID AND GI.DLGT_YN = 'Y')
					INNER JOIN COMPANY_BASE CP ON (OD.COMP_NO = CP.COMP_NO )
					LEFT JOIN CLAIM_DETAIL CD ON (OD.ORD_NO = CD.ORD_NO AND OD.ORD_DTL_SEQ = CD.ORD_DTL_SEQ)
					LEFT JOIN CLAIM_BASE CB ON CB.CLM_NO = CD.CLM_NO AND CB.CLM_STAT_CD &lt;> '40'
				) OBB
			)OBB
			WHERE 
				OBB.LIST_DELIMITER = 'DELIVERY'
				AND CLM_DTL_SEQ_ORDER = 1
			UNION ALL
			SELECT 
				OBB.*
				, (SELECT IFNULL(SUM(CLM_QTY), 0) AS CLM_EXC_QTY FROM CLAIM_BASE CB ,CLAIM_DETAIL CD 
					WHERE CB.CLM_NO = CD.CLM_NO AND CB.CLM_TP_CD = '30' AND CB.CLM_STAT_CD IN ('30') AND CD.CLM_DTL_TP_CD = '40' AND CB.ORD_NO = OBB.ORD_NO AND CD.ORD_DTL_SEQ = OBB.ORD_DTL_SEQ 
				) AS CLM_EXC_CPLT_QTY
			FROM (
				SELECT
					ORD_NO,
					ST_ID,
					ORD_STAT_CD,
					ORD_MDA_CD,
					MBR_NO,
					MBR_GRD_CD,
					ORD_NM,
					ORDR_ID,
					ORDR_EMAIL,
					ORDR_TEL,
					ORDR_MOBILE,
					ORDR_IP,
					ORD_ACPT_DTM,
					ORD_CPLT_DTM,
					OUTSIDE_ORD_NO,
					CHNL_ID,
					ORD_DTL_CNT,
					ORD_PRCS_RST_CD,
					ORD_PRCS_RST_MSG,
					DATA_STAT_CD,
					DLVR_PRCS_TP_CD, /* 일반택배일 경우 강제로 코드를 10으로 바꿔줌 */
					ORDR_SHOW_YN,
					MP_LNK_HIST_NO,
					PAY_AMT_TOTAL,		/* 결제 금액 */
					CNC_PSB_YN,			/* 취소 가능 여부 */
					ORD_DTL_SEQ,
					ORD_DTL_STAT_CD,
					GOODS_ID,
					ITEM_NO,
					ITEM_NM,
					DEAL_GOODS_ID,
					PAK_GOODS_ID,
					COMP_GOODS_ID,
					COMP_ITEM_ID,
					ORD_QTY,
					CNC_QTY,
					RTN_QTY,
					RMN_ORD_QTY,
					GOODS_PRC_NO,
					SALE_AMT,
					PAY_AMT,
					RMN_PAY_AMT,
					CMS,
					GOODS_CMSN_RT,
					TAX_GB_CD,
					ORD_SVMN,
					SVMN_VLD_PRD_CD,
					SVMN_VLD_PRD,
					FREE_DLVR_YN,
					HOT_DEAL_YN,
					DLVRC_NO,
					ORD_DLVRA_NO,
					COMP_NO,
					UP_COMP_NO,
					MD_USR_NO,
					GOODS_ESTM_NO,
					GOODS_ESTM_REG_YN,
					GOODS_ESTM_TP,
					OUTSIDE_ORD_DTL_NO,
					STL_NO,
					DISP_CLSF_NO,
					DLVR_CPLT_PIC_URL,
					DLVR_SMS,
					DLVR_CPLT_YN,
					MKI_GOODS_YN,
					MKI_GOODS_OPT_CONTENT,
					RSV_GOODS_YN,
					ISU_SCHD_PNT,
					RTN_PSB_YN,				/* 반품 가능 여부 */
					RTN_ING_YN,				/* 반품 진행 여무 */
					RTN_CPLT_QTY,			/* 반품 완료 수량 */
					CLM_EXC_ING_QTY,		/* 교환 진행 수량 */
					CLM_ING_YN,				/* 클레임 진행 여부 */
					PRMT_DC_AMT,			/* 프로모션 할인 금액 */
					CP_DC_AMT,				/* 쿠폰 할인 금액 */
					DLVR_NO,				/* 배송 번호 */
					STK_QTY,
					VLD_ORD_QTY,
					IMG_SEQ,
					IMG_PATH,
					RVS_IMG_PATH,
					COMP_NM,
					COMP_GB_CD, /* 업체 구분 코드 10:자사 */
					ITEM_MNG_YN,
					BND_NM, 			/* 노출 브랜드명 */
					BND_NM_KO,		/* 브랜드명 국문 */
					GOODS_CSTRT_TP_CD,
					PAK_ITEM_NM,
					CASE WHEN DLVR_NO &lt; 0 AND ADDDATE((SELECT DLVR_CPLT_DTM FROM DELIVERY WHERE DLVR_NO = OBB.DLVR_NO),7) &lt; SYSDATE() THEN 'N' ELSE 'Y' END AS COMPARE_DTM_YN,
					(
						SELECT
							GROUP_CONCAT( GB.GOODS_NM )
						FROM GOODS_BASE GB
						WHERE GB.GOODS_ID IN (
							SELECT ODC.CSTRT_GOODS_ID
							FROM ORD_DTL_CSTRT ODC
							INNER JOIN ORDER_DETAIL OD ON ODC.ORD_NO = OBB.ORD_NO AND ODC.ORD_DTL_SEQ = OBB.ORD_DTL_SEQ
							WHERE ODC.ORD_NO  = OBB.ORD_NO AND ODC.CSTRT_GOODS_GB_CD = '30'
							ORDER BY OBB.ORD_DTL_SEQ ASC
						)
					)AS SUB_GOODS_NM,		/*사은품명*/
					( SELECT ODAM.ORD_DT FROM ORD_DLVR_AREA_MAP ODAM WHERE ODAM.ORD_NO = OBB.ORD_NO AND ODAM.DEL_YN ='N') AS ORD_DT,
					( SELECT WEEKDAY(DATE_FORMAT(ODAM.ORD_DT, '%Y%m%d')) FROM ORD_DLVR_AREA_MAP ODAM WHERE ODAM.ORD_NO = OBB.ORD_NO AND ODAM.DEL_YN ='N') AS ORD_DT_WEEK,
					( SELECT DLVR_CPLT_DTM FROM DELIVERY DV WHERE DV.DLVR_NO = OBB.DLVR_NO AND DV.ORD_CLM_GB_CD ='10') as DLVR_CPLT_DTM,		/*배송 완료 일시*/
					( SELECT WEEKDAY(DATE_FORMAT(DLVR_CPLT_DTM, '%Y%m%d')) FROM DELIVERY DV WHERE DV.DLVR_NO = OBB.DLVR_NO AND DV.ORD_CLM_GB_CD ='10') as DLVR_CPLT_DTM_WEEK,	/*배송 완료 일시 요일*/
					IFNULL((SELECT INV_NO FROM DELIVERY DV WHERE DV.DLVR_NO = OBB.DLVR_NO), '') AS DLVR_INV_NO,
					(
						SELECT CONCAT_WS('|', if(BANK_CD='', null, BANK_CD) , if(ACCT_NO='', null, ACCT_NO), if(DPST_SCHD_DT='', null, DPST_SCHD_DT))
						FROM PAY_BASE PB
						WHERE PB.ORD_CLM_GB_CD ='10' AND PB.PAY_MEANS_CD IN('10', '20', '30') AND CNC_YN ='N'  AND PB.ORD_NO = OBB.ORD_NO
					) AS ORD_BANK_INFO,
					(CASE WHEN PAK_GOODS_ID IS null THEN GOODS_NM ELSE PAK_GOODS_NM END) AS GOODS_NM,     /* 상품 명 */
					(CASE WHEN GOODS_CSTRT_TP_CD = 'PAK' THEN GOODS_NM ELSE NULL END) AS OPT_GOODS_NM,
					CD_CLM_NO,
					CD_CLM_DTL_SEQ,
					CD_CLM_DTL_TP_CD,
					CD_CLM_DTL_STAT_CD,
					CD_CLM_RSN_CD,
					CD_CLM_RSN_CONTENT,
					CD_CLM_DENY_RSN_CONTENT,
					CD_MBR_NO,
					CD_ORD_NO,
					CD_ORD_DTL_SEQ,
					CD_ORG_CLM_NO,
					CD_ORG_CLM_DTL_SEQ,
					CD_GOODS_ID,
					CD_GOODS_NM,
					CD_DEAL_GOODS_ID,
					CD_PAK_GOODS_ID,
					CD_DISP_CLSF_NO,
					CD_COMP_GOODS_ID,
					CD_COMP_ITEM_ID,
					CD_GOODS_PRC_NO,
					CD_SALE_AMT,
					CD_PAY_AMT,
					CD_RMN_PAY_AMT,
					CD_CLM_QTY,
					CD_CMS,
					CD_GOODS_CMSN_RT,
					CD_TAX_GB_CD,
					CD_DLVRC_NO,
					CD_RTN_DLVRC_NO,
					CD_DLVRA_NO,
					CD_RTRNA_NO,
					CD_DLVR_NO,
					CD_COMP_NO,
					CD_UP_COMP_NO,
					CD_CLM_CPLT_DTM,
					CD_RTN_MTD_CD,
					CD_OUTSIDE_CLM_DTL_NO,
					CD_STL_NO,
					CD_DLVR_CPLT_PIC_URL,
					CD_DLVR_SMS,
					CD_TWC_TCKT,
					CD_DLVR_CPLT_YN,
					CD_STK_QTY,
					CD_RFD_PAY_TOT_AMT,
					CB_ST_ID,
					CB_CLM_TP_CD,
					CB_CLM_STAT_CD,
					CB_ORD_MDA_CD,
					CB_CHNL_ID,
					CB_SWAP_YN,
					CB_ACPT_DTM,
					CB_CNC_DTM,
					CB_CPLT_DTM,
					CB_ACPTR_NO,
					CB_CNCR_NO,
					CB_CPLTR_NO,
					CB_OUTSIDE_CLM_NO,
					CB_ORDR_SHOW_YN,
					CD_ITEM_NM,
					CD_ITEM_NO,
					CD_DISP_CLSF_NM,
					CD_CP_DC_AMT,		/* 상품 쿠폰 할인 금액 */
					CD_CART_CP_DC_AMT,	/** 장바구니 쿠폰 할인 금액 */
					CD_BND_NM_KO,		/* 브랜드명 국문 */
					CD_SUB_GOODS_NM,	/*사은품명*/
					CD_DLVR_PRCS_TP_CD,
					CASE WHEN CLM_DTL_STAT_ASC IS NULL THEN CONCAT('1ORD', ORD_DTL_STAT_CD)
					WHEN (CLM_DTL_STAT_ASC IS NOT NULL AND ((ORD_QTY - CNC_QTY - RTN_QTY) > 0)) THEN CONCAT('2CLM', CLM_DTL_STAT_ASC)
					ELSE CONCAT('2CLM', CLM_DTL_STAT_ASC)
					END AS FORCE_DTL_STAT, /* 주문과 클레임을 구분하여 리스트에 담기위한 구분자 */
					CASE WHEN CLM_DTL_STAT_ASC IS NULL THEN 'DELIVERY'
					WHEN (CLM_DTL_STAT_ASC IS NOT NULL AND ((ORD_QTY - CNC_QTY - RTN_QTY) > 0)) THEN 'CLAIM'
					ELSE 'CLAIM'
					END AS LIST_DELIMITER, /* 주문과 클레임을 구분하여 리스트에 담기위한 구분자 */
					CLM_DTL_SEQ_ORDER,
					CASE WHEN CB_CLM_TP_CD != '30' 
						 THEN CD_CLM_DTL_STAT_CD
						 WHEN CLM_DTL_STAT_ASC = '31'
				         THEN '410'
					     WHEN CLM_DTL_STAT_ASC = '32'
					     THEN '330'
					     <!-- 교환 거부 순서 변경 -->
					     WHEN CLM_DTL_STAT_ASC = '50'
					     THEN '350'
					     WHEN CLM_DTL_STAT_ASC = '45'
					     THEN '450'
					     ELSE CD_CLM_DTL_STAT_CD
			     	  END AS VIEW_CD_CLM_DTL_STAT_CD
				FROM (
					SELECT
						OB.ORD_NO,
						OB.ST_ID,
						OB.ORD_STAT_CD,
						OB.ORD_MDA_CD,
						OB.MBR_NO,
						OB.MBR_GRD_CD,
						OB.ORD_NM,
						OB.ORDR_ID,
						OB.ORDR_EMAIL,
						OB.ORDR_TEL,
						OB.ORDR_MOBILE,
						OB.ORDR_IP,
						OB.ORD_ACPT_DTM,
						OB.ORD_CPLT_DTM,
						OB.OUTSIDE_ORD_NO,
						OB.CHNL_ID,
						OB.ORD_DTL_CNT,
						OB.ORD_PRCS_RST_CD,
						OB.ORD_PRCS_RST_MSG,
						OB.DATA_STAT_CD,
						(
							CASE WHEN COMP_GB_CD='10' THEN OB.DLVR_PRCS_TP_CD
							ELSE '10' END
						) AS DLVR_PRCS_TP_CD,
						OB.ORDR_SHOW_YN,
						OB.MP_LNK_HIST_NO,
						FN_GET_ORDER_PAY_AMT(OB.ORD_NO) AS PAY_AMT_TOTAL,		/* 결제 금액 */
						FN_GET_ORDER_CANCEL_PSB_YN(OB.ORD_NO) AS CNC_PSB_YN,	/* 취소 가능 여부 */
						OD.ORD_DTL_SEQ,
						OD.ORD_DTL_STAT_CD,
						OD.GOODS_ID,
						OD.ITEM_NO,
						OD.ITEM_NM,
						OD.DEAL_GOODS_ID,
						OD.PAK_GOODS_ID,
						OD.COMP_GOODS_ID,
						OD.COMP_ITEM_ID,
						OD.ORD_QTY,
						OD.CNC_QTY,
						OD.RTN_QTY,
						OD.RMN_ORD_QTY,
						OD.GOODS_PRC_NO,
						OD.SALE_AMT,
						OD.PAY_AMT,
						OD.RMN_PAY_AMT,
						OD.CMS,
						OD.GOODS_CMSN_RT,
						OD.TAX_GB_CD,
						OD.ORD_SVMN,
						OD.SVMN_VLD_PRD_CD,
						OD.SVMN_VLD_PRD,
						OD.FREE_DLVR_YN,
						OD.HOT_DEAL_YN,
						OD.DLVRC_NO,
						OD.ORD_DLVRA_NO,
						OD.COMP_NO,
						OD.UP_COMP_NO,
						OD.MD_USR_NO,
						OD.GOODS_ESTM_NO,
						OD.GOODS_ESTM_REG_YN,
						CASE WHEN OD.GOODS_ESTM_REG_YN  = 'Y' THEN (SELECT GOODS_ESTM_TP FROM GOODS_COMMENT GC WHERE GC.GOODS_ESTM_NO = OD.GOODS_ESTM_NO) END AS GOODS_ESTM_TP,
						OD.OUTSIDE_ORD_DTL_NO,
						OD.STL_NO,
						OD.DISP_CLSF_NO,
						OD.DLVR_CPLT_PIC_URL,
						OD.DLVR_SMS,
						OD.DLVR_CPLT_YN,
						OD.MKI_GOODS_YN,
						OD.MKI_GOODS_OPT_CONTENT,
						OD.RSV_GOODS_YN,
						OD.ISU_SCHD_PNT,
						(SELECT RTN_PSB_YN FROM GOODS_BASE WHERE GOODS_ID = OD.GOODS_ID) AS RTN_PSB_YN,	/* 반품 가능 여부 */
						FN_GET_ORDER_CLAIM_ING_RTN_YN(OD.ORD_NO, OD.ORD_DTL_SEQ) AS RTN_ING_YN,			/* 반품 진행 여무 */
						FN_GET_ORD_CLM_RTN_CPLT_QTY(OD.ORD_NO, OD.ORD_DTL_SEQ)  AS RTN_CPLT_QTY,		/* 반품 완료 수량 */
						FN_GET_ORDER_CLAIM_EXC_QTY(OD.ORD_NO, OD.ORD_DTL_SEQ)  AS CLM_EXC_ING_QTY,		/* 교환 진행 수량 */
						FN_GET_ORDER_CLAIM_ING_YN(OD.ORD_NO, OD.ORD_DTL_SEQ) AS CLM_ING_YN,				/* 클레임 진행 여부 */
						FN_GET_ORDER_DTL_PRMT_DC_AMT(OB.ORD_NO, OD.ORD_DTL_SEQ) AS PRMT_DC_AMT,			/* 프로모션 할인 금액 */
						FN_GET_ORDER_DTL_CP_DC_AMT(OB.ORD_NO, OD.ORD_DTL_SEQ) AS CP_DC_AMT,				/* 쿠폰 할인 금액 */
						<!-- FN_GET_ORDER_DLVR_NO(OD.ORD_NO, OD.ORD_DTL_SEQ, 'Y') AS DLVR_NO,				/* 배송 번호 */ -->
						FN_GET_CLM_DLVR_NO(CD.CLM_NO, MAX(CD.CLM_DTL_SEQ) OVER(PARTITION BY CD.CLM_NO, CD.ORD_NO, CD.ORD_DTL_SEQ), 'Y') AS DLVR_NO,	/*배송번호 - 교환배송쪽 배송번호를 가져오도록 수정 - 2021.05.17 by kek01*/
						FN_GET_GOODS_STOCK(OD.GOODS_ID, OD.ITEM_NO) AS STK_QTY,
						OD.RMN_ORD_QTY -  FN_GET_ORD_CLM_RTN_CPLT_QTY(OD.ORD_NO, OD.ORD_DTL_SEQ) AS VLD_ORD_QTY, /* 유효 주문 수량 */
						GI.IMG_SEQ,
						GI.IMG_PATH,
						GI.RVS_IMG_PATH,
						CP.COMP_NM,
						CP.COMP_GB_CD, /* 업체 구분 코드 10:자사 */
						GB.ITEM_MNG_YN,
						GB.GOODS_NM,
						FN_GET_BRAND_NAME(GB.BND_NO) AS BND_NM, 			/* 노출 브랜드명 */
						FN_GET_BRAND_NAME_KO(GB.BND_NO) AS BND_NM_KO,		/* 브랜드명 국문 */
						(SELECT GOODS_NM FROM GOODS_BASE WHERE GOODS_ID = OD.PAK_GOODS_ID) AS PAK_GOODS_NM,
						CASE WHEN OD.PAK_GOODS_ID IS NULL THEN GB.GOODS_CSTRT_TP_CD
						ELSE (SELECT GOODS_CSTRT_TP_CD FROM GOODS_BASE WHERE GOODS_ID = OD.PAK_GOODS_ID)
						END AS GOODS_CSTRT_TP_CD,
						CASE WHEN OD.PAK_GOODS_ID IS NOT NULL THEN
						(
							SELECT GROUP_CONCAT(CONCAT_WS(' : ', GOG.SHOW_NM , AV.ATTR_VAL) ORDER BY GOG.DISP_PRIOR_RANK SEPARATOR '|')
							FROM GOODS_BASE GB,ITEM IT, GOODS_OPT_GRP GOG, GOODS_ATTRIBUTE GA, ITEM_ATTRIBUTE_VALUE IAV, ATTRIBUTE_VALUE AV
							WHERE GB.GOODS_ID = IT.GOODS_ID AND GA.GOODS_ID = GB.GOODS_ID
								AND GA.ATTR_NO = AV.ATTR_NO AND GOG.ATTR_NO = GA.ATTR_NO
								AND GOG.ATTR_NO = AV.ATTR_NO AND IAV.ITEM_NO = IT.ITEM_NO
								AND IAV.ATTR_NO = AV.ATTR_NO AND AV.ATTR_VAL_NO = IAV.ATTR_VAL_NO
								AND GB.GOODS_ID = OD.GOODS_ID AND GOG.GOODS_ID = OD.PAK_GOODS_ID
						)
						END AS PAK_ITEM_NM,
						CD.CLM_NO					AS	CD_CLM_NO,
						<!-- CD.CLM_DTL_SEQ				AS	CD_CLM_DTL_SEQ, -->
						<!-- CD.CLM_DTL_STAT_CD			AS	CD_CLM_DTL_STAT_CD, -->
						<!-- CD.CLM_QTY					AS	CD_CLM_QTY, -->
						CD.CLM_DTL_SEQ				AS	ORG_CD_CLM_DTL_SEQ,
						MIN(CD.CLM_DTL_SEQ) OVER(PARTITION BY CD.CLM_NO, CD.ORD_NO, CD.ORD_DTL_SEQ, CD.CLM_DTL_TP_CD) AS	CD_CLM_DTL_SEQ,
						MIN(CD.CLM_DTL_STAT_CD) OVER(PARTITION BY CD.CLM_NO, CD.ORD_NO, CD.ORD_DTL_SEQ, CD.CLM_DTL_TP_CD) AS	CD_CLM_DTL_STAT_CD,
						<!-- 2021-06-09 교환일 경우 배송쪽 남은수량 합 -->
						CASE
							WHEN CB.CLM_TP_CD = '30'
							THEN (SELECT SUM(RMN_CLM_QTY) FROM CLAIM_DETAIL 
								   WHERE CLM_NO = CD.CLM_NO AND ORD_NO = OD.ORD_NO AND ORD_DTL_SEQ = CD.ORD_DTL_SEQ AND CLM_DTL_TP_CD = '40')
							ELSE SUM(CD.RMN_CLM_QTY) OVER(PARTITION BY CD.CLM_NO, CD.ORD_NO, CD.ORD_DTL_SEQ, CD.CLM_DTL_TP_CD )
						END AS CD_CLM_QTY,
						CD.CLM_DTL_TP_CD			AS	CD_CLM_DTL_TP_CD,
						(SELECT USR_DFN3_VAL FROM CODE_DETAIL WHERE GRP_CD = 'CLM_DTL_STAT' AND DTL_CD = CD.CLM_DTL_STAT_CD) AS CLM_DTL_STAT_ASC,
						CD.CLM_RSN_CD				AS	CD_CLM_RSN_CD,
						CD.CLM_RSN_CONTENT			AS	CD_CLM_RSN_CONTENT,
						CD.CLM_DENY_RSN_CONTENT		AS	CD_CLM_DENY_RSN_CONTENT,
						CD.MBR_NO					AS	CD_MBR_NO,
						CD.ORD_NO					AS	CD_ORD_NO,
						CD.ORD_DTL_SEQ				AS	CD_ORD_DTL_SEQ,
						CD.ORG_CLM_NO				AS	CD_ORG_CLM_NO,
						CD.ORG_CLM_DTL_SEQ			AS	CD_ORG_CLM_DTL_SEQ,
						CD.GOODS_ID					AS	CD_GOODS_ID,
						CD.GOODS_NM					AS	CD_GOODS_NM,
						CD.DEAL_GOODS_ID			AS	CD_DEAL_GOODS_ID,
						CD.PAK_GOODS_ID				AS	CD_PAK_GOODS_ID,
						CD.DISP_CLSF_NO				AS	CD_DISP_CLSF_NO,
						CD.COMP_GOODS_ID			AS	CD_COMP_GOODS_ID,
						CD.COMP_ITEM_ID				AS	CD_COMP_ITEM_ID,
						CD.GOODS_PRC_NO				AS	CD_GOODS_PRC_NO,
						CD.SALE_AMT					AS	CD_SALE_AMT,
						CD.PAY_AMT					AS	CD_PAY_AMT,
						CD.RMN_PAY_AMT				AS	CD_RMN_PAY_AMT,
						CD.CMS						AS	CD_CMS,
						CD.GOODS_CMSN_RT			AS	CD_GOODS_CMSN_RT,
						CD.TAX_GB_CD				AS	CD_TAX_GB_CD,
						CD.DLVRC_NO					AS	CD_DLVRC_NO,
						CD.RTN_DLVRC_NO				AS	CD_RTN_DLVRC_NO,
						CD.DLVRA_NO					AS	CD_DLVRA_NO,
						CD.RTRNA_NO					AS	CD_RTRNA_NO,
						CD.DLVR_NO						CD_DLVR_NO,
						CD.COMP_NO					AS	CD_COMP_NO,
						CD.UP_COMP_NO				AS	CD_UP_COMP_NO,
						CD.CLM_CPLT_DTM				AS	CD_CLM_CPLT_DTM,
						CD.RTN_MTD_CD				AS	CD_RTN_MTD_CD,
						CD.OUTSIDE_CLM_DTL_NO		AS	CD_OUTSIDE_CLM_DTL_NO,
						CD.STL_NO					AS	CD_STL_NO,
						CD.DLVR_CPLT_PIC_URL		AS	CD_DLVR_CPLT_PIC_URL,
						CD.DLVR_SMS					AS	CD_DLVR_SMS,
						CD.TWC_TCKT					AS	CD_TWC_TCKT,
						CD.DLVR_CPLT_YN				AS	CD_DLVR_CPLT_YN,
						FN_GET_GOODS_STOCK(OD.GOODS_ID, OD.ITEM_NO) AS CD_STK_QTY,
						(CD.PAY_AMT * CD.CLM_QTY) + CD.RMN_PAY_AMT AS CD_RFD_PAY_TOT_AMT,
						CB.ST_ID					AS	CB_ST_ID,
						CB.CLM_TP_CD				AS	CB_CLM_TP_CD,
						CB.CLM_STAT_CD				AS	CB_CLM_STAT_CD,
						CB.ORD_MDA_CD				AS	CB_ORD_MDA_CD,
						CB.CHNL_ID					AS	CB_CHNL_ID,
						CB.SWAP_YN					AS	CB_SWAP_YN,
						CB.ACPT_DTM					AS	CB_ACPT_DTM,
						CB.CNC_DTM					AS	CB_CNC_DTM,
						CB.CPLT_DTM					AS	CB_CPLT_DTM,
						CB.ACPTR_NO					AS	CB_ACPTR_NO,
						CB.CNCR_NO					AS	CB_CNCR_NO,
						CB.CPLTR_NO					AS	CB_CPLTR_NO,
						CB.OUTSIDE_CLM_NO			AS	CB_OUTSIDE_CLM_NO,
						CB.ORDR_SHOW_YN				AS	CB_ORDR_SHOW_YN,
						CASE
							WHEN CB.CLM_TP_CD = '30'
							THEN ( SELECT CDT.ITEM_NM FROM CLAIM_DETAIL CDT WHERE CDT.CLM_NO = CD.CLM_NO ORDER BY CDT.CLM_DTL_SEQ DESC LIMIT 1)
							ELSE CD.ITEM_NM
						END AS CD_ITEM_NM,
						CASE
							WHEN CB.CLM_TP_CD = '30'
							THEN ( SELECT CDT.ITEM_NO FROM CLAIM_DETAIL CDT WHERE CDT.CLM_NO = CD.CLM_NO ORDER BY CDT.CLM_DTL_SEQ DESC LIMIT 1)
							ELSE CD.ITEM_NO
						END AS CD_ITEM_NO,
						(SELECT DISP_CLSF_NM FROM DISPLAY_CATEGORY WHERE DISP_CLSF_NO = CD.DISP_CLSF_NO) AS CD_DISP_CLSF_NM,
						(
							SELECT IFNULL(SUM(APL_AMT), 0)
							FROM APL_BNFT AB
							WHERE AB.ORD_NO = OD.ORD_NO AND AB.ORD_DTL_SEQ = OD.ORD_DTL_SEQ AND AB.APL_BNFT_GB_CD = '20' AND AB.APL_BNFT_TP_CD  = '210'
						) AS CD_CP_DC_AMT,		/* 상품 쿠폰 할인 금액 */
						(
							SELECT	IFNULL(SUM(APL_AMT), 0)
							FROM APL_BNFT AB
							WHERE	AB.ORD_NO = OD.ORD_NO AND AB.ORD_DTL_SEQ = OD.ORD_DTL_SEQ AND AB.APL_BNFT_GB_CD = '20' AND AB.APL_BNFT_TP_CD  = '220'
						) AS CD_CART_CP_DC_AMT,	/** 장바구니 쿠폰 할인 금액 */
						(SELECT BND_NM_KO FROM BRAND_BASE WHERE BND_NO = (SELECT BND_NO FROM GOODS_BASE WHERE GOODS_ID = CD.GOODS_ID)) AS CD_BND_NM_KO,	/* 브랜드명 국문 */
						(
							 SELECT GROUP_CONCAT( GB.GOODS_NM, ',')
							 FROM GOODS_BASE GB
							 WHERE GB.GOODS_ID IN (
								SELECT ODC.CSTRT_GOODS_ID
								FROM ORD_DTL_CSTRT ODC
								INNER JOIN ORDER_DETAIL ODD ON ODC.ORD_NO = ODD.ORD_NO AND ODC.ORD_DTL_SEQ = ODD.ORD_DTL_SEQ
								WHERE ODC.ORD_NO  = OD.ORD_NO AND ODC.CSTRT_GOODS_GB_CD = '30'
								ORDER BY ODD.ORD_DTL_SEQ ASC
							)
						) AS CD_SUB_GOODS_NM, /*사은품명*/
						CASE WHEN (SELECT COMP_GB_CD FROM COMPANY_BASE CB WHERE CB.COMP_NO = CD.COMP_NO) = '20' THEN '10'
						ELSE (SELECT DLVR_PRCS_TP_CD FROM ORDER_BASE X1 WHERE X1.ORD_NO = CD.ORD_NO)
						END CD_DLVR_PRCS_TP_CD,
						ROW_NUMBER() OVER(PARTITION BY OD.ORD_NO, OD.ORD_DTL_SEQ, CD.CLM_NO ORDER BY CD.CLM_DTL_SEQ DESC) AS CLM_DTL_SEQ_ORDER,
						CASE WHEN CD.CLM_DTL_TP_CD IN ('10', '20') THEN 'Y'
						     WHEN CD.CLM_DTL_TP_CD = '30' 
						     THEN CASE WHEN MIN(CD.CLM_DTL_STAT_CD) OVER(PARTITION BY CD.CLM_NO, CD.ORD_NO, CD.ORD_DTL_SEQ) = '310'
						     		   THEN CASE WHEN MAX(CD.CLM_DTL_STAT_CD) OVER(PARTITION BY CD.CLM_NO, CD.ORD_NO, CD.ORD_DTL_SEQ) = 410
						     		   			 THEN 'N'
						     		   			 ELSE 'Y'
						     		   		 END
						     		   WHEN MIN(CD.CLM_DTL_STAT_CD) OVER(PARTITION BY CD.CLM_NO, CD.ORD_NO, CD.ORD_DTL_SEQ) = '360'
						     		   THEN CASE WHEN MAX(CD.CLM_DTL_STAT_CD) OVER(PARTITION BY CD.CLM_NO, CD.ORD_NO, CD.ORD_DTL_SEQ) = 410
						     		   			 THEN 'Y'
						     		   			 ELSE 'N'
						     		   		 END
						     		   WHEN MIN(CD.CLM_DTL_STAT_CD) OVER(PARTITION BY CD.CLM_NO, CD.ORD_NO, CD.ORD_DTL_SEQ) = '350'
						     		   THEN 'Y'
						     		   ELSE 'Y'
						     	   END
						     WHEN CD.CLM_DTL_TP_CD = '40' 
						     THEN CASE WHEN MIN(CD.CLM_DTL_STAT_CD) OVER(PARTITION BY CD.CLM_NO, CD.ORD_NO, CD.ORD_DTL_SEQ) = '310'
						     		   THEN CASE WHEN MAX(CD.CLM_DTL_STAT_CD) OVER(PARTITION BY CD.CLM_NO, CD.ORD_NO, CD.ORD_DTL_SEQ) = 410
						     		   			 THEN 'Y'
						     		   			 ELSE 'N'
						     		   		 END
				     		   		   WHEN MIN(CD.CLM_DTL_STAT_CD) OVER(PARTITION BY CD.CLM_NO, CD.ORD_NO, CD.ORD_DTL_SEQ) = '360'
						     		   THEN CASE WHEN MAX(CD.CLM_DTL_STAT_CD) OVER(PARTITION BY CD.CLM_NO, CD.ORD_NO, CD.ORD_DTL_SEQ) = 410
						     		   			 THEN 'N'
						     		   			 ELSE 'Y'
						     		   		 END
						     		   WHEN MIN(CD.CLM_DTL_STAT_CD) OVER(PARTITION BY CD.CLM_NO, CD.ORD_NO, CD.ORD_DTL_SEQ) = '350'
						     		   THEN 'N'
						     		   ELSE 'N'
						     	   END
						     ELSE 'N'
						END AS VIEW_CLM_YN
					FROM (
						SELECT
							ORD_NO,
							ST_ID,
							ORD_STAT_CD,
							ORD_MDA_CD,
							MBR_NO,
							MBR_GRD_CD,
							ORD_NM,
							ORDR_ID,
							ORDR_EMAIL,
							ORDR_TEL,
							ORDR_MOBILE,
							ORDR_IP,
							ORD_ACPT_DTM,
							ORD_CPLT_DTM,
							OUTSIDE_ORD_NO,
							CHNL_ID,
							ORD_DTL_CNT,
							ORD_PRCS_RST_CD,
							ORD_PRCS_RST_MSG,
							DATA_STAT_CD,
							DLVR_PRCS_TP_CD,
							ORDR_SHOW_YN,
							MP_LNK_HIST_NO
						FROM
							ORDER_BASE OB
						WHERE
							ORD_NO = #{ordNo}
					) OB
					INNER JOIN ORDER_DETAIL OD ON (OB.ORD_NO = OD.ORD_NO)
					INNER JOIN GOODS_BASE GB ON (OD.GOODS_ID = GB.GOODS_ID)
					INNER JOIN GOODS_IMG GI ON (OD.GOODS_ID = GI.GOODS_ID AND GI.DLGT_YN = 'Y')
					INNER JOIN COMPANY_BASE CP ON (OD.COMP_NO = CP.COMP_NO )
					INNER JOIN CLAIM_DETAIL CD ON (OD.ORD_NO = CD.ORD_NO AND OD.ORD_DTL_SEQ = CD.ORD_DTL_SEQ)
					LEFT JOIN CLAIM_BASE CB ON CB.CLM_NO = CD.CLM_NO AND CB.CLM_STAT_CD &lt;> '40'
				) OBB
				WHERE OBB.VIEW_CLM_YN = 'Y'
				  AND OBB.CD_CLM_QTY <![CDATA[>]]> 0
				  AND OBB.ORG_CD_CLM_DTL_SEQ = CD_CLM_DTL_SEQ
			)OBB
			WHERE 
				LIST_DELIMITER = 'CLAIM'
		) LIST
		ORDER BY ORD_ACPT_DTM DESC, COMP_GB_CD, COMP_NO, IF(CD_CLM_NO = ORD_NO, 'Z00000000000000000', CD_CLM_NO) DESC, FORCE_DTL_STAT, ORD_DTL_SEQ
	</select>
 	
 	<select id="listOrderClaimDetail" resultType="biz.app.order.model.OrderDetailVO" >
		<!--
			Query Name : orderDetail.listOrderClaimDetail
			Description : 주문상세 클레임 접수 정보 추출
		-->
		SELECT	/* QUERYID(orderDetail.listOrderClaimDetail) */
					OD2.ORD_NO
					,OD2.ORD_DTL_SEQ
					, OD2.ORD_DTL_STAT_CD
					, IF(OD2.RMN_ORD_QTY = 0, '주문취소', (SELECT DTL_NM FROM CODE_DETAIL WHERE GRP_CD = 'ORD_DTL_STAT' AND DTL_CD = OD2.ORD_DTL_STAT_CD)) ORD_DTL_STAT_CD_NM
					, OD2.GOODS_ID			/* 상품 아이디 */
					, OD2.STK_MNG_YN			/* 재고 관리 여부 */
					, OD2.GOODS_NM			/* 상품 명 */
					,CASE 
				    	WHEN CLM_YN = 'Y' 
				    		THEN ( SELECT CDT.ITEM_NM FROM CLAIM_DETAIL CDT WHERE CDT.CLM_NO = OD2.CBT_CLM_NO ORDER BY CDT.CLM_DTL_SEQ DESC LIMIT 1)
							ELSE OD2.ITEM_NM
						END AS ITEM_NM
				    ,CASE 
				        WHEN CLM_YN = 'Y'
				            THEN ( SELECT CDT.ITEM_NO FROM CLAIM_DETAIL CDT WHERE CDT.CLM_NO = OD2.CBT_CLM_NO ORDER BY CDT.CLM_DTL_SEQ DESC LIMIT 1)
							ELSE OD2.ITEM_NO
				        END AS ITEM_NO
					, OD2.DEAL_GOODS_ID		/* 딜 상품 아이디 */
					, OD2.DISP_CLSF_NO		/* 전시 분류 번호 */
					, (SELECT DISP_CLSF_NM FROM DISPLAY_CATEGORY WHERE DISP_CLSF_NO = OD2.DISP_CLSF_NO) AS DISP_CLSF_NM
					, OD2.COMP_GOODS_ID	/* 업체 상품 아이디 */
					, OD2.COMP_ITEM_ID		/* 업체 단품 아이디 */
					, OD2.GOODS_PRC_NO		/* 상품 가격 번호 */
					, OD2.ORD_QTY				/* 주문 수량 */
					, OD2.CNC_QTY				/* 취소 수량 */
					, OD2.RTN_QTY				/* 반품 수량 */
					, OD2.RTN_CPLT_QTY		/* 반품 완료 수량 */
					, OD2.RTN_QTY - OD2.RTN_CPLT_QTY	 AS RTN_ING_QTY	/* 반품 진행 수량 */
					, OD2.RMN_ORD_QTY		/* 잔여 주문 수량 */
					, FN_GET_ORDER_CLAIM_ING_RTN_YN(OD2.ORD_NO, OD2.ORD_DTL_SEQ) AS RTN_ING_YN /* 반품 진행 여무 */
					, OD2.RMN_ORD_QTY -  OD2.RTN_CPLT_QTY AS VLD_ORD_QTY /* 유효 주문 수량 */
					, FN_GET_ORDER_CLAIM_EXC_QTY(OD2.ORD_NO, OD2.ORD_DTL_SEQ) AS CLM_EXC_ING_QTY	/* 클레임 교환 진행 수량 */
					, FN_GET_ORDER_CLAIM_ING_YN(OD2.ORD_NO, OD2.ORD_DTL_SEQ) AS CLM_ING_YN /* 클레임 진행중 여부 */
					, OD2.SALE_AMT			/* 판매 금액 */
					, OD2.PAY_AMT				/* 결제 금액 */
					, OD2.RMN_PAY_AMT		/* 잔여 결제 금액 */
					, (OD2.PAY_AMT * OD2.ORD_QTY) + OD2.RMN_PAY_AMT AS ORG_PAY_TOT_AMT		/* 원 결제 합계 금액 */
					, OD2.CMS					/* 수수료 */
					, OD2.GOODS_CMSN_RT	/* 상품수수료율 */
					, OD2.TAX_GB_CD			/* 과세 구분 코드 */
					, OD2.ORD_SVMN			/* 부여 적립금 */
					, OD2.SVMN_VLD_PRD		/* 적립금 유효 기간 */
					, OD2.SVMN_VLD_PRD_CD	/* 적립금 유효 기간 코드 */
					, OD2.FREE_DLVR_YN		/* 무료 배송 여부 */
					, OD2.HOT_DEAL_YN		/* 핫 딜 여부 */
					, OD2.DLVRC_NO			/* 배송비 번호 */
					, OD2.DLVR_NO				/* 배송 번호 */
					, CASE WHEN OD2.DLVR_NO &lt; 0 AND ADDDATE((SELECT DLVR_CPLT_DTM FROM DELIVERY WHERE DLVR_NO = OD2.DLVR_NO),7) &lt; SYSDATE() THEN 'N' ELSE 'Y' END AS COMPARE_DTM_YN
					, OD2.ORD_DLVRA_NO		/* 주문 배송지 번호 */
					, OD2.COMP_NO			/* 업체 번호 */
					, OD2.UP_COMP_NO		/* 상위 업체 번호 */
					, OD2.MBR_NO				/* 회원 번호 */
					, OD2.MD_USR_NO			/* MD 사용자 번호 */
					, OD2.GOODS_ESTM_REG_YN	/* 상품 평가 등록 여부 */
					, OD2.OUTSIDE_ORD_DTL_NO	/* 외부 주문 상세 번호*/
					, OD2.SYS_REGR_NO			/* 시스템 등록자 번호 */
					, OD2.SYS_REG_DTM			/* 시스템 등록 일시 */
					, OD2.SYS_UPDR_NO			/* 시스템 수정자 번호 */
					, OD2.SYS_UPD_DTM			/* 시스템 수정 일시 */
					, FN_GET_USER_NAME(OD2.SYS_REGR_NO) AS SYS_REGR_NM		/* 시스템 등록자 */
					, FN_GET_USER_NAME(OD2.SYS_UPDR_NO) AS SYS_UPDR_NM	/* 시스템 수정자 */
					, (SELECT FN_GET_COMPANY_NAME(OD2.COMP_NO) ) AS COMP_NM	/* 업체 명 */
					, (SELECT IMG_SEQ FROM GOODS_IMG WHERE GOODS_ID = OD2.GOODS_ID AND DLGT_YN = '${@framework.common.constants.CommonConstants@COMM_YN_Y}') AS IMG_SEQ /* 상품 대표이미지 순번 */
					, (SELECT IMG_PATH FROM GOODS_IMG WHERE GOODS_ID = OD2.GOODS_ID AND DLGT_YN = '${@framework.common.constants.CommonConstants@COMM_YN_Y}') AS IMG_PATH /* 상품 대표이미지 경로 */
					, (SELECT I.ADD_SALE_AMT FROM ITEM I WHERE I.ITEM_NO = OD2.ITEM_NO AND I.GOODS_ID = OD2.GOODS_ID) AS ADD_SALE_AMT
					, (SELECT BND_NM_KO FROM BRAND_BASE WHERE BND_NO = (SELECT BND_NO FROM GOODS_BASE WHERE GOODS_ID = OD2.GOODS_ID)) AS BND_NM_KO	/* 브랜드명 국문 */
					, OD2.ITEM_MNG_YN		/* 단품 관리 유무 */
					, OD2.RTN_PSB_YN			/* 반품 가능 여부 */
					, FN_ORDER_DEFAULT_HDC_CD(OD2.DLVRC_NO) AS DFT_HDC_CD
					, 0 as PRMT_DC_AMT		/* 프로모션 할인 금액 */
					, FN_GET_ORDER_DTL_CP_DC_AMT(OD2.ORD_NO, OD2.ORD_DTL_SEQ) AS CP_DC_AMT			/* 쿠폰 할인 금액 */
		FROM		(
					SELECT	
								OD.ORD_NO					/* 주문 번호 */
								, OD.ORD_DTL_SEQ			/* 주문 상세 순번 */
								, OD.ORD_DTL_STAT_CD
								, OD.GOODS_ID				/* 상품 아이디 */
								, OD.GOODS_NM			/* 상품 명 */
								, OD.ITEM_NO				/* 단품 번호 */
								, OD.ITEM_NM				/* 단품 명 */
								, OD.DEAL_GOODS_ID		/* 딜 상품 아이디 */
								, OD.DISP_CLSF_NO			/* 전시 분류 번호 */
								, OD.COMP_GOODS_ID		/* 업체 상품 아이디 */
								, OD.COMP_ITEM_ID		/* 업체 단품 아이디 */
								, OD.GOODS_PRC_NO		/* 상품 가격 번호 */
								, OD.ORD_QTY				/* 주문 수량 */
								, OD.CNC_QTY				/* 취소 수량 */
								, OD.RTN_QTY				/* 반품 수량 */
								, OD.RMN_ORD_QTY		/* 잔여 주문 수량 */
								, FN_GET_ORD_CLM_RTN_CPLT_QTY(OD.ORD_NO, OD.ORD_DTL_SEQ) AS RTN_CPLT_QTY /* 반품 완료 수량 */
								, OD.SALE_AMT				/* 판매 금액 */
								, OD.PAY_AMT				/* 결제 금액 */
								, OD.RMN_PAY_AMT		/* 잔여 결제 금액 */
								, OD.CMS						/* 수수료 */
								, OD.GOODS_CMSN_RT		/* 상품수수료율 */
								, OD.TAX_GB_CD				/* 과세 구분 코드 */
								, OD.ORD_SVMN				/* 부여 적립금 */
								, OD.SVMN_VLD_PRD		/* 적립금 유효 기간 */
								, OD.SVMN_VLD_PRD_CD	/* 적립금 유효 기간 코드 */
								, OD.FREE_DLVR_YN			/* 무료 배송 여부 */
								, OD.HOT_DEAL_YN			/* 핫 딜 여부 */
								, OD.DLVRC_NO				/* 배송비 번호 */
								, OD.DLVR_NO				/* 배송 번호 */
								, OD.ORD_DLVRA_NO		/* 주문 배송지 번호 */
								, OD.COMP_NO				/* 업체 번호 */
								, OD.UP_COMP_NO			/* 상위 업체 번호 */
								, OD.MBR_NO				/* 회원 번호 */
								, OD.MD_USR_NO			/* MD 사용자 번호 */
								, OD.GOODS_ESTM_REG_YN	/* 상품 평가 등록 여부 */
								, OD.OUTSIDE_ORD_DTL_NO	/* 외부 주문 상세 번호*/
								, OD.SYS_REGR_NO			/* 시스템 등록자 번호 */
								, OD.SYS_REG_DTM			/* 시스템 등록 일시 */
								, OD.SYS_UPDR_NO			/* 시스템 수정자 번호 */
								, OD.SYS_UPD_DTM			/* 시스템 수정 일시 */
								, GB.RTN_PSB_YN			/* 반품 가능 여부 */
								, GB.ITEM_MNG_YN			/* 단품 관리 유무 */
								, GB.STK_MNG_YN			/* 재고 관리 여부 */
								, (SELECT IF((SELECT CBT.CLM_NO FROM CLAIM_BASE CBT WHERE CBT.ORD_NO = #{ordNo} AND CBT.CLM_TP_CD IN('20', '30') AND CBT.CLM_STAT_CD != '40' ORDER BY
                                    CBT.CLM_NO DESC LIMIT 1 ) IS NULL, 'N', 'Y') FROM DUAL) AS CLM_YN
                				, (SELECT IFNULL((SELECT CBT.CLM_NO FROM CLAIM_BASE CBT WHERE CBT.ORD_NO = #{ordNo} AND CBT.CLM_TP_CD IN('20', '30') AND CBT.CLM_STAT_CD != '40' ORDER BY
                                    CBT.CLM_NO DESC LIMIT 1 ), '0' ) FROM DUAL ) AS CBT_CLM_NO
					FROM		ORDER_BASE     OB
			    	JOIN ORDER_DETAIL   OD ON ( OB.ORD_NO = OD.ORD_NO )
					INNER JOIN GOODS_BASE     GB ON GB.GOODS_ID = OD.GOODS_ID
					LEFT JOIN CLAIM_BASE     CB ON ( OB.ORD_NO = CB.ORD_NO
			                                 AND CB.CLM_TP_CD IN (
				        '10',
				        '20',
				        '30'
				    )
				                                     AND CB.CLM_STAT_CD IN (
				        '10',
				        '20'
				    ) )
				    LEFT JOIN CLAIM_DETAIL   CD ON ( CB.CLM_NO = CD.CLM_NO
			                                   AND OD.ORD_NO = CD.ORD_NO
			                                       AND OD.ORD_DTL_SEQ = CD.ORD_DTL_SEQ )
			        WHERE 1=1
					<if test="ordNo != null and ordNo != ''">
					AND OD.ORD_NO = #{ordNo}
					</if>
					<if test="ordDtlSeq != null">
					AND		OD.ORD_DTL_SEQ	= #{ordDtlSeq}
					</if>
					<if test="arrOrdDtlSeq != null">
						<foreach collection="arrOrdDtlSeq" item="ordDtlSeq" separator="," open="AND OD.ORD_DTL_SEQ IN (" close=")" >
							#{ordDtlSeq}
						</foreach>
					</if>
					<if test="rmnOrdQty0Over == true">
					AND 		OD.RMN_ORD_QTY  >0 
					</if>
					
					) OD2
		ORDER BY OD2.ORD_NO, OD2.COMP_NO, OD2.ORD_DTL_SEQ

 	</select>

	<update id="updateOrderDetail">
		<!--
			Query Name : orderDetail.updateOrderDetail
			Description : 주문 상세 수정
		-->
		UPDATE /*QUERYID(orderDetail.updateOrderDetail) */
			ORDER_DETAIL
		SET		SYS_UPDR_NO	= #{sysUpdrNo}				/* 시스템 수정자 번호 */
					, SYS_UPD_DTM	= NOW()				/* 시스템 수정 일시 */
					<if test="ordDtlStatCd != null and ordDtlStatCd != ''">
					, ORD_DTL_STAT_CD = #{ordDtlStatCd}	/* 주문 상세 상태 코드 */
					</if>
					<if test="ordDlvraNo != null and ordDlvraNo != ''">
					, ORD_DLVRA_NO = #{ordDlvraNo}		/* 주문 배송지 번호 */
					</if>
					<if test="dlvrNo != null and dlvrNo != ''">
					, DLVR_NO = #{dlvrNo}				/* 배송번호 */
					</if>
					<if test="itemNo != null and itemNo != ''">
					, ITEM_NO = #{itemNo}				/* 단품번호 */
					, ITEM_NM = #{itemNm}				/* 단품명 */
					</if>
					<if test="dlvrCpltPicUrl != null and dlvrCpltPicUrl != ''">
					, DLVR_CPLT_PIC_URL = #{dlvrCpltPicUrl}		/* 배송 완료 사진 URL */
					</if>
					<if test="dlvrCpltYn != null and dlvrCpltYn != ''">
					, DLVR_CPLT_YN = #{dlvrCpltYn}		/* 배송 완료 여부 */
					</if>
					<if test="isuSchdPnt != null">
					, ISU_SCHD_PNT = #{isuSchdPnt}		/* 발급 예정 포인트 */
					</if>
		WHERE	ORD_NO = #{ordNo}
		<if test="ordDtlSeq != null">
		AND		ORD_DTL_SEQ = #{ordDtlSeq}
		</if>
		<!-- 2021.03.29 by kek01 -->
		<if test='ordDtlAllDlvrCpltYn != null and ordDtlAllDlvrCpltYn eq "Y"'>
		AND     0 = (SELECT COUNT(DLVR_NO)
					   FROM DELIVERY D2 
					  WHERE D2.DLVR_NO IN (
					  		SELECT ODCDM.DLVR_NO 
					 		  FROM ORD_DTL_CSTRT_DLVR_MAP ODCDM 
					 		 WHERE ODCDM.ORD_DTL_CSTRT_NO IN (
					 				SELECT ODC.ORD_DTL_CSTRT_NO FROM ORD_DTL_CSTRT ODC WHERE ODC.ORD_NO = #{ordNo} AND ODC.ORD_DTL_SEQ = #{ordDtlSeq}
					 		       )
					        )
					    AND D2.DLVR_CPLT_DTM IS NULL
					)
		</if>
	</update>

	<select id="getOrderDetail" resultType="biz.app.order.model.OrderDetailVO" >
		<!--
			Query Name : orderDetail.getOrderDetail
			Description : 주문 상세 조회
		-->
		SELECT	/* QUERYID(orderDetail.getOrderDetail) */
					OD.ORD_NO					/* 주문 번호 */
					, OD.ORD_DTL_SEQ			/* 주문 상세 순번 */
					, OD.ORD_DTL_STAT_CD	/* 주문 상세 상태 코드 */
					, OD.GOODS_ID				/* 상품 아이디 */
					, OD.GOODS_NM			/* 상품 명 */
					, OD.ITEM_NO				/* 단품 번호 */
					, OD.ITEM_NM				/* 단품 명 */
					, OD.DEAL_GOODS_ID		/* 딜 상품 아이디 */
					, OD.DISP_CLSF_NO			/* 전시 분류 번호 */
					, OD.COMP_GOODS_ID		/* 업체 상품 아이디 */
					, OD.COMP_ITEM_ID		/* 업체 단품 아이디 */
					, OD.ORD_QTY				/* 주문 수량 */
					, OD.CNC_QTY				/* 취소 수량 */
					, OD.RTN_QTY				/* 반품 수량 */
					, OD.RMN_ORD_QTY		/* 잔여 주문 수량 */
					, FN_GET_ORDER_CLAIM_ING_YN(OD.ORD_NO, OD.ORD_DTL_SEQ) AS CLM_ING_YN /* 클레임 진행 여부 */
					, OD.SALE_AMT				/* 판매 금액 */
					, OD.PAY_AMT				/* 결제 금액 */
					, OD.RMN_PAY_AMT		/* 잔여 결제 금액 */
					, OD.CMS						/* 수수료 */
					, OD.GOODS_CMSN_RT		/* 상품수수료율 */
					, OD.TAX_GB_CD			/* 과세 구분 코드 */
					, OD.MD_USR_NO			/* MD 사용자 번호 */
					, OD.ORD_SVMN			/* 부여 적립금 */
					, OD.SVMN_VLD_PRD		/* 적립금 유효 기간 */
					, OD.SVMN_VLD_PRD_CD	/* 적립금 유효 기간 코드 */
					, OD.FREE_DLVR_YN			/* 무료 배송 여부 */
					, OD.HOT_DEAL_YN			/* 핫 딜 여부 */
					, OD.DLVRC_NO				/* 배송비 번호 */
					, OD.DLVR_NO				/* 배송 번호 */
					, OD.ORD_DLVRA_NO		/* 주문 배송지 번호 */
					, OD.COMP_NO				/* 업체 번호 */
					, OD.UP_COMP_NO			/* 상위 업체 번호 */
					, OD.MBR_NO				/* 회원 번호 */
					, OD.GOODS_ESTM_REG_YN	/* 상품 평가 등록 여부 */
					, OD.OUTSIDE_ORD_DTL_NO	/* 외부 주문 상세 번호*/
					, IFNULL(OD.ISU_SCHD_PNT, 0) AS ISU_SCHD_PNT	/* 발급 예정 포인트 */
					, OD.SYS_REGR_NO			/* 시스템 등록자 번호 */
					, OD.SYS_REG_DTM			/* 시스템 등록 일시 */
					, OD.SYS_UPDR_NO			/* 시스템 수정자 번호 */
					, OD.SYS_UPD_DTM			/* 시스템 수정 일시 */
					, FN_GET_USER_NAME(OD.SYS_REGR_NO) AS SYS_REGR_NM		/* 시스템 등록자 */
					, FN_GET_USER_NAME(OD.SYS_UPDR_NO) AS SYS_UPDR_NM	/* 시스템 수정자 */
					, ITEM.ADD_SALE_AMT 	/* 추가 판매 금액 */
					, ITEM.WEB_STK_QTY 		/* 웹재고 */
					, GB.STK_MNG_YN  		/* 웹재고 관리여부 */
					, GB.DLVRC_PLC_NO 		/* 배송정책번호 */
					, GB.GOODS_CSTRT_TP_CD  /* 상품 구성 유형 코드 */
		FROM		ORDER_DETAIL OD
		INNER JOIN ITEM ITEM ON OD.ITEM_NO = ITEM.ITEM_NO
		INNER JOIN GOODS_BASE GB ON GB.GOODS_ID = OD.GOODS_ID
		WHERE	1 = 1
		<if test='ordNo != null and ordNo !="" '>
		AND		ORD_NO = #{ordNo}
		</if>
		<if test='ordDtlSeq != null and ordDtlSeq != "" '>
		AND		ORD_DTL_SEQ		= #{ordDtlSeq}
		</if>
		<if test='itemNo != null and itemNo !="" '>
		AND		OD.ITEM_NO = #{itemNo}
		</if>
		<if test='mbrNo != null and mbrNo !="" ' >
		AND		OD.MBR_NO = #{mbrNo}
		</if>
	</select>

	<update id="updateOrderDetailClaimQty">
		<!--
			Query Name : orderDetail.updateOrderDetailClaimQty
			Description : 주문상세 클레임 수량 수정
		-->
		UPDATE	ORDER_DETAIL
		SET		SYS_UPDR_NO	= #{sysUpdrNo}			/* 시스템 수정자 번호 */
					, SYS_UPD_DTM	= NOW()					/* 시스템 수정 일시 */
					<if test="cncQty != null">
					, CNC_QTY = CNC_QTY + #{cncQty}						/* 취소 수량 */
					, RMN_ORD_QTY = RMN_ORD_QTY - #{cncQty}		/* 잔여 주문 수량 */
					</if>
					<if test="rtnQty != null">
					, RTN_QTY = RTN_QTY + #{rtnQty}						/* 반품 수량 */
					</if>
		WHERE	ORD_NO = #{ordNo}
		AND		ORD_DTL_SEQ = #{ordDtlSeq}
	</update>
















	<select id="getOrderDetailLiveCnt" resultType="java.lang.Integer">
		<!--
			Query Name : orderDetail.getOrderDetailLiveCnt
			Description : 주문 상세 수 조회 (주문접소 또는 주문완료)
		-->
		SELECT	/* QUERYID(orderDetail.getOrderDetailLiveCnt) */
					COUNT(ORD_NO)
		FROM 	ORDER_DETAIL
		WHERE 	ORD_NO = #{ordNo}
		AND 		ORD_DTL_STAT_CD IN ('${@framework.common.constants.CommonConstants@ORD_DTL_STAT_110 }', '${@framework.common.constants.CommonConstants@ORD_DTL_STAT_120 }')
	</select>

	<select id="getOrderDetailCntByMbrNo" resultType="java.lang.Integer">
		<!--
			Query Name : orderDetail.getOrderDetailCntByMbrNo
			Description : 주문 상세 수 조회
		-->
		SELECT	/* QUERYID(orderDetail.getOrderDetailCntByMbrNo) */
				COUNT(OD.ORD_NO)
		FROM 	ORDER_DETAIL OD
		        INNER JOIN ORDER_BASE OB  ON OD.ORD_NO = OB.ORD_NO 
		        						 AND OB.ORD_STAT_CD = '${@framework.common.constants.CommonConstants@ORD_STAT_20 }'  /*주문완료*/
		        					  /* AND OD.RMN_ORD_QTY &gt; 0 */     /*주문취소제외*/
		WHERE 	OD.MBR_NO = #{mbrNo}
		  AND   OB.ORD_NO != #{ordNo}  /*현재 주문건 제외한 이전 주문내역 조회*/
	</select>

	<select id="getOrderPurchaseConfirmCntByMbrNo" resultType="java.lang.Integer" >
		<!--
			Query Name : orderDetail.listOrderPurchaseConfirmByMbrNo
			Description : 주문 구매확정 리스트 조회
		-->
		SELECT	/* QUERYID(orderDetail.listOrderPurchaseConfirmByMbrNo) */
				count(DISTINCT OD.ORD_NO)
		FROM 	ORDER_DETAIL OD
		        INNER JOIN ORDER_BASE OB  ON OD.ORD_NO = OB.ORD_NO 
		        						 AND OB.ORD_STAT_CD = '${@framework.common.constants.CommonConstants@ORD_STAT_20 }'  			/*주문완료*/
		        						 AND OD.ORD_DTL_STAT_CD = '${@framework.common.constants.CommonConstants@ORD_DTL_STAT_170 }'	/*구매확정*/
										 AND OD.RMN_ORD_QTY &gt; 0     /*주문취소제외*/
		WHERE 	OD.MBR_NO = #{mbrNo}
	</select>

	<update id="updateOrderDetailComment">
		<!--
			Query Name : orderDetail.updateOrderDetailComment
			Description : 상품평 등록 여부 수정
		-->
		UPDATE 	ORDER_DETAIL
			SET	GOODS_ESTM_REG_YN = #{goodsEstmRegYn}		/* 상품 평가 등록 여부 */
			   ,GOODS_ESTM_NO = #{goodsEstmNo}				/* 상품 평가 번호 */
			   ,SYS_UPDR_NO = #{sysUpdrNo}					/* 시스템 수정자 번호 */
			   ,SYS_UPD_DTM = SYSDATE()						/* 시스템 수정 일시 */
		WHERE 	ORD_NO = #{ordNo}
		AND 	ORD_DTL_SEQ = #{ordDtlSeq}
	</update>

	<update id="updateOrderDetailPlg">
		<!--
			Query Name : orderDetail.updateOrderDetailComment
			Description : 상품평 등록 여부 수정
		-->
		UPDATE 	ORDER_DETAIL
			SET	GOODS_ESTM_REG_YN = #{goodsEstmRegYn}		/* 상품 평가 등록 여부 */
			   ,SYS_UPDR_NO = #{sysUpdrNo}					/* 시스템 수정자 번호 */
			   ,SYS_UPD_DTM = SYSDATE()						/* 시스템 수정 일시 */
		WHERE 	GOODS_ESTM_NO = #{goodsEstmNo}
	</update>

	 <select id="listUnpaidOrder" resultType="biz.app.order.model.OrderDetailVO" >
	 <!--
			Query Name : orderDetail.listUnpaidOrder
			Description : batch 에서 사용. 미입금된 주문 목록 조회
		-->
	 SELECT DISTINCT ob.ord_no
      FROM order_base ob, pay_base pb, order_detail od
      WHERE   ob.ord_stat_cd = '${@framework.common.constants.CommonConstants@ORD_STAT_10}' /* 주문접수 */
            AND ob.ord_prcs_rst_cd = '${@framework.common.constants.CommonConstants@ORD_PRCS_RST_0000}'  /* 정상처리 */
            AND data_stat_cd = '${@framework.common.constants.CommonConstants@DATA_STAT_01}' /* 활성 */
            AND NOW() > STR_TO_DATE(pb.DPST_SCHD_DT, '%Y%m%d%H%i%s')   /* 2021.04.11, 서성민, 가상계좌 주문 즉시 취소 오류 수정 */
            AND ob.ord_no = pb.ord_no
            AND pb.ord_clm_gb_cd = '${@framework.common.constants.CommonConstants@ORD_CLM_GB_10}'
            AND pb.pay_gb_cd = '${@framework.common.constants.CommonConstants@PAY_GB_10}' /*결제 */
            AND pb.pay_means_cd IN ('${@framework.common.constants.CommonConstants@PAY_MEANS_30}','${@framework.common.constants.CommonConstants@PAY_MEANS_40}')
            AND pb.pay_stat_cd =  '${@framework.common.constants.CommonConstants@PAY_STAT_00}' /* 대기 */
            AND pb.cnc_yn = '${@framework.common.constants.CommonConstants@COMM_YN_N}'
            AND ob.ord_no = od.ord_no
            AND od.rmn_ord_qty &gt; 0
            order by ord_no asc
	 </select>
	 
	 <select id="getExchangeOrderDetail" resultType="biz.app.order.model.OrderDetailVO" >
		<!--
			Query Name : orderDetail.getOrderDetail
			Description : 주문 상세 조회
		-->
		SELECT
		    ORD_NO					/* 주문 번호 */,
		    ORD_DTL_SEQ			/* 주문 상세 순번 */,
		    ORD_DTL_STAT_CD	/* 주문 상세 상태 코드 */,
		    GOODS_ID				/* 상품 아이디 */,
		    GOODS_NM			/* 상품 명 */,
		    DEAL_GOODS_ID		/* 딜 상품 아이디 */,
		    DISP_CLSF_NO			/* 전시 분류 번호 */,
		    COMP_GOODS_ID		/* 업체 상품 아이디 */,
		    COMP_ITEM_ID		/* 업체 단품 아이디 */,
		    ORD_QTY				/* 주문 수량 */,
		    CNC_QTY				/* 취소 수량 */,
		    RTN_QTY				/* 반품 수량 */,
		    RMN_ORD_QTY		/* 잔여 주문 수량 */,
		    CLM_ING_YN /* 클레임 진행 여부 */,
		    SALE_AMT				/* 판매 금액 */,
		    PAY_AMT				/* 결제 금액 */,
		    RMN_PAY_AMT		/* 잔여 결제 금액 */,
		    CMS						/* 수수료 */,
		    GOODS_CMSN_RT		/* 상품수수료율 */,
		    TAX_GB_CD			/* 과세 구분 코드 */,
		    MD_USR_NO			/* MD 사용자 번호 */,
		    ORD_SVMN			/* 부여 적립금 */,
		    SVMN_VLD_PRD		/* 적립금 유효 기간 */,
		    SVMN_VLD_PRD_CD	/* 적립금 유효 기간 코드 */,
		    FREE_DLVR_YN			/* 무료 배송 여부 */,
		    HOT_DEAL_YN			/* 핫 딜 여부 */,
		    DLVRC_NO				/* 배송비 번호 */,
		    DLVR_NO				/* 배송 번호 */,
		    ORD_DLVRA_NO		/* 주문 배송지 번호 */,
		    COMP_NO				/* 업체 번호 */,
		    UP_COMP_NO			/* 상위 업체 번호 */,
		    MBR_NO				/* 회원 번호 */,
		    GOODS_ESTM_REG_YN	/* 상품 평가 등록 여부 */,
		    OUTSIDE_ORD_DTL_NO	/* 외부 주문 상세 번호*/,
		    SYS_REGR_NO			/* 시스템 등록자 번호 */,
		    SYS_REG_DTM			/* 시스템 등록 일시 */,
		    SYS_UPDR_NO			/* 시스템 수정자 번호 */,
		    SYS_UPD_DTM			/* 시스템 수정 일시 */,
		    SYS_REGR_NM		/* 시스템 등록자 */,
		    SYS_UPDR_NM	/* 시스템 수정자 */,
		    ADD_SALE_AMT 	/* 추가 판매 금액 */,
		    WEB_STK_QTY 		/* 웹재고 */,
		    STK_MNG_YN  		/* 웹재고 관리여부 */,
		    DLVRC_PLC_NO
		    ,CASE 
		    	WHEN CLM_YN = '${@framework.common.constants.CommonConstants@COMM_YN_Y}' 
		    		THEN ( SELECT CDT.ITEM_NM FROM CLAIM_DETAIL CDT WHERE CDT.CLM_NO = A.CBT_CLM_NO ORDER BY CDT.CLM_DTL_SEQ DESC LIMIT 1)
					ELSE A.ITEM_NM
				END AS ITEM_NM,
		    CASE 
		        WHEN CLM_YN = '${@framework.common.constants.CommonConstants@COMM_YN_Y}'
		            THEN ( SELECT CDT.ITEM_NO FROM CLAIM_DETAIL CDT WHERE CDT.CLM_NO = A.CBT_CLM_NO ORDER BY CDT.CLM_DTL_SEQ DESC LIMIT 1)
					ELSE A.ITEM_NO
		        END AS ITEM_NO
		FROM
		(
		
			SELECT	/* QUERYID(orderDetail.getOrderDetail) */
				OD.ORD_NO					/* 주문 번호 */
				, OD.ORD_DTL_SEQ			/* 주문 상세 순번 */
				, OD.ORD_DTL_STAT_CD	/* 주문 상세 상태 코드 */
				, OD.GOODS_ID				/* 상품 아이디 */
				, OD.GOODS_NM			/* 상품 명 */
				, OD.ITEM_NO				/* 단품 번호 */
				, OD.ITEM_NM				/* 단품 명 */
				, OD.DEAL_GOODS_ID		/* 딜 상품 아이디 */
				, OD.DISP_CLSF_NO			/* 전시 분류 번호 */
				, OD.COMP_GOODS_ID		/* 업체 상품 아이디 */
				, OD.COMP_ITEM_ID		/* 업체 단품 아이디 */
				, OD.ORD_QTY				/* 주문 수량 */
				, OD.CNC_QTY				/* 취소 수량 */
				, OD.RTN_QTY				/* 반품 수량 */
				, OD.RMN_ORD_QTY		/* 잔여 주문 수량 */
				, FN_GET_ORDER_CLAIM_ING_YN(OD.ORD_NO, OD.ORD_DTL_SEQ) AS CLM_ING_YN /* 클레임 진행 여부 */
				, OD.SALE_AMT				/* 판매 금액 */
				, OD.PAY_AMT				/* 결제 금액 */
				, OD.RMN_PAY_AMT		/* 잔여 결제 금액 */
				, OD.CMS						/* 수수료 */
				, OD.GOODS_CMSN_RT		/* 상품수수료율 */
				, OD.TAX_GB_CD			/* 과세 구분 코드 */
				, OD.MD_USR_NO			/* MD 사용자 번호 */
				, OD.ORD_SVMN			/* 부여 적립금 */
				, OD.SVMN_VLD_PRD		/* 적립금 유효 기간 */
				, OD.SVMN_VLD_PRD_CD	/* 적립금 유효 기간 코드 */
				, OD.FREE_DLVR_YN			/* 무료 배송 여부 */
				, OD.HOT_DEAL_YN			/* 핫 딜 여부 */
				, OD.DLVRC_NO				/* 배송비 번호 */
				, OD.DLVR_NO				/* 배송 번호 */
				, OD.ORD_DLVRA_NO		/* 주문 배송지 번호 */
				, OD.COMP_NO				/* 업체 번호 */
				, OD.UP_COMP_NO			/* 상위 업체 번호 */
				, OD.MBR_NO				/* 회원 번호 */
				, MB.MBR_GB_CD			/* 회원 구분 코드 */
				, OD.GOODS_ESTM_REG_YN	/* 상품 평가 등록 여부 */
				, OD.OUTSIDE_ORD_DTL_NO	/* 외부 주문 상세 번호*/
				, OD.SYS_REGR_NO			/* 시스템 등록자 번호 */
				, OD.SYS_REG_DTM			/* 시스템 등록 일시 */
				, OD.SYS_UPDR_NO			/* 시스템 수정자 번호 */
				, OD.SYS_UPD_DTM			/* 시스템 수정 일시 */
				, FN_GET_USER_NAME(OD.SYS_REGR_NO) AS SYS_REGR_NM		/* 시스템 등록자 */
				, FN_GET_USER_NAME(OD.SYS_UPDR_NO) AS SYS_UPDR_NM	/* 시스템 수정자 */
				, ITEM.ADD_SALE_AMT 	/* 추가 판매 금액 */
				, ITEM.WEB_STK_QTY 		/* 웹재고 */
				, GB.STK_MNG_YN  		/* 웹재고 관리여부 */
				, GB.DLVRC_PLC_NO 		/* 배송정책번호 */
				, (SELECT IF((SELECT CBT.CLM_NO FROM CLAIM_BASE CBT WHERE CBT.ORD_NO = #{ordNo} AND CBT.CLM_TP_CD IN('20', '30') AND CBT.CLM_STAT_CD != '40' ORDER BY
                                    CBT.CLM_NO DESC LIMIT 1 ) IS NULL, 'N', 'Y') FROM DUAL) AS CLM_YN
                , (SELECT IFNULL((SELECT CBT.CLM_NO FROM CLAIM_BASE CBT WHERE CBT.ORD_NO = #{ordNo} AND CBT.CLM_TP_CD IN('20', '30') AND CBT.CLM_STAT_CD != '40' ORDER BY
                                    CBT.CLM_NO DESC LIMIT 1 ), '0' ) FROM DUAL ) AS CBT_CLM_NO
			FROM
			    ORDER_BASE     OB
			    JOIN ORDER_DETAIL   OD ON ( OB.ORD_NO = OD.ORD_NO )
			    INNER JOIN ITEM           ITEM ON OD.ITEM_NO = ITEM.ITEM_NO
			    INNER JOIN GOODS_BASE     GB ON GB.GOODS_ID = OD.GOODS_ID
			    LEFT JOIN MEMBER_BASE MB ON MB.MBR_NO = OD.MBR_NO 
			    LEFT JOIN CLAIM_BASE     CB ON ( OB.ORD_NO = CB.ORD_NO
			                                 AND CB.CLM_TP_CD IN (
			        '${@framework.common.constants.CommonConstants@CLM_TP_10}',
			        '${@framework.common.constants.CommonConstants@CLM_TP_20}',
			        '${@framework.common.constants.CommonConstants@CLM_TP_30}'
			    )
			                                     AND CB.CLM_STAT_CD IN (
			        '${@framework.common.constants.CommonConstants@CLM_STAT_10}',
			        '${@framework.common.constants.CommonConstants@CLM_STAT_20}'
			    ) )
			    LEFT JOIN CLAIM_DETAIL   CD ON ( CB.CLM_NO = CD.CLM_NO
			                                   AND OD.ORD_NO = CD.ORD_NO
			                                       AND OD.ORD_DTL_SEQ = CD.ORD_DTL_SEQ )
			WHERE	1 = 1
			<if test='ordNo != null and ordNo !="" '>
			AND		OD.ORD_NO = #{ordNo}
			</if>
			<if test='ordDtlSeq != null and ordDtlSeq != "" '>
			AND		OD.ORD_DTL_SEQ		= #{ordDtlSeq}
			</if>
			<if test='itemNo != null and itemNo !="" '>
			AND		OD.ITEM_NO = #{itemNo}
			</if>
			<if test='mbrNo != null and mbrNo !="" ' >
			AND		OD.MBR_NO = #{mbrNo}
			</if>
		)A
	</select>
	
	<select id="listOrderDetailShort" resultType="biz.app.order.model.OrderDetailVO" >
		<!--
			Query Name : orderDetail.listOrderDetailShort
			Description : 주문상세 간략 리스트 추출
		-->
		SELECT	/* QUERYID(orderDetail.listOrderDetailShort) */
				OD.ORD_NO
				, OD.ORD_DTL_SEQ
				, OD.ORD_DTL_STAT_CD
				, OD.MKI_GOODS_YN
				, OD.MKI_GOODS_OPT_CONTENT
				, CB.COMP_GB_CD
				, OB.DLVR_PRCS_TP_CD
				, OD.RMN_ORD_QTY 
		  FROM ORDER_DETAIL OD
	INNER JOIN ORDER_BASE OB ON (OB.ORD_NO = OD.ORD_NO)
	INNER JOIN COMPANY_BASE CB ON (OD.COMP_NO = CB.COMP_NO)
		 WHERE OD.ORD_NO = #{ordNo}
	</select>
	
	<select id="listFrequentOrderGoods" resultType="biz.app.order.model.OrderDetailVO" >
		<!--
			Query Name : orderDetail.listFrequentOrderGoods
			Description : 자주 구매한 상품 리스트
		-->
		SELECT A1.GOODS_ID, SUM(A1.RMN_ORD_QTY) AS ORD_QTY
		  FROM ORDER_DETAIL A1
		  JOIN ORDER_BASE A2
		    ON A2.ORD_NO = A1.ORD_NO   
		   AND A2.ORD_STAT_CD = '${@framework.common.constants.CommonConstants@ORD_STAT_20}'
		  JOIN GOODS_BASE A3
		    ON A3.GOODS_ID = A1.GOODS_ID
		   AND A3.GOODS_STAT_CD = '${@framework.common.constants.CommonConstants@GOODS_STAT_40}'
		   AND NOW() BETWEEN A3.SALE_STRT_DTM AND A3.SALE_END_DTM
		 WHERE A1.MBR_NO = #{mbrNo}
		   AND A1.RMN_ORD_QTY > 0
		   AND A1.ORD_DTL_STAT_CD IN ('${@framework.common.constants.CommonConstants@ORD_DTL_STAT_170}')
		   AND A2.ORD_ACPT_DTM >= DATE_ADD(NOW(), INTERVAL #{searchMonth}*-1 MONTH)
		 GROUP BY A1.GOODS_ID
		 ORDER BY A1.RMN_ORD_QTY DESC, A1.GOODS_ID
		 LIMIT 10
	</select>
	    
	<select id="listOrderDetailDlvrCpltForPurchaseConfirm" resultType="biz.app.order.model.OrderDetailVO">
		<!--
			Query Name : orderDetail.listOrderDetailDlvrCpltForPurchaseConfirm
			Description : 구매확정을 위한 배송완료된 주문상세 목록 조회
						  주문상세 건별 모든 배송이 완료되었나를 체크해야되서 몇번 싸서 작성함. 양해바람 - 2021.03.18 by kek01
						  주문에 딸려있는 모든 클레임이 종료되어야 구매확정 처리가 가능하다 - 2021.04.24
		-->
		/* QUERYID(orderDetail.listOrderDetailDlvrCpltForPurchaseConfirm) */ 
		SELECT /*C*/ * FROM (
		SELECT /*B*/ * 
					,(
					    /*CLM_DTL_STAT_CD - 310:교환회수접수, 320:교환회수지시, 330:교환회수중, 340:교환회수완료, 350:교환회수거부완료, 360:교환회수승인완료 / 410:교환배송접수, 420:교환배송지시, 430:교환배송준비중, 440:교환배송중, 450:배송완료*/
					    select if(sum(z.clm_ing_count) is null, 0, sum(z.clm_ing_count))
					    from (
							    SELECT case when (CB.CLM_TP_CD = '20' AND CLM_DTL_TP_CD = '20' AND ORD_RTN_QTY_EQUAL = 'N' and CLM_DTL_STAT_CD IN ('210','220','230','240'))  then 1
							                when (CB.CLM_TP_CD = '20' AND CLM_DTL_TP_CD = '20' AND ORD_RTN_QTY_EQUAL = 'Y' and CLM_DTL_STAT_CD IN ('210','220','230','240','260'))  then 1  /*전체수량 반품시 거부완료는 구매확정O */
							                when (CB.CLM_TP_CD = '10' AND CLM_DTL_TP_CD = '10' AND CLM_DTL_STAT_CD IN ('110'))                    then 1
							                when (CB.CLM_TP_CD = '30' and MIN(case when CLM_DTL_TP_CD='30' then CLM_DTL_STAT_CD end) OVER (PARTITION BY cd.ORD_NO, cd.ORD_DTL_SEQ) != '350' /*350:교환회수거부완료가 아닐때*/
							                                          and CLM_DTL_STAT_CD IN ('310','320','330','340',  '410','420','430','440')) then 1
							                when (CB.CLM_TP_CD = '30' /*맞교환일때*/
							                						  AND IF(IF(CB2.COMP_GB_CD = '10', CB.DLVR_PRCS_TP_CD, '10') = '10','N',CB.SWAP_YN) = 'Y'
							                                          AND MIN(case when CLM_DTL_TP_CD='30' then CLM_DTL_STAT_CD end) OVER (PARTITION BY cd.ORD_NO, cd.ORD_DTL_SEQ) = '350' /*350:교환회수거부완료 일때*/
							                                          and CLM_DTL_STAT_CD IN ('310','320','330','340',  '410','420','430','440')) then 1   
							                when (CB.CLM_TP_CD = '30' /*일반교환일때*/
							                                          AND IF(IF(CB2.COMP_GB_CD = '10', CB.DLVR_PRCS_TP_CD, '10') = '10','N',CB.SWAP_YN) = 'N'
							                						  AND MIN(case when CLM_DTL_TP_CD='30' then CLM_DTL_STAT_CD end) OVER (PARTITION BY cd.ORD_NO, cd.ORD_DTL_SEQ) = '350') /*350:교환회수거부완료 일때*/
							                                                                                                                      then 0   /*클레임종료 - 교환회수거부완료 존재시 무조건 클레임종료로 취급*/
							                else 0 end as clm_ing_count
								  FROM CLAIM_DETAIL CD
								       INNER JOIN CLAIM_BASE CB      ON CD.CLM_NO = CB.CLM_NO
								       INNER JOIN COMPANY_BASE CB2   ON CD.COMP_NO = CB2.COMP_NO
								 WHERE (cd.ORD_NO, cd.ORD_DTL_SEQ) = (b.ord_no, b.ord_dtl_seq) 
				             ) z
				      ) as CLM_ING_COUNT
		FROM (				     
		SELECT /*A*/ ORD_NO, 
					 ORD_DTL_SEQ, 
					 MIN(DLVR_CPLT_DTM) AS DLVR_CPLT_DTM,
					 MIN(MBR_NO) 		AS MBR_NO,
					 MIN(ISU_SCHD_PNT) 	AS ISU_SCHD_PNT,
					 MIN(PAY_AMT) 		AS PAY_AMT,
					 MIN(RMN_ORD_QTY) 	AS RMN_ORD_QTY,
					 MIN(RTN_QTY) 		AS RTN_QTY,	
					 MIN(SYS_REG_DTM) 	AS SYS_REG_DTM,
					 MIN(ORD_RTN_QTY_EQUAL) AS ORD_RTN_QTY_EQUAL
		FROM (
		SELECT /*Z*/ * FROM (
		SELECT /*Y*/ *
		       ,SUM(IF(IFNULL(DLVR_CPLT_DTM,'') = '', 0, 1)) OVER(PARTITION BY ORD_NO, ORD_DTL_SEQ) AS ORD_DLVR_CPLT_CNT
		       ,COUNT(ORD_NO) OVER(PARTITION BY ORD_NO, ORD_DTL_SEQ) AS ORD_DLVR_CNT
		       ,IF(ORD_QTY = (RTN_QTY_TMP - RETURN_REJ_COUNT + CNC_QTY), 'Y','N') AS ORD_RTN_QTY_EQUAL /*전체수량이 반품수량-반품거부수량+취소수량 과 동일 여부*/
		       ,(RTN_QTY_TMP - RETURN_REJ_COUNT) as RTN_QTY 
		FROM (        
		SELECT /*X*/ * FROM (
				SELECT
					 DV.DLVR_NO						/* 배송 번호 */
					,DV.DLVR_CPLT_DTM				/* 배송 완료 일시 */
					,OD.ORD_NO						/* 주문번호 */
					,OD.ORD_DTL_SEQ					/* 주문상세번호 */
					,OD.ORD_DTL_STAT_CD				/* 주문 상세 상태 코드 */
					,OD.MBR_NO
					,IFNULL(OD.ISU_SCHD_PNT,0)	AS ISU_SCHD_PNT
					,IFNULL(OD.PAY_AMT,0)		AS PAY_AMT
					,IFNULL(OD.ORD_QTY,0)		AS ORD_QTY
					,IFNULL(OD.RMN_ORD_QTY,0)	AS RMN_ORD_QTY
					,IFNULL(OD.RTN_QTY,0)		AS RTN_QTY_TMP					
					,IFNULL(OD.CNC_QTY,0)		AS CNC_QTY					
					,OD.SYS_REG_DTM 
					,MIN(ODC.ORD_CSTRT_SEQ) OVER (PARTITION BY DV.DLVR_NO, ODC.ORD_NO, ODC.ORD_DTL_SEQ) AS MIN_CSTRT_SEQ  
					,( SELECT IF(SUM(Z.CLM_RETURN_REJ_COUNT) IS NULL, 0, SUM(Z.CLM_RETURN_REJ_COUNT))
					    FROM (
							    SELECT CASE WHEN (CB.CLM_TP_CD = '20' AND CLM_DTL_TP_CD = '20' AND CLM_DTL_STAT_CD IN ('250'))  THEN cd.clm_qty
							                ELSE 0 END AS CLM_RETURN_REJ_COUNT
								  FROM CLAIM_DETAIL CD
								       INNER JOIN CLAIM_BASE CB      ON CD.CLM_NO = CB.CLM_NO
								 WHERE (CD.ORD_NO, CD.ORD_DTL_SEQ) = (OD.ORD_NO, OD.ORD_DTL_SEQ) 
				             ) Z
				    ) AS RETURN_REJ_COUNT /*반품거부건 갯수*/
				FROM
					DELIVERY DV
					LEFT OUTER JOIN ORD_DTL_CSTRT_DLVR_MAP ODCDM 
							INNER JOIN ORD_DTL_CSTRT ODC	ON (ODC.ORD_DTL_CSTRT_NO = ODCDM.ORD_DTL_CSTRT_NO)
							INNER JOIN ORDER_DETAIL OD		ON (OD.ORD_NO = ODC.ORD_NO AND OD.ORD_DTL_SEQ = ODC.ORD_DTL_SEQ AND OD.RMN_ORD_QTY <![CDATA[>]]> 0) /*주문취소건 구매확정제외*/
							INNER JOIN ORDER_BASE OB		ON (OB.ORD_NO = OD.ORD_NO)
					ON ( ODCDM.DLVR_NO = DV.DLVR_NO )
				WHERE 1=1
				  AND DV.ORD_CLM_GB_CD = '${@framework.common.constants.CommonConstants@ORD_CLM_GB_10}'			/*주문*/
				  AND DV.DLVR_NO <![CDATA[>]]> 0
				  AND OD.ORD_DTL_STAT_CD = '${@framework.common.constants.CommonConstants@ORD_DTL_STAT_160}'	/* 배송완료 */
		) X
		ORDER BY ORD_NO, ORD_DTL_SEQ			/* 배송완료된 주문상세(해당되는 배송번호 전체) 조회*/
		) Y 									/* 배송완료된 주문상세별 배송건수와 배송완료건수 조회*/
		) Z 
		WHERE ORD_DLVR_CPLT_CNT = ORD_DLVR_CNT	/* 배송완료된 주문상세별 모든 배송이 완료된 것만 조회 */
		) A 
		GROUP BY ORD_NO, ORD_DTL_SEQ			/* 배송완료된 주문상세별 모든 배송완료건 중 최초 배송일자 조회 */
		) B
		WHERE DLVR_CPLT_DTM <![CDATA[<=]]> DATE_SUB(NOW() , INTERVAL 14 DAY) /* 최초 배송일자가 14일(2주) 지난건 조회 = 구매확정대상건 */
		<!-- WHERE 60  <![CDATA[<=]]>  TIMESTAMPDIFF(MINUTE, DLVR_CPLT_DTM, NOW())  /* 최초 배송일시가 60분 지난건 조회 = 구매확정대상건 */ -->
		) C
		WHERE C.CLM_ING_COUNT = 0	/*클레임이 모두 종료되었을때*/
	</select>
	
	<select id="listValidGoodsStock" resultType="biz.app.order.model.OrderDetailVO">
		<!--
			Query Name : orderDetail.listValidGoodsStock
			Description : 주문 재고 체크 -  orderComplete 재고 한번더 체크
		-->
		SELECT /* QUERYID(orderDetail.listValidGoodsStock) */ 
			* FROM (
			SELECT
				GOODS_NM
				,CASE
					WHEN GOODS_STAT_CD = '${@framework.common.constants.CommonConstants@GOODS_STAT_50}'
						THEN '${@framework.common.constants.CommonConstants@SALE_PSB_10}'		/* 상품 판매 중지 : 판매중지 */
					WHEN GOODS_STAT_CD = '${@framework.common.constants.CommonConstants@GOODS_STAT_60}'
						THEN '${@framework.common.constants.CommonConstants@SALE_PSB_20}'		/* 상품 판매 종료 : 판매종료 */
					WHEN SALE_STRT_DTM <![CDATA[>]]> SYSDATE() OR SALE_END_DTM <![CDATA[<]]> SYSDATE()
						THEN '${@framework.common.constants.CommonConstants@SALE_PSB_20}'		/* 상품 판매 기간 : 판매종료 */
					WHEN GOODS_STAT_CD != '${@framework.common.constants.CommonConstants@GOODS_STAT_40}'
						THEN '${@framework.common.constants.CommonConstants@SALE_PSB_20}'		/* 기타 상품 상태 : 판매 종료 */
					WHEN STOCK_QTY <![CDATA[<=]]> 0 
						THEN '${@framework.common.constants.CommonConstants@SALE_PSB_30}'		/* 단품 재고 오류 ; 품절 */
					WHEN ORD_QTY <![CDATA[>]]> STOCK_QTY
							THEN '${@framework.common.constants.CommonConstants@SALE_PSB_40}'		/* 단품 재고 오류 : 구매가능 수량 초과 */	
					ELSE '${@framework.common.constants.CommonConstants@SALE_PSB_00}' 																																	/* 정상 */
				  END AS SALE_PSB_CD	/* 판매가능상태코드 */
			FROM(
				SELECT
					GB.GOODS_NM,
					GB.GOODS_STAT_CD,
					GB.SALE_STRT_DTM,
					GB.SALE_END_DTM,
					OD.ORD_QTY,
					FN_GET_GOODS_STOCK(GB.GOODS_ID, OD.ITEM_NO) AS STOCK_QTY
				FROM ORDER_DETAIL OD
		  INNER JOIN GOODS_BASE GB
		  		  ON GB.GOODS_ID = OD.GOODS_ID 
			   WHERE OD.ORD_NO = #{ordNo}
			)A
		) B
		WHERE	
			SALE_PSB_CD != '${@framework.common.constants.CommonConstants@SALE_PSB_00}'						/* 정상 */
	</select>
		
	<select id="listOrderDetailForClaimTarget" resultType="biz.app.order.model.OrderDetailVO">
		<!--
			Query Name : orderDetail.listOrderDetailForClaimTarget
			Description : 교환 반품 시 클레임 타겟 리스트
		-->
		WITH RECURSIVE tmp AS
		(
			SELECT OD.ORD_NO, OD.ORD_DTL_SEQ, CAST('' AS CHAR(20)) AS CLM_NO, CAST('' AS CHAR(20)) AS CLM_DTL_SEQ, OD.RMN_ORD_QTY - OD.RTN_QTY AS QTY,  '1' AS LVL FROM ORDER_DETAIL OD 
			WHERE OD.ORD_NO = #{ordNo} AND OD.ORD_DTL_SEQ = #{ordDtlSeq}
		UNION ALL
			SELECT CD.ORD_NO, CD.ORD_DTL_SEQ, CAST(CD.CLM_NO AS CHAR(20)) AS CLM_NO, CAST(CD.CLM_DTL_SEQ AS CHAR(20)) AS CLM_DTL_SEQ, IFNULL(CD.RMN_CLM_QTY,0) AS QTY,  T.LVL+1 AS LVL 
			  FROM tmp T 
		INNER JOIN CLAIM_DETAIL CD ON T.ORD_NO = CD.ORD_NO AND T.ORD_DTL_SEQ = CD.ORD_DTL_SEQ
		INNER JOIN CLAIM_BASE CB ON CB.CLM_NO = CD.CLM_NO
			 WHERE T.LVL = 1
			   AND CB.CLM_TP_CD = '30' AND CD.CLM_DTL_TP_CD = '40' AND CB.CLM_STAT_CD = '30'
		) 
		SELECT ORD_NO, ORD_DTL_SEQ, CLM_NO, CLM_DTL_SEQ, QTY AS CLM_TG_QTY FROM tmp
	  ORDER BY ORD_NO, ORD_DTL_SEQ, CLM_NO, CAST(CLM_DTL_SEQ AS SIGNED)
	</select>		
</mapper>
